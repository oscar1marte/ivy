Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_isinstance", "assertions/check_less", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/5_applied_libraries", "contributing/6_helpful_resources", "contributing/building_the_docs", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/extensions", "data_classes/array/extensions/ArrayWithExtensions", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/extensions", "data_classes/container/extensions/ContainerWithExtensions", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_formatting", "deep_dive/11_function_arguments", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/17_ivy_frontends_tests", "deep_dive/18_exception_handling", "deep_dive/19_continuous_integration", "deep_dive/1_function_types", "deep_dive/2_superset_behaviour", "deep_dive/3_backend_setting", "deep_dive/4_arrays", "deep_dive/5_containers", "deep_dive/6_data_types", "deep_dive/7_devices", "deep_dive/8_inplace_updates", "deep_dive/9_function_wrapping", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/extensions", "functional/ivy/extensions/flatten", "functional/ivy/extensions/flatten/flatten_array", "functional/ivy/extensions/flatten/flatten_container", "functional/ivy/extensions/flatten/flatten_functional", "functional/ivy/extensions/flatten/static_flatten_container", "functional/ivy/extensions/hann_window", "functional/ivy/extensions/hann_window/hann_window_container", "functional/ivy/extensions/hann_window/hann_window_functional", "functional/ivy/extensions/hann_window/static_hann_window_container", "functional/ivy/extensions/heaviside", "functional/ivy/extensions/heaviside/heaviside_array", "functional/ivy/extensions/heaviside/heaviside_container", "functional/ivy/extensions/heaviside/heaviside_functional", "functional/ivy/extensions/heaviside/static_heaviside_container", "functional/ivy/extensions/is_ivy_sparse_array", "functional/ivy/extensions/is_native_sparse_array", "functional/ivy/extensions/kaiser_window", "functional/ivy/extensions/kaiser_window/kaiser_window_container", "functional/ivy/extensions/kaiser_window/kaiser_window_functional", "functional/ivy/extensions/kaiser_window/static_kaiser_window_container", "functional/ivy/extensions/lcm", "functional/ivy/extensions/lcm/lcm_array", "functional/ivy/extensions/lcm/lcm_container", "functional/ivy/extensions/lcm/lcm_functional", "functional/ivy/extensions/lcm/static_lcm_container", "functional/ivy/extensions/max_pool2d", "functional/ivy/extensions/max_pool2d/max_pool2d_array", "functional/ivy/extensions/max_pool2d/max_pool2d_container", "functional/ivy/extensions/max_pool2d/max_pool2d_functional", "functional/ivy/extensions/max_pool2d/static_max_pool2d_container", "functional/ivy/extensions/median", "functional/ivy/extensions/median/median_array", "functional/ivy/extensions/median/median_container", "functional/ivy/extensions/median/median_functional", "functional/ivy/extensions/median/static_median_container", "functional/ivy/extensions/moveaxis", "functional/ivy/extensions/moveaxis/moveaxis_array", "functional/ivy/extensions/moveaxis/moveaxis_container", "functional/ivy/extensions/moveaxis/moveaxis_functional", "functional/ivy/extensions/moveaxis/static_moveaxis_container", "functional/ivy/extensions/native_sparse_array", "functional/ivy/extensions/native_sparse_array_to_indices_values_and_shape", "functional/ivy/extensions/ndenumerate", "functional/ivy/extensions/pad", "functional/ivy/extensions/pad/pad_array", "functional/ivy/extensions/pad/pad_container", "functional/ivy/extensions/pad/pad_functional", "functional/ivy/extensions/pad/static_pad_container", "functional/ivy/extensions/sinc", "functional/ivy/extensions/sinc/sinc_array", "functional/ivy/extensions/sinc/sinc_container", "functional/ivy/extensions/sinc/sinc_functional", "functional/ivy/extensions/sinc/static_sinc_container", "functional/ivy/extensions/vorbis_window", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/arrays_equal", "functional/ivy/general/arrays_equal/arrays_equal_array", "functional/ivy/general/arrays_equal/arrays_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/variable_data/static_variable_data_container", "functional/ivy/gradients/variable_data/variable_data_array", "functional/ivy/gradients/variable_data/variable_data_container", "functional/ivy/gradients/variable_data/variable_data_functional", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/5_applied_libraries.rst", "contributing/6_helpful_resources.rst", "contributing/building_the_docs.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/extensions.rst", "data_classes/array/extensions/ArrayWithExtensions.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/extensions.rst", "data_classes/container/extensions/ContainerWithExtensions.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_formatting.rst", "deep_dive/11_function_arguments.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/17_ivy_frontends_tests.rst", "deep_dive/18_exception_handling.rst", "deep_dive/19_continuous_integration.rst", "deep_dive/1_function_types.rst", "deep_dive/2_superset_behaviour.rst", "deep_dive/3_backend_setting.rst", "deep_dive/4_arrays.rst", "deep_dive/5_containers.rst", "deep_dive/6_data_types.rst", "deep_dive/7_devices.rst", "deep_dive/8_inplace_updates.rst", "deep_dive/9_function_wrapping.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/extensions/flatten.rst", "functional/ivy/extensions/flatten/flatten_array.rst", "functional/ivy/extensions/flatten/flatten_container.rst", "functional/ivy/extensions/flatten/flatten_functional.rst", "functional/ivy/extensions/flatten/static_flatten_container.rst", "functional/ivy/extensions/hann_window.rst", "functional/ivy/extensions/hann_window/hann_window_container.rst", "functional/ivy/extensions/hann_window/hann_window_functional.rst", "functional/ivy/extensions/hann_window/static_hann_window_container.rst", "functional/ivy/extensions/heaviside.rst", "functional/ivy/extensions/heaviside/heaviside_array.rst", "functional/ivy/extensions/heaviside/heaviside_container.rst", "functional/ivy/extensions/heaviside/heaviside_functional.rst", "functional/ivy/extensions/heaviside/static_heaviside_container.rst", "functional/ivy/extensions/is_ivy_sparse_array.rst", "functional/ivy/extensions/is_native_sparse_array.rst", "functional/ivy/extensions/kaiser_window.rst", "functional/ivy/extensions/kaiser_window/kaiser_window_container.rst", "functional/ivy/extensions/kaiser_window/kaiser_window_functional.rst", "functional/ivy/extensions/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/extensions/lcm.rst", "functional/ivy/extensions/lcm/lcm_array.rst", "functional/ivy/extensions/lcm/lcm_container.rst", "functional/ivy/extensions/lcm/lcm_functional.rst", "functional/ivy/extensions/lcm/static_lcm_container.rst", "functional/ivy/extensions/max_pool2d.rst", "functional/ivy/extensions/max_pool2d/max_pool2d_array.rst", "functional/ivy/extensions/max_pool2d/max_pool2d_container.rst", "functional/ivy/extensions/max_pool2d/max_pool2d_functional.rst", "functional/ivy/extensions/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/extensions/median.rst", "functional/ivy/extensions/median/median_array.rst", "functional/ivy/extensions/median/median_container.rst", "functional/ivy/extensions/median/median_functional.rst", "functional/ivy/extensions/median/static_median_container.rst", "functional/ivy/extensions/moveaxis.rst", "functional/ivy/extensions/moveaxis/moveaxis_array.rst", "functional/ivy/extensions/moveaxis/moveaxis_container.rst", "functional/ivy/extensions/moveaxis/moveaxis_functional.rst", "functional/ivy/extensions/moveaxis/static_moveaxis_container.rst", "functional/ivy/extensions/native_sparse_array.rst", "functional/ivy/extensions/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/extensions/ndenumerate.rst", "functional/ivy/extensions/pad.rst", "functional/ivy/extensions/pad/pad_array.rst", "functional/ivy/extensions/pad/pad_container.rst", "functional/ivy/extensions/pad/pad_functional.rst", "functional/ivy/extensions/pad/static_pad_container.rst", "functional/ivy/extensions/sinc.rst", "functional/ivy/extensions/sinc/sinc_array.rst", "functional/ivy/extensions/sinc/sinc_container.rst", "functional/ivy/extensions/sinc/sinc_functional.rst", "functional/ivy/extensions/sinc/static_sinc_container.rst", "functional/ivy/extensions/vorbis_window.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/arrays_equal/arrays_equal_array.rst", "functional/ivy/general/arrays_equal/arrays_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/variable_data/static_variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_array.rst", "functional/ivy/gradients/variable_data/variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_functional.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_isinstance", "check_less", "check_shape", "check_true", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "try_import_ivy_jax", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Applied Libraries", "Helpful Resources", "Building the Docs", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Extensions", "ArrayWithExtensions", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Extensions", "ContainerWithExtensions", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Navigating the Code", "Formatting", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Ivy Frontend Tests", "Exception Handling", "Continuous Integration", "Function Types", "Superset Behaviour", "Backend Setting", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Function Wrapping", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Extensions", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "is_ivy_sparse_array", "is_native_sparse_array", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "vorbis_window", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "arrays_equal", "ivy.Array.arrays_equal", "ivy.arrays_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "ivy.Container.static_variable_data", "ivy.Array.variable_data", "ivy.Container.variable_data", "ivy.variable_data", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 17, 21, 24, 31, 32, 33, 35, 36, 60, 61, 109, 110, 145, 150, 158, 163, 181, 1528], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 153, 154, 155, 157, 158, 159, 160, 161, 162, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 1527, 1528, 1534, 1576, 1577], "check_al": 1, "result": [1, 2, 4, 36, 42, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 160, 161, 163, 166, 180, 1528], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 32, 36, 143, 146, 149, 151, 152, 163, 165, 1576, 1577], "one": [1, 2, 17, 22, 24, 32, 33, 35, 36, 37, 52, 53, 60, 61, 62, 63, 74, 75, 80, 81, 82, 83, 95, 96, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 165, 166, 168, 180, 1528], "arg": [1, 2, 3, 4, 17, 20, 40, 47, 48, 49, 95, 96, 149, 151, 163, 167], "i": [1, 2, 17, 20, 21, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 1527, 1528], "fals": [1, 2, 4, 6, 7, 8, 12, 14, 17, 25, 26, 27, 28, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 74, 75, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 148, 149, 150, 151, 155, 158, 160, 163, 166, 167, 168], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 147, 149, 152, 156, 157, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 1528, 1576, 1577], "check_all_or_any_fn": 1, "fn": [1, 3, 103, 104, 149, 151, 163, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "type": [1, 3, 17, 23, 29, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 156, 157, 159, 160, 161, 163, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 1528], "all": [1, 3, 4, 31, 32, 33, 34, 35, 36, 37, 38, 40, 47, 48, 49, 50, 51, 52, 53, 62, 63, 70, 71, 74, 75, 78, 79, 88, 89, 90, 91, 95, 96, 99, 100, 107, 108, 111, 112, 119, 120, 123, 124, 127, 128, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 179, 180, 181, 191, 1527, 1528], "limit": [1, 3, 36, 92, 95, 96, 97, 98, 143, 146, 148, 149, 151, 154, 166, 180], "0": [1, 3, 17, 20, 36, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 145, 146, 147, 148, 149, 150, 151, 155, 157, 158, 163, 165, 166, 167, 168, 180, 1528], "must": [1, 3, 8, 16, 31, 33, 35, 36, 37, 38, 39, 42, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 147, 149, 151, 153, 154, 156, 158, 159, 163, 167, 168], "exist": [1, 3, 31, 32, 35, 37, 40, 62, 63, 74, 75, 95, 96, 123, 124, 145, 146, 147, 148, 149, 153, 154, 155, 160, 161, 163, 180, 1527], "accord": [1, 3, 35, 37, 40, 54, 55, 62, 63, 86, 87, 103, 104, 135, 136, 147, 148, 149, 153, 158], "given": [1, 3, 32, 33, 35, 36, 37, 40, 42, 62, 63, 72, 73, 74, 75, 78, 79, 92, 95, 96, 111, 112, 113, 114, 121, 122, 123, 124, 127, 128, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 179, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "check_ani": 1, "ar": [1, 4, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 58, 59, 60, 61, 62, 63, 70, 71, 74, 75, 78, 79, 80, 81, 92, 95, 96, 97, 98, 101, 102, 107, 108, 109, 110, 111, 112, 119, 120, 123, 124, 127, 128, 129, 130, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 181, 191, 1527, 1528], "check_elem_in_list": [1, 149], "elem": [1, 5], "list": [1, 5, 35, 37, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 90, 91, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 157, 158, 159, 163, 166, 167, 168, 180, 1528], "check_equ": [1, 149], "x1": [1, 6, 12, 14, 15, 42, 45, 46, 54, 55, 58, 59, 60, 61, 70, 71, 80, 81, 103, 104, 107, 108, 109, 110, 111, 112, 119, 120, 129, 130, 133, 134, 144, 146, 147, 149, 151, 158], "x2": [1, 6, 12, 14, 15, 54, 55, 58, 59, 60, 61, 62, 63, 70, 71, 80, 81, 103, 104, 107, 108, 109, 110, 111, 112, 119, 120, 129, 130, 144, 146, 147, 149, 151, 158], "invers": [1, 6, 7, 58, 59, 107, 108, 119, 120, 179], "check_exist": 1, "x": [1, 7, 13, 17, 20, 29, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 157, 158, 160, 163, 165, 166, 167, 168, 1528], "check_fals": 1, "express": [1, 8, 16, 58, 59, 60, 61, 107, 108, 109, 110, 143, 145, 149, 163, 168], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 9, 52, 53, 80, 81, 101, 102, 129, 130, 142, 150, 158], "dtype": [1, 9, 42, 45, 46, 52, 53, 54, 55, 68, 69, 78, 79, 80, 81, 86, 87, 101, 102, 103, 104, 109, 110, 111, 112, 117, 118, 127, 128, 129, 130, 135, 136, 142, 143, 146, 148, 149, 150, 153, 155, 158, 159, 161, 163, 165, 1528], "check_gather_input_valid": 1, "param": [1, 10, 11, 92, 95, 96, 97, 98, 111, 112, 168], "indic": [1, 10, 11, 40, 52, 53, 60, 61, 62, 63, 68, 69, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 95, 96, 101, 102, 103, 104, 109, 110, 111, 112, 117, 118, 119, 120, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 143, 144, 152, 168, 1528], "axi": [1, 10, 43, 44, 52, 53, 60, 61, 62, 63, 70, 71, 72, 73, 74, 75, 80, 81, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 101, 102, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 129, 130, 133, 134, 135, 136, 137, 138, 144, 146, 148, 149, 151, 153, 154, 157, 158, 160, 163, 165, 168, 179], "batch_dim": [1, 10, 11, 62, 63, 111, 112], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 12, 14, 151], "check_isinst": 1, "allowed_typ": [1, 13], "check_less": [1, 151], "check_shap": [1, 95, 96], "check_tru": 1, "true": [1, 16, 42, 43, 44, 45, 46, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 148, 149, 150, 151, 153, 154, 157, 158, 160, 163, 166, 167, 168], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 95, 96, 141, 142, 143, 147, 148, 149, 165, 166], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 38, 44, 46, 48, 49, 50, 51, 53, 55, 57, 59, 61, 62, 63, 64, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 94, 96, 98, 100, 102, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 118, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 144, 145, 146, 147, 148, 150, 153, 154, 156, 157, 159, 160, 161, 162, 163, 165, 166, 168, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1532, 1533, 1534, 1537, 1538, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1566, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1577], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 37, 44, 46, 47, 48, 49, 50, 51, 53, 55, 57, 59, 61, 62, 63, 64, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 113, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 161, 162, 163, 165, 168, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1532, 1533, 1534, 1537, 1538, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1566, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1577], "class": [17, 23, 29, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 148, 150, 154, 156, 157, 158, 159, 163, 164, 166, 167, 168, 178, 179, 180, 1527, 1528], "backend_handl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 155, 163, 1528], "contextmanag": 17, "modul": [17, 20, 22, 24, 33, 35, 40, 90, 91, 92, 95, 96, 97, 98, 139, 140, 143, 148, 149, 153, 155, 156, 160, 163, 164, 166, 168, 179, 180, 1528], "base": [17, 36, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 148, 150, 151, 152, 157, 158, 161, 163, 179], "object": [17, 78, 79, 92, 95, 96, 97, 98, 99, 100, 105, 106, 107, 108, 111, 112, 127, 128, 148, 149, 157, 161, 165, 168], "__init__": [17, 20, 22, 37, 42, 45, 46, 92, 95, 96, 97, 98, 142, 149, 151, 155, 158, 163, 165, 166, 167, 168, 1528], "choose_random_backend": 17, "exclud": [17, 18, 86, 87, 135, 136, 146, 163], "none": [17, 18, 22, 29, 38, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 163, 165, 167, 168], "clear_backend_stack": 17, "current_backend": [17, 142, 149, 151, 153, 163], "kwarg": [17, 20, 47, 48, 49, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 149, 151, 163, 167], "return": [17, 20, 21, 22, 24, 29, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 1528], "current": [17, 20, 21, 22, 29, 33, 35, 36, 37, 40, 62, 63, 92, 95, 96, 97, 98, 147, 149, 150, 151, 153, 154, 155, 157, 158, 159, 161, 163, 168, 179, 180, 1528], "prioriti": [17, 20, 36, 95, 96, 160], "global_backend": [17, 20], "argument": [17, 20, 22, 31, 37, 47, 48, 49, 50, 51, 58, 59, 62, 63, 92, 95, 96, 97, 98, 99, 100, 107, 108, 111, 112, 141, 142, 143, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 161, 163, 165, 166, 1527], "": [17, 20, 22, 23, 29, 32, 33, 34, 35, 36, 37, 38, 40, 52, 53, 62, 63, 64, 65, 70, 71, 86, 87, 111, 112, 113, 114, 119, 120, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 179, 180, 1527, 1528], "paramet": [17, 20, 21, 22, 24, 37, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 148, 151, 161, 163, 165, 166, 179], "from": [17, 20, 22, 23, 31, 32, 33, 34, 35, 36, 37, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 180, 1527, 1528, 1534], "which": [17, 20, 21, 22, 24, 31, 32, 33, 35, 36, 37, 39, 40, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 179, 180, 1527, 1528], "try": [17, 20, 30, 32, 33, 35, 36, 37, 40, 95, 96, 143, 151, 156, 157, 158, 163, 165, 180, 1528], "infer": [17, 20, 21, 52, 53, 62, 63, 74, 75, 101, 102, 111, 112, 123, 124, 141, 155, 158, 159, 161, 163, 168], "when": [17, 20, 31, 32, 34, 35, 36, 37, 38, 39, 52, 53, 54, 55, 70, 71, 72, 73, 78, 79, 80, 81, 86, 87, 92, 95, 96, 97, 98, 101, 102, 103, 104, 119, 120, 121, 122, 127, 128, 129, 130, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 168, 180], "global": [17, 20, 22, 23, 29, 62, 63, 76, 77, 92, 95, 96, 97, 98, 111, 112, 125, 126, 149, 151, 153, 155, 158, 159, 163], "set": [17, 20, 22, 23, 29, 31, 34, 36, 47, 50, 51, 60, 61, 62, 63, 64, 65, 70, 71, 80, 81, 83, 84, 85, 86, 87, 95, 96, 109, 110, 111, 112, 113, 114, 119, 120, 129, 130, 132, 133, 134, 135, 136, 141, 142, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 163, 165, 166], "ret": [17, 20, 22, 29, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 145, 149, 150, 160, 163, 168], "exampl": [17, 20, 22, 23, 29, 33, 35, 36, 37, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 179, 180, 1528], "If": [17, 20, 22, 23, 31, 34, 35, 36, 37, 38, 40, 42, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 64, 65, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 180, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "import": [17, 20, 21, 32, 36, 37, 38, 39, 90, 91, 139, 140, 142, 143, 145, 146, 147, 149, 150, 155, 156, 157, 158, 159, 160, 163, 165, 166, 168, 180, 1528, 1534], "numpi": [17, 20, 22, 23, 31, 32, 35, 36, 37, 39, 62, 63, 111, 112, 142, 144, 147, 148, 150, 151, 152, 154, 155, 158, 159, 160, 163, 165, 168, 1527, 1528], "np": [17, 20, 37, 107, 108, 111, 112, 142, 144, 148, 149, 150, 154, 156, 158, 159, 160, 163, 165, 166, 168, 1527, 1528], "arrai": [17, 20, 35, 36, 37, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145, 146, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 180, 181, 191, 1527, 1528], "2": [17, 20, 35, 36, 37, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 144, 146, 147, 148, 149, 150, 151, 155, 157, 158, 160, 162, 163, 165, 166, 167, 168, 180, 1528], "print": [17, 20, 22, 23, 29, 35, 36, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 146, 148, 157, 163, 165, 166, 167, 1528], "function": [17, 20, 21, 22, 23, 24, 31, 36, 40, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 150, 152, 154, 155, 156, 160, 162, 164, 165, 166, 167, 178, 179, 1527, 1528], "py": [17, 20, 22, 35, 36, 37, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 163, 165, 167, 168], "noqa": [17, 20, 22, 58, 59, 107, 108], "The": [17, 20, 22, 24, 30, 31, 33, 34, 35, 37, 38, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 179, 1527, 1528], "set_backend": [17, 20, 22, 29, 147, 153, 155, 158, 161, 163, 165, 168, 1528], "ha": [17, 20, 22, 31, 32, 33, 36, 37, 70, 71, 74, 75, 82, 83, 86, 87, 95, 96, 103, 104, 111, 112, 119, 120, 123, 124, 131, 132, 135, 136, 142, 143, 145, 146, 147, 148, 149, 150, 153, 154, 155, 158, 159, 160, 161, 163, 164, 165, 167, 168, 179, 180], "over": [17, 20, 31, 33, 35, 36, 60, 61, 86, 87, 88, 89, 90, 91, 103, 104, 109, 110, 119, 120, 135, 136, 137, 138, 139, 140, 145, 146, 148, 155, 160, 163, 165, 180], "ani": [17, 20, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 47, 48, 49, 52, 53, 58, 59, 62, 63, 88, 89, 90, 91, 92, 105, 106, 107, 108, 111, 112, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 180, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1527, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "pass": [17, 20, 36, 37, 90, 91, 92, 95, 96, 97, 98, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 155, 156, 157, 158, 160, 161, 180], "jax": [17, 20, 22, 23, 32, 33, 35, 36, 37, 39, 64, 65, 113, 114, 142, 144, 147, 148, 149, 150, 152, 154, 155, 158, 159, 160, 163, 165, 168, 180, 1528], "fn_name_from_version_specific_fn_nam": 17, "name": [17, 21, 24, 35, 36, 37, 40, 82, 83, 131, 132, 142, 143, 144, 145, 146, 148, 149, 150, 154, 155, 158, 163, 166, 168], "specif": [17, 21, 24, 31, 36, 37, 62, 63, 105, 106, 111, 112, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 168, 179, 180, 1527, 1528, 1534], "provid": [17, 21, 24, 31, 35, 36, 52, 53, 62, 63, 64, 65, 80, 81, 86, 87, 88, 89, 95, 96, 101, 102, 111, 112, 129, 130, 135, 136, 137, 138, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 167, 179, 180], "origin": [17, 21, 24, 33, 36, 37, 42, 45, 46, 60, 61, 74, 75, 86, 87, 92, 95, 96, 97, 98, 109, 110, 119, 120, 123, 124, 135, 136, 149, 155, 158, 160, 161, 163], "point": [17, 21, 24, 33, 36, 37, 54, 55, 58, 59, 60, 61, 70, 71, 78, 79, 86, 87, 103, 104, 107, 108, 109, 110, 119, 120, 127, 128, 135, 136, 142, 144, 145, 146, 147, 148, 149, 152, 154, 156, 160, 163, 165, 166, 179], "get_backend": [17, 153, 155], "specifi": [17, 22, 36, 52, 53, 54, 55, 60, 61, 62, 63, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 86, 87, 88, 89, 93, 94, 95, 96, 103, 104, 111, 112, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 135, 136, 137, 138, 141, 144, 148, 149, 150, 153, 154, 158, 159, 160, 163, 166, 167], "isn": [17, 22, 36, 111, 112, 161, 166, 180], "t": [17, 22, 24, 32, 33, 35, 36, 37, 38, 40, 42, 45, 46, 90, 91, 111, 112, 139, 140, 141, 146, 148, 152, 154, 155, 158, 160, 161, 163, 165, 166, 167, 168, 180], "associ": [17, 22, 36, 70, 71, 119, 120, 148, 149, 150, 153, 158, 161, 180], "option": [17, 22, 35, 36, 37, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 157, 158, 159, 160, 163, 168, 180], "str": [17, 22, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 68, 69, 78, 79, 80, 81, 86, 87, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 149, 151, 158, 159, 163, 168], "we": [17, 22, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 90, 91, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 179, 180, 1527, 1528, 1534], "want": [17, 22, 32, 34, 35, 36, 37, 90, 91, 139, 140, 148, 152, 154, 160, 161, 166, 167, 168, 180], "retriev": [17, 22, 36, 149], "e": [17, 22, 32, 33, 34, 35, 36, 37, 38, 40, 42, 45, 46, 64, 65, 70, 71, 78, 79, 84, 85, 86, 87, 119, 120, 127, 128, 133, 134, 135, 136, 141, 147, 148, 151, 157, 163, 166, 180, 1527], "default": [17, 22, 35, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 148, 149, 151, 153, 154, 155, 158, 159, 161, 163, 167, 1527], "torch": [17, 22, 29, 35, 36, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 163, 165, 166, 168, 180, 1527, 1528], "tensorflow": [17, 22, 29, 32, 33, 35, 36, 37, 39, 62, 63, 111, 112, 142, 144, 147, 148, 149, 150, 152, 154, 158, 159, 160, 163, 168, 180, 1527, 1528], "either": [17, 22, 29, 35, 36, 37, 40, 58, 59, 62, 63, 95, 96, 107, 108, 111, 112, 145, 146, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 163, 166, 180], "doesn": [17, 22, 24, 35, 40, 146, 148, 152, 154, 155, 158, 163, 180], "matter": [17, 22, 31, 146], "been": [17, 22, 36, 37, 62, 63, 78, 79, 111, 112, 127, 128, 143, 144, 145, 147, 148, 152, 153, 155, 157, 158, 159, 163, 165, 179, 180, 1527], "ivy_np": [17, 22, 148], "us": [17, 22, 29, 33, 34, 36, 37, 38, 39, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 76, 77, 78, 79, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 125, 126, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 179, 180, 1527, 1528], "ivy_jax": [17, 22], "subsequ": [17, 23, 35, 144, 146, 148, 153, 154, 156, 160, 167], "call": [17, 23, 29, 32, 36, 40, 92, 97, 98, 103, 104, 142, 144, 145, 146, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 180], "nativ": [17, 23, 42, 45, 46, 47, 49, 50, 51, 52, 53, 62, 63, 99, 100, 111, 112, 148, 149, 150, 151, 158, 160, 161, 165, 166, 1527], "native_arrai": [17, 23, 29, 52, 53, 54, 55, 58, 59, 74, 75, 101, 102, 107, 108, 111, 112, 133, 134, 148, 150, 161], "1": [17, 23, 29, 32, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 146, 147, 148, 150, 151, 153, 154, 155, 157, 158, 160, 162, 163, 165, 166, 167, 168, 180, 1528], "ndarrai": [17, 23, 37, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 142, 144, 149, 150, 154, 156, 158, 159, 160, 163, 165, 168, 1527], "Or": [17, 23, 166], "jaxlib": [17, 23, 35, 142, 144, 156, 158, 159, 163, 165], "xla_extens": [17, 23, 142, 144, 156, 158, 159, 163, 165], "devicearrai": [17, 23, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 150, 156, 163, 165], "set_backend_to_specific_vers": 17, "anyth": [17, 24, 142, 148], "updat": [17, 24, 35, 36, 37, 40, 47, 49, 51, 62, 63, 64, 65, 95, 96, 111, 112, 113, 114, 141, 144, 146, 147, 150, 152, 154, 156, 157, 158, 161, 163, 165, 166, 168, 180], "__dict__": [17, 24, 155, 163], "make": [17, 24, 32, 33, 35, 36, 37, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 165, 166, 168], "try_import_ivy_jax": 17, "warn": [17, 25, 26, 27, 28, 36], "try_import_ivy_numpi": 17, "try_import_ivy_tf": 17, "try_import_ivy_torch": 17, "unset_backend": [17, 155], "unset": [17, 29, 155, 163], "adjust": [17, 29, 86, 87, 135, 136], "dict": [17, 29, 47, 48, 49, 50, 51, 62, 63, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 157, 166, 167, 1527], "previous": [17, 29, 35, 40, 148, 153, 163], "otherwis": [17, 29, 47, 48, 49, 50, 51, 54, 55, 58, 59, 62, 63, 64, 65, 70, 71, 74, 75, 80, 81, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 148, 152, 156, 157, 158, 159, 163], "implement": [17, 29, 37, 54, 55, 84, 85, 103, 104, 105, 106, 133, 134, 141, 142, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 179, 180, 1527, 1528], "wa": [17, 29, 32, 36, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 149, 163, 165], "last": [17, 29, 33, 36, 42, 45, 46, 52, 53, 60, 61, 70, 71, 72, 73, 74, 75, 84, 85, 86, 87, 88, 89, 95, 96, 109, 110, 119, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 143, 146, 147, 148, 150, 154, 155, 158, 160, 163, 180], "henc": [17, 29, 35, 148, 157], "here": [17, 29, 35, 36, 37, 39, 142, 144, 146, 147, 148, 149, 150, 152, 157, 160, 163, 164, 165, 166, 167, 168, 179, 180], "tensor": [17, 29, 31, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 142, 144, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 163, 165, 166, 168, 180, 1527, 1528], "howev": [17, 29, 32, 35, 36, 37, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 165, 166, 167, 168, 180], "befor": [17, 29, 35, 36, 37, 74, 75, 95, 96, 142, 143, 144, 145, 147, 148, 149, 150, 151, 156, 158, 159, 160, 161, 163, 166, 180], "becom": [17, 29, 31, 33, 36, 146, 149, 157, 180], "swap": [17, 29], "python": [17, 29, 30, 31, 32, 35, 36, 39, 40, 78, 79, 127, 128, 143, 147, 148, 149, 151, 154, 163, 165, 166, 180, 1527, 1528, 1534], "op": [17, 29, 142, 163, 180], "eagertensor": [17, 29], "backend": [20, 22, 23, 24, 29, 31, 35, 36, 37, 39, 47, 49, 51, 62, 63, 64, 65, 95, 96, 111, 112, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 164, 165, 168, 1527, 1528, 1534], "ml": [30, 32, 33, 34, 39, 149, 162, 163, 164, 166, 167, 168, 179, 1528, 1534], "explos": [30, 32, 1528], "A": [30, 31, 32, 33, 35, 37, 39, 40, 52, 53, 54, 55, 62, 63, 74, 75, 78, 79, 88, 89, 92, 95, 96, 97, 98, 103, 104, 111, 112, 113, 114, 123, 124, 127, 128, 137, 138, 141, 144, 148, 149, 153, 157, 158, 159, 163, 166, 180, 1527, 1528], "huge": [30, 32, 166, 1528], "number": [30, 31, 35, 36, 42, 45, 46, 52, 53, 54, 55, 58, 59, 62, 63, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 103, 104, 107, 108, 111, 112, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 146, 148, 150, 154, 157, 158, 159, 160, 163, 166, 1528], "tool": [30, 33, 36, 146, 164, 168, 179, 180, 1528], "have": [30, 31, 32, 33, 35, 36, 37, 38, 40, 42, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 180, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1527, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "explod": [30, 31, 1528], "onto": [30, 31, 1528], "scene": [30, 31, 64, 65, 141, 162, 164, 1528], "b": [30, 33, 34, 42, 45, 46, 58, 59, 62, 63, 68, 69, 92, 93, 94, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 141, 146, 152, 153, 155, 157, 162, 163, 164, 166, 167, 168, 178, 1528, 1534], "why": [30, 32, 36, 160, 165, 1528], "unifi": [30, 32, 95, 96, 141, 147, 149, 151, 154, 156, 158, 163, 180, 1528], "should": [30, 32, 35, 36, 37, 38, 40, 42, 45, 46, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 74, 75, 78, 79, 80, 81, 86, 87, 92, 93, 94, 95, 96, 97, 98, 101, 102, 107, 108, 109, 110, 113, 114, 119, 120, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "them": [30, 31, 32, 33, 36, 37, 147, 148, 149, 150, 151, 155, 156, 157, 160, 161, 163, 165, 166, 167, 180, 1527, 1528], "c": [30, 32, 33, 34, 35, 62, 63, 64, 65, 68, 69, 86, 87, 103, 104, 107, 108, 111, 112, 113, 114, 123, 124, 135, 136, 141, 146, 153, 154, 157, 162, 163, 164, 166, 180, 1527, 1528, 1534], "standard": [30, 58, 59, 76, 77, 78, 79, 86, 87, 107, 108, 125, 126, 127, 128, 135, 136, 141, 142, 144, 145, 147, 148, 156, 157, 158, 160, 180, 1528, 1534], "re": [30, 31, 32, 34, 35, 36, 37, 62, 63, 141, 142, 154, 158, 165, 168, 180, 1528], "collabor": [30, 31, 32, 1528], "consortium": [30, 32, 1528, 1534], "data": [30, 32, 35, 42, 45, 46, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 147, 150, 153, 154, 157, 159, 160, 161, 163, 165, 1527, 1528, 1534], "api": [30, 31, 35, 36, 58, 59, 107, 108, 141, 144, 145, 146, 148, 149, 150, 151, 153, 154, 156, 158, 159, 160, 161, 162, 164, 166, 180, 1527, 1528, 1534], "open": [31, 32, 33, 34, 35, 36, 40, 78, 79, 127, 128, 145, 149, 150, 152, 154, 158, 179, 1528], "project": [31, 32, 33, 35, 36, 40, 148, 155, 167, 179, 180], "grown": 31, "consider": [31, 144, 146, 154], "recent": [31, 32, 35, 36, 148], "year": [31, 33, 147, 180, 1528], "especi": [31, 35, 147, 154], "deep": [31, 34, 36, 37, 39, 95, 96, 150, 157, 158, 162, 165, 166, 1528], "learn": [31, 32, 34, 35, 37, 39, 64, 65, 113, 114, 141, 147, 153, 162, 179, 1527, 1528], "can": [31, 32, 33, 34, 35, 36, 37, 38, 39, 52, 53, 54, 55, 70, 71, 74, 75, 78, 79, 103, 104, 119, 120, 123, 124, 127, 128, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 1527, 1528, 1534], "seen": [31, 32, 146, 148, 149, 151, 152, 163, 165, 166], "rapidli": 31, "increas": [31, 70, 71, 119, 120, 142, 151, 154], "github": [31, 36, 37, 38, 39, 145, 146, 148, 158], "repo": [31, 35, 36, 38, 39, 142, 147, 149, 158, 1528, 1534], "contain": [31, 35, 37, 38, 40, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 86, 87, 88, 89, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 152, 153, 158, 160, 161, 162, 163, 164, 167, 180, 1527, 1528], "term": [31, 36, 157, 163, 1527], "time": [31, 32, 33, 35, 36, 37, 64, 65, 82, 83, 113, 114, 131, 132, 142, 144, 146, 148, 149, 152, 153, 155, 157, 158, 160, 161, 163, 166, 168, 180], "These": [31, 32, 33, 35, 36, 37, 38, 39, 60, 61, 109, 110, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 157, 158, 160, 163, 164, 166, 167, 168, 180, 1527, 1528, 1534], "written": [31, 35, 142, 144, 145, 148, 149, 156, 160, 163, 165, 168, 180], "mani": [31, 32, 33, 35, 36, 37, 74, 75, 95, 96, 123, 124, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 180], "differ": [31, 32, 33, 35, 36, 39, 42, 45, 46, 58, 59, 62, 63, 92, 95, 96, 97, 98, 111, 112, 135, 136, 141, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 180, 1528], "while": [31, 32, 35, 36, 37, 92, 95, 96, 97, 98, 143, 144, 146, 148, 149, 154, 155, 160, 165, 167, 168, 180], "thi": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1528, 1534, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "wonder": [31, 33, 165], "thing": [31, 32, 33, 35, 36, 37, 39, 143, 148, 149, 154, 155, 165, 166], "research": [31, 179], "develop": [31, 32, 33, 34, 35, 36, 37, 38, 39, 142, 147, 152, 179, 180, 1527, 1528], "also": [31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 179, 180], "consid": [31, 32, 70, 71, 119, 120, 142, 153, 164, 165, 166], "speed": [31, 148], "evolv": 31, "sharabl": 31, "code": [31, 32, 33, 35, 36, 37, 38, 39, 40, 58, 59, 92, 95, 96, 97, 98, 105, 106, 107, 108, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 180, 1527, 1528, 1534], "significantli": 31, "hinder": [31, 144], "librari": [31, 32, 33, 34, 37, 105, 106, 147, 154, 168, 178, 180, 1527, 1528], "outdat": 31, "month": 31, "rigor": [31, 148], "maintain": [31, 36, 84, 85, 133, 134, 147, 152], "against": [31, 54, 55, 70, 71, 80, 81, 103, 104, 107, 108, 119, 120, 129, 130, 148, 180], "newest": 31, "For": [31, 32, 33, 35, 36, 37, 38, 40, 64, 65, 70, 71, 113, 114, 119, 120, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 179, 180], "softwar": [31, 32, 35, 36], "pipelin": [31, 156, 168, 1527], "where": [31, 32, 33, 34, 35, 36, 40, 52, 53, 58, 59, 60, 61, 62, 63, 70, 71, 74, 75, 78, 79, 80, 81, 86, 87, 88, 89, 95, 96, 101, 102, 107, 108, 109, 110, 119, 120, 123, 124, 127, 128, 129, 130, 135, 136, 137, 138, 142, 143, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 167, 168, 180, 1528], "rapid": [31, 32, 35], "prototyp": 31, "vital": [31, 168], "signific": [31, 32, 180], "bottleneck": 31, "As": [31, 35, 36, 90, 91, 139, 140, 142, 144, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 180], "new": [31, 32, 33, 34, 35, 36, 37, 40, 62, 63, 64, 65, 74, 75, 76, 77, 95, 96, 101, 102, 111, 112, 113, 114, 123, 124, 125, 126, 141, 142, 143, 145, 146, 148, 149, 152, 154, 155, 157, 158, 160, 161, 162, 165, 168, 179, 1527, 1528], "futur": [31, 33, 35, 36, 142, 149, 154, 158, 165, 180], "avail": [31, 35, 36, 62, 63, 111, 112, 145, 149, 152, 157, 159, 180], "quickli": [31, 33, 35, 36, 166, 167], "obsolet": [31, 33], "user": [31, 32, 35, 36, 38, 40, 141, 148, 149, 154, 155, 157, 158, 160, 161, 162, 163, 180], "constantli": [31, 142, 154], "invent": 31, "wheel": 31, "our": [31, 32, 34, 35, 36, 37, 39, 42, 90, 91, 92, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 162, 165, 166, 167, 168, 180, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "desir": [31, 36, 54, 55, 80, 81, 95, 96, 103, 104, 105, 106, 129, 130, 149, 155, 158], "simultan": [31, 33], "modern": [31, 32], "simpl": [31, 35, 36, 37, 142, 145, 146, 148, 149, 153, 154, 156, 157, 158, 159, 160, 165, 167, 168, 180, 1527], "scalabl": [31, 163], "manner": [31, 35, 47, 50, 51, 99, 100, 142, 145, 149, 159, 166, 179, 180], "determin": [31, 42, 45, 46, 58, 59, 60, 61, 70, 71, 74, 75, 88, 89, 92, 95, 96, 97, 98, 107, 108, 109, 110, 111, 112, 119, 120, 133, 134, 137, 138, 145, 149, 150, 153, 154, 157, 158, 159], "exactli": [31, 33, 146, 154, 157, 158, 159, 1528, 1534], "common": [31, 37, 60, 61, 95, 96, 109, 110, 142, 143, 146, 149, 153, 154, 157, 159, 161, 180], "ground": [31, 148, 149], "li": 31, "between": [31, 72, 73, 74, 75, 92, 95, 96, 97, 98, 121, 122, 123, 124, 144, 146, 148, 149, 150, 153, 154, 155, 156, 157, 162, 164, 165, 166, 168, 179, 1528], "find": [31, 34, 35, 36, 37, 39, 95, 96, 147, 148, 152, 154, 163, 166, 1527, 1528], "essenti": [31, 32, 37, 142, 146, 153, 159], "order": [31, 35, 36, 37, 40, 42, 45, 46, 64, 65, 70, 71, 84, 85, 92, 95, 96, 97, 98, 119, 120, 133, 134, 142, 144, 145, 146, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 166, 168, 180], "design": [31, 32, 109, 110, 141, 149, 150, 154, 158, 160, 163, 165, 180], "univers": 31, "abstract": [31, 148, 149, 154, 157, 158, 167, 180], "In": [31, 33, 35, 36, 37, 38, 62, 63, 74, 75, 105, 106, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 165, 166, 167, 168, 179, 180, 1528], "search": [31, 35, 39, 47, 50, 51, 81, 99, 100, 130, 142, 146, 148], "languag": [31, 33, 149, 154, 163, 1527], "first": [31, 32, 35, 36, 37, 38, 39, 40, 42, 45, 46, 58, 59, 60, 61, 70, 71, 78, 79, 80, 81, 82, 83, 86, 87, 92, 97, 98, 107, 108, 109, 110, 119, 120, 127, 128, 131, 132, 135, 136, 144, 146, 147, 148, 149, 153, 154, 156, 157, 160, 161, 163, 165, 166, 168], "see": [31, 34, 35, 36, 37, 42, 45, 46, 54, 55, 58, 59, 70, 71, 80, 81, 86, 87, 88, 89, 92, 97, 98, 107, 108, 119, 120, 129, 130, 135, 136, 137, 138, 142, 144, 146, 147, 148, 149, 150, 152, 153, 154, 157, 159, 163, 165, 166, 179, 180, 1528], "clear": [31, 32, 33, 36, 37, 146, 149, 154, 158, 159, 163, 165], "front": [31, 162, 163, 166, 1528, 1534], "runner": 31, "look": [31, 35, 36, 38, 40, 142, 144, 146, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 163, 165, 167, 168, 1528], "littl": [31, 150, 165], "deeper": [31, 36, 141, 148, 162], "follow": [31, 32, 35, 36, 37, 40, 62, 63, 64, 65, 95, 96, 111, 112, 113, 114, 119, 120, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 180, 1528], "same": [31, 33, 35, 36, 38, 40, 42, 45, 46, 47, 48, 49, 52, 53, 54, 55, 58, 59, 60, 61, 64, 65, 68, 69, 70, 71, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 95, 96, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 127, 128, 131, 132, 135, 136, 142, 143, 144, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 180, 1528], "core": [31, 35, 37, 148, 159, 168, 1528], "principl": 31, "oper": [31, 35, 37, 54, 55, 60, 61, 62, 63, 64, 65, 68, 69, 92, 95, 96, 97, 98, 103, 104, 109, 110, 111, 112, 117, 118, 145, 146, 147, 148, 149, 153, 154, 156, 157, 158, 159, 160, 163, 166, 167, 1527], "expos": [31, 163, 167], "almost": [31, 39, 150, 157, 164, 166], "ident": [31, 33, 95, 96, 142, 149, 150, 153, 154, 157, 161, 165, 166, 180, 1527, 1528], "uniqu": [31, 60, 61, 82, 83, 109, 110, 131, 132, 148, 149, 150, 153, 154, 157, 180], "syntax": [31, 32, 143, 158], "There": [31, 35, 36, 37, 143, 146, 147, 149, 150, 151, 153, 156, 157, 158, 163, 166, 180], "onli": [31, 34, 35, 36, 37, 42, 45, 46, 78, 79, 95, 96, 127, 128, 142, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 178, 180, 1528], "so": [31, 32, 35, 36, 37, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 180, 181, 191, 1528], "wai": [31, 32, 35, 37, 39, 147, 148, 150, 154, 155, 160, 165, 166, 167, 168, 180], "manipul": [31, 75, 124, 142, 163, 168, 179], "unsurprisingli": [31, 146], "fundament": [31, 149, 154, 163], "consist": [31, 95, 96, 147, 151, 156, 158, 160], "each": [31, 32, 33, 35, 36, 37, 38, 42, 45, 46, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 80, 81, 82, 83, 86, 87, 92, 95, 96, 97, 98, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 129, 130, 131, 132, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 168, 179, 180, 1528, 1534], "veri": [31, 32, 35, 36, 37, 39, 142, 144, 146, 148, 149, 150, 153, 154, 157, 158, 159, 160, 164, 166, 167, 168, 180, 1528], "similar": [31, 35, 37, 142, 148, 149, 150, 151, 152, 157, 158, 159, 161, 166, 180], "convent": [31, 142, 144, 155, 179], "those": [31, 35, 36, 37, 74, 75, 95, 96, 123, 124, 148, 149, 154, 157, 161], "introduc": [31, 152, 157, 158, 166], "2006": 31, "layer": [31, 69, 76, 77, 118, 125, 126, 142, 145, 149, 154, 163, 164, 167, 1528], "therefor": [31, 35, 36, 37, 38, 58, 59, 107, 108, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 163, 165, 167, 180], "present": [31, 36, 37, 95, 96, 144, 157, 158, 159, 160, 163], "itself": [31, 35, 36, 147, 149, 157, 160, 167, 179, 180], "cut": 31, "cloth": 31, "adher": [31, 32, 144, 145, 147, 154, 158, 163, 168], "semant": [31, 163, 168], "round": [31, 32, 33, 35, 36, 37, 38, 40, 58, 59, 107, 108, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 1528], "up": [31, 32, 33, 34, 36, 37, 38, 40, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 180], "hopefulli": [31, 32, 33, 35, 36, 37, 38, 40, 42, 92, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "paint": [31, 163], "pictur": [31, 37, 163], "how": [31, 33, 34, 35, 36, 37, 39, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 179, 180, 1528, 1534], "pleas": [31, 32, 33, 35, 36, 37, 38, 40, 42, 92, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "reach": [31, 32, 33, 35, 36, 37, 38, 40, 42, 92, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "out": [31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 179, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "discord": [31, 32, 33, 35, 36, 37, 38, 40, 42, 92, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "you": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 62, 63, 92, 111, 112, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1527, 1528, 1534, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "question": [31, 32, 33, 35, 36, 37, 38, 40, 42, 92, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 179, 180, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "With": [32, 33, 35, 42, 45, 46, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 70, 71, 80, 81, 86, 87, 92, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 146, 148, 149, 154, 161, 163], "central": [32, 37, 154], "goal": [32, 37], "being": [32, 33, 35, 36, 42, 45, 46, 95, 96, 143, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 179, 180, 1528], "would": [32, 34, 35, 36, 37, 40, 74, 75, 105, 106, 123, 124, 141, 143, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 167, 168, 180, 1528], "entir": [32, 33, 35, 36, 37, 86, 87, 88, 89, 95, 96, 111, 112, 135, 136, 137, 138, 146, 147, 148, 149, 154, 156, 157, 158, 160, 163, 166, 167, 168, 180], "forgiven": 32, "rais": [32, 36, 62, 63, 74, 75, 78, 79, 88, 89, 95, 96, 111, 112, 123, 124, 127, 128, 137, 138, 143, 147, 149, 151, 155, 160, 163, 165], "an": [32, 33, 35, 36, 37, 38, 40, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 179, 180, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1527, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "eyebrow": 32, "somehow": 32, "pytorch": [32, 33, 37, 39, 64, 65, 142, 144, 149, 150, 151, 152, 153, 154, 158, 159, 160, 163, 168, 180, 1527, 1528], "other": [32, 35, 36, 37, 38, 42, 45, 46, 54, 55, 62, 63, 86, 87, 92, 95, 96, 97, 98, 103, 104, 107, 108, 111, 112, 135, 136, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 160, 163, 165, 167, 168, 178, 179, 180, 1527, 1528], "strong": [32, 180], "industri": 32, "back": [32, 36, 156, 158, 161, 162, 180, 1528, 1534], "momentum": 32, "won": [32, 33, 36, 148, 168], "ad": [32, 35, 36, 37, 39, 74, 75, 123, 124, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 160, 161, 163, 167, 180], "just": [32, 33, 35, 36, 145, 146, 147, 148, 149, 150, 153, 155, 158, 160, 161, 165, 166, 180], "problem": [32, 36, 149, 156, 165], "even": [32, 33, 35, 36, 60, 61, 109, 110, 144, 145, 147, 149, 153, 154, 158, 159, 165, 166, 167, 168, 180], "wors": 32, "rather": [32, 36, 62, 63, 64, 65, 95, 96, 111, 112, 113, 114, 142, 145, 147, 148, 149, 150, 157, 158, 160, 168, 180], "funni": 32, "comic": 32, "strip": 32, "easi": [32, 35, 36, 150, 153, 154, 157], "feasibl": [32, 37], "space": [32, 62, 63, 111, 112, 148, 154], "case": [32, 35, 36, 37, 47, 50, 51, 62, 63, 74, 75, 86, 87, 92, 95, 96, 97, 98, 111, 112, 123, 124, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 180], "unlik": [32, 146, 157, 160], "charger": 32, "charact": [32, 143], "encod": [32, 62, 63, 111, 112, 166], "instant": [32, 1528], "much": [32, 35, 36, 37, 142, 149, 150, 156, 157, 158, 160, 163, 165, 166], "doe": [32, 36, 37, 40, 74, 75, 95, 96, 123, 124, 141, 142, 144, 145, 146, 148, 149, 150, 153, 154, 155, 158, 160, 163, 165, 166, 180, 1527], "mandat": [32, 142, 148, 158, 160], "adopt": [32, 36, 144, 154, 156], "continu": [32, 33, 37, 39, 141, 143, 147, 148, 180], "own": [32, 33, 35, 142, 145, 147, 148, 149, 151, 158, 163, 180, 1527], "signatur": [32, 58, 59, 107, 108, 142, 144, 145, 146, 148, 154, 158, 159, 160], "replac": [32, 36, 40, 62, 63, 74, 75, 78, 79, 95, 96, 111, 112, 123, 124, 127, 128, 146, 148, 149, 157, 158, 159, 161, 165, 168, 180], "your": [32, 33, 34, 35, 37, 38, 39, 40, 142, 145, 147, 154, 166, 167, 180, 1528], "10": [32, 35, 40, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 78, 79, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 147, 148, 150, 157, 158, 163, 165, 166], "100": [32, 33, 111, 112, 148, 166, 167, 168, 180, 1528], "despit": [32, 154, 157, 158, 159], "distinct": [32, 35, 145, 149, 157, 160, 162, 1528], "still": [32, 36, 37, 95, 96, 145, 148, 149, 154, 158, 160, 167, 180, 1528], "believ": [32, 36], "share": [32, 95, 96, 146, 148, 150, 153, 154, 155, 157, 163], "bring": [32, 147, 148, 163, 164, 1527], "benefit": [32, 33, 35, 154, 156, 157, 160, 165, 166, 180], "unrel": [32, 36], "what": [32, 33, 36, 38, 141, 144, 145, 146, 148, 149, 157, 161, 162, 163, 165, 166, 167, 168, 179, 180, 1528], "again": [32, 33, 36, 142, 146, 148, 149, 154, 155, 157, 160, 166, 168, 180], "contrari": 32, "bumpi": 32, "road": 32, "allud": [32, 166], "most": [32, 35, 37, 39, 95, 96, 101, 102, 142, 143, 144, 148, 149, 153, 154, 156, 157, 158, 159, 160, 163, 165, 166, 167, 180], "technologi": 32, "sector": [32, 58, 59, 107, 108], "full": [32, 33, 36, 70, 71, 144, 145, 148, 154, 158, 163, 180], "success": 32, "reason": [32, 36, 37, 142, 146, 147, 149, 153, 154, 156, 157, 158, 160, 163, 165], "build": [32, 34, 35, 38, 152, 153, 158, 162, 164, 167, 168, 180, 1527, 1528], "custom": [32, 148, 150, 151, 152, 167], "comput": [32, 33, 35, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 86, 87, 93, 94, 95, 96, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 135, 136, 148, 149, 153, 154, 157, 163, 166, 180, 1527], "thank": [32, 166], "interoper": 32, "compon": [32, 163], "bio": [32, 35], "hardwar": [32, 35, 42, 45, 46, 154], "initi": [32, 36, 92, 95, 96, 97, 98, 148, 155, 158, 159, 163], "pcie": 32, "interfac": [32, 165, 168, 180, 1527], "motherboard": 32, "raid": 32, "storag": [32, 166], "virtual": [32, 36, 38, 40], "bluetooth": 32, "wireless": 32, "exchang": [32, 39], "btx": 32, "form": [32, 34, 47, 48, 49, 50, 51, 52, 53, 64, 65, 70, 71, 95, 96, 119, 120, 148, 153, 154, 158, 167, 168], "factor": [32, 64, 65, 68, 69, 70, 71, 109, 110, 113, 114, 117, 118, 119, 120, 151], "sata": 32, "connect": [32, 35, 167, 168], "host": [32, 180], "bu": 32, "adapt": [32, 113, 114], "devic": [32, 36, 42, 45, 46, 52, 53, 57, 78, 79, 95, 96, 101, 102, 106, 111, 112, 127, 128, 141, 142, 150, 151, 153, 154, 155, 158, 161, 163, 168, 180, 1527], "html": [32, 40, 58, 59, 107, 108, 145], "enabl": [32, 35, 36, 92, 95, 96, 97, 98, 148, 149, 153, 154, 156, 157, 160, 161, 162, 164, 166, 168, 180, 1527], "anyon": [32, 34, 36, 180], "websit": [32, 147], "tcp": 32, "ip": 32, "node": [32, 95, 96, 111, 112, 149, 157], "commun": [32, 34, 35, 36, 37, 180, 1528, 1534], "network": [32, 153, 157, 163, 167, 179, 1528], "smtp": 32, "possibl": [32, 34, 35, 36, 37, 74, 75, 123, 124, 145, 146, 147, 148, 149, 150, 152, 154, 157, 158, 160, 163, 166, 179, 180], "send": 32, "gmail": 32, "outlook": 32, "pop": [32, 35], "u": [32, 34, 35, 36, 70, 71, 119, 120, 142, 148, 149, 150, 154, 157, 160, 161, 167, 180], "email": 32, "ieee": 32, "754": 32, "allow": [32, 36, 37, 38, 143, 148, 149, 150, 151, 152, 161, 163, 165, 180, 1527], "calcul": [32, 37, 58, 59, 72, 73, 86, 87, 92, 95, 96, 97, 98, 107, 108, 121, 122, 135, 136, 145, 150, 163], "live": [32, 33, 158], "depend": [32, 35, 36, 37, 38, 54, 55, 62, 63, 84, 85, 103, 104, 133, 134, 135, 136, 145, 148, 149, 154, 158, 160, 161, 163, 180], "did": [32, 37, 168], "aris": [32, 158, 180], "until": [32, 36, 142, 143, 163, 180, 1528], "substanti": [32, 36, 148, 156, 158], "innov": 32, "growth": 32, "usag": [32, 163, 180], "relev": [32, 35, 36, 37, 146, 150, 152, 157, 158, 166], "area": [32, 58, 59, 107, 108, 160, 178, 1528], "necess": 32, "parti": [32, 180], "could": [32, 33, 35, 36, 37, 146, 147, 148, 149, 150, 158, 160, 161, 163, 165, 166, 167], "easili": [32, 149, 152, 154, 166, 167, 168, 180, 1528], "engag": [32, 34, 36], "regard": [32, 39, 149, 150, 154, 157], "effect": [32, 37, 64, 65, 86, 87, 113, 114, 135, 136, 144, 145, 156, 157, 160, 180], "2015": 32, "sinc": [32, 35, 36, 60, 61, 109, 110, 147, 148, 160, 180], "alongsid": 32, "machin": [32, 35, 70, 71, 119, 120, 147, 153, 179, 1527], "frame": [32, 179], "less": [32, 36, 42, 45, 46, 58, 59, 70, 71, 78, 79, 86, 87, 107, 108, 119, 120, 127, 128, 144, 146, 149, 151, 154, 157, 158, 160, 162, 163], "matur": [32, 180], "state": [32, 144, 145, 148, 149, 151, 158, 162, 163, 164, 166, 179, 1528], "than": [32, 36, 38, 42, 45, 46, 58, 59, 62, 63, 64, 65, 70, 71, 78, 79, 80, 81, 82, 83, 86, 87, 92, 95, 96, 97, 98, 107, 108, 111, 112, 113, 114, 119, 120, 127, 128, 129, 130, 131, 132, 135, 136, 142, 146, 147, 148, 149, 150, 151, 152, 154, 157, 158, 160, 163, 166, 167, 168, 180], "preced": [32, 167], "mention": [32, 35, 36, 37, 144, 146, 153, 154, 160], "aros": 32, "70": [32, 111, 112], "80": 32, "90": [32, 58, 59, 107, 108], "effort": [32, 34, 180], "stage": [32, 34, 36, 40, 141, 143, 148, 1528], "complet": [32, 36, 37, 95, 96, 146, 147, 148, 149, 150, 152, 156, 157, 165, 166], "natur": [32, 70, 71, 119, 120, 146, 150, 156, 179], "like": [32, 35, 36, 37, 40, 64, 65, 113, 114, 141, 142, 143, 144, 145, 146, 148, 149, 150, 154, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 179, 180, 1528], "certainli": 32, "mission": [32, 1528], "creat": [32, 34, 35, 36, 37, 38, 40, 52, 53, 78, 79, 95, 96, 101, 102, 111, 112, 127, 128, 148, 149, 150, 151, 154, 158, 159, 160, 161, 163, 164, 167, 178, 179, 1527, 1528, 1534], "At": [32, 37, 142, 147, 148, 149], "process": [32, 33, 34, 35, 36, 40, 148, 149, 150, 153, 154, 157, 163, 168], "ourselv": 32, "lead": [32, 33, 92, 95, 96, 97, 98, 146, 180], "quansight": 32, "compani": 32, "made": [32, 36, 37, 38, 142, 147, 152, 160, 163, 165], "organ": [32, 142, 149, 153, 156, 157, 1527], "panda": 32, "scipi": 32, "conda": [32, 35, 40], "dask": 32, "apach": 32, "mxnet": 32, "onnx": 32, "scikit": 32, "jupyt": 32, "aw": 32, "cupi": 32, "net": [32, 33, 163, 168], "sympi": 32, "rai": 32, "modin": 32, "spyder": 32, "includ": [32, 36, 37, 52, 53, 60, 61, 62, 63, 80, 81, 86, 87, 88, 89, 95, 96, 109, 110, 111, 112, 119, 120, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 179, 180], "member": [32, 36, 37, 149], "googl": [32, 1528], "octoml": 32, "einop": [32, 62, 63, 111, 112], "further": [32, 33, 36, 40, 146, 147, 148, 149, 151, 156, 162, 166, 167, 1528], "sponsor": 32, "lg": 32, "electron": 32, "microsoft": 32, "d": [32, 33, 34, 35, 68, 69, 70, 71, 117, 118, 119, 120, 141, 148, 157, 166, 1528, 1534], "shaw": 32, "co": [32, 39, 58, 59, 62, 63, 107, 108, 158, 163, 179, 1528], "intel": 32, "togeth": [32, 95, 96, 142, 143, 149, 154, 156, 157, 167, 168, 180], "major": [32, 148, 158, 159, 180], "involv": [32, 34, 40, 54, 55, 103, 104, 141, 146, 154, 158, 168, 1528, 1534], "anoth": [32, 35, 36, 37, 148, 149, 150, 153, 154, 157, 158, 161, 165, 168, 1527], "promis": 32, "sign": [32, 35, 58, 59, 70, 71, 107, 108, 119, 120, 163, 168], "pursuit": 32, "unif": [32, 34, 165, 1528, 1534], "clearli": [32, 36, 37, 146, 148, 150], "lot": [32, 33, 148, 158, 161, 180], "thought": [32, 35, 36, 144], "care": [32, 36, 148, 154, 168], "attent": [32, 36, 156], "gone": [32, 162], "simplifi": [32, 149, 151, 163, 164, 167], "compat": [32, 42, 45, 46, 58, 59, 70, 71, 74, 75, 80, 81, 86, 87, 88, 89, 92, 97, 98, 107, 108, 119, 120, 123, 124, 129, 130, 135, 136, 137, 138, 142, 144, 149, 150, 155, 163, 180, 1528], "excit": [32, 34, 141, 1528], "complianc": 32, "hope": [32, 180], "due": [32, 35, 38, 147, 149, 160], "suit": [32, 35, 141, 147, 148, 152, 166, 179, 1527], "some": [32, 33, 35, 36, 37, 95, 96, 113, 114, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 165, 166, 167, 179, 180, 1527, 1528], "motiv": [32, 165], "great": [32, 33, 36, 148, 163, 165], "convinc": 32, "celebr": 32, "encourag": [32, 179, 180, 1528, 1534], "foundat": 32, "mai": [33, 35, 36, 37, 39, 58, 59, 84, 85, 105, 106, 107, 108, 133, 134, 147, 148, 149, 157, 160, 164, 165, 167], "ask": [33, 37, 146, 163, 165, 180], "perfectli": 33, "happi": [33, 35, 180], "abund": 33, "better": [33, 38, 141, 142, 149, 150, 154, 162, 165, 166, 167], "ll": [33, 34, 36, 146, 160, 166], "give": [33, 35, 36, 38, 141, 144, 145, 146, 155], "two": [33, 35, 37, 42, 45, 46, 52, 53, 70, 71, 92, 97, 98, 119, 120, 145, 146, 147, 148, 149, 154, 156, 158, 162, 166, 168, 1528], "streamlin": 33, "workflow": [33, 36, 37, 149, 152, 155, 158, 166, 178, 1527, 1528], "save": [33, 38, 95, 96, 143, 148, 180], "week": [33, 36, 1528], "let": [33, 38, 62, 63, 86, 87, 111, 112, 142, 145, 146, 148, 149, 150, 151, 154, 157, 158, 159, 163, 165, 166, 167, 168, 1528], "sai": [33, 35, 161, 165], "deepmind": 33, "releas": [33, 35, 36, 37, 142, 149, 154, 158, 180, 1528], "awesom": 33, "paper": 33, "love": 33, "choic": [33, 35, 86, 87, 135, 136, 149, 160, 166], "perceiverio": 33, "happen": [33, 35, 36, 148, 166], "slew": 33, "rush": 33, "f": [33, 34, 36, 40, 141, 143, 157, 163, 166], "g": [33, 34, 35, 37, 78, 79, 127, 128, 141, 147, 148, 157, 163, 180, 1527], "inevit": 33, "deviat": [33, 76, 77, 78, 79, 125, 126, 127, 128, 147], "often": [33, 39, 143, 144, 148, 149, 151, 153, 180], "erron": 33, "train": [33, 64, 65, 113, 114, 153, 157, 159, 166, 167, 168, 178, 179, 180, 1527, 1528], "poor": 33, "converg": 33, "perform": [33, 64, 65, 86, 87, 88, 89, 111, 112, 135, 136, 137, 138, 142, 143, 144, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 180], "issu": [33, 34, 37, 39, 146, 147, 148, 149, 151, 155, 158, 163, 167, 180], "etc": [33, 35, 36, 37, 52, 53, 78, 79, 90, 91, 111, 112, 127, 128, 139, 140, 142, 144, 146, 148, 149, 150, 151, 152, 156, 157, 158, 163, 165, 166, 180, 1527], "publish": [33, 180], "manag": [33, 34, 160, 180], "get": [33, 34, 35, 37, 39, 95, 96, 141, 142, 148, 149, 150, 152, 153, 158, 159, 160, 161, 163, 164, 165, 166, 167, 1527, 1528, 1534], "work": [33, 35, 36, 37, 39, 141, 142, 146, 147, 148, 149, 151, 158, 159, 162, 163, 165, 167, 168, 1528, 1534], "repositori": [33, 35, 36, 38, 40, 141, 143, 147, 152], "pull": [33, 34, 35, 37, 38, 40, 142, 146, 147, 154, 180], "request": [33, 34, 37, 142, 146, 154], "confus": [33, 151, 154, 158, 160, 1527], "do": [33, 35, 36, 37, 62, 63, 64, 65, 95, 96, 113, 114, 142, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 180, 1527], "don": [33, 35, 36, 37, 90, 91, 139, 140, 148, 158, 167, 180], "expect": [33, 36, 148, 151, 180, 1528], "codebas": [33, 34, 141, 142, 148, 158, 160, 162, 1528], "total": [33, 34, 36, 86, 87, 92, 95, 96, 97, 98, 135, 136, 146, 148, 154, 158, 159, 166, 167, 180], "hour": [33, 152], "spent": 33, "spin": 33, "off": [33, 35, 162], "test": [33, 37, 39, 58, 59, 88, 89, 107, 108, 137, 138, 141, 142, 143, 146, 149, 151, 158, 161, 180], "discuss": [33, 35, 36, 148, 149, 154, 158, 159, 160, 164, 165, 166, 180, 1528], "error": [33, 35, 36, 39, 58, 59, 95, 96, 107, 108, 142, 143, 144, 146, 148, 151, 152, 155, 156, 158, 159, 165, 180], "iter": [33, 47, 48, 49, 50, 51, 62, 63, 90, 91, 92, 95, 96, 97, 98, 111, 112, 139, 140, 157, 163, 166], "address": [33, 36, 37, 147, 156, 163], "sake": 33, "singl": [33, 35, 36, 37, 78, 79, 95, 96, 111, 112, 127, 128, 142, 143, 144, 146, 147, 148, 149, 150, 153, 154, 157, 160, 161, 163, 166, 167, 168, 180], "multipl": [33, 36, 60, 61, 76, 77, 86, 87, 88, 89, 95, 96, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 123, 124, 125, 126, 135, 136, 137, 138, 146, 151, 153, 154, 155, 157, 160, 163, 180], "line": [33, 35, 143, 146, 147, 148, 154, 156, 161, 164, 165, 166, 167, 178, 1528, 1534], "convert": [33, 37, 47, 48, 49, 50, 51, 52, 53, 58, 59, 99, 100, 107, 108, 148, 156, 161, 163, 180, 181, 191, 1527], "directli": [33, 36, 142, 145, 147, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 179, 180], "graph": [33, 64, 65, 149, 153, 154, 157, 164, 180, 1527], "guarante": [33, 156, 180], "turn": [33, 35, 146, 148, 149, 157], "4": [33, 35, 37, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 78, 79, 82, 83, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 146, 148, 155, 157, 163, 165, 166, 167, 168, 1528], "step": [33, 35, 36, 37, 38, 40, 60, 61, 64, 65, 101, 102, 109, 110, 113, 114, 146, 148, 149, 155, 156, 157, 158, 159, 163, 166, 167, 168, 179, 1528], "take": [33, 34, 35, 36, 37, 86, 87, 109, 110, 145, 146, 148, 149, 150, 152, 154, 157, 158, 159, 160, 163, 165, 167, 168, 180, 1528, 1534], "few": [33, 36, 37, 39, 144, 148, 153, 154, 157, 158, 159, 160, 164, 165, 166, 167, 178, 1528, 1534], "second": [33, 35, 42, 45, 46, 58, 59, 60, 61, 64, 65, 70, 71, 82, 83, 92, 97, 98, 107, 108, 109, 110, 113, 114, 119, 120, 131, 132, 146, 147, 148, 149, 160, 165], "automat": [33, 35, 36, 37, 141, 143, 152, 153, 154, 157, 158, 162, 164, 167, 168, 1527, 1528], "convers": [33, 37, 48, 49, 50, 51, 58, 59, 100, 161, 162, 164, 168, 179, 180, 1527, 1528, 1534], "everyon": [33, 34, 36, 180], "regardless": [33, 34, 95, 96, 158, 165, 168], "wouldn": 33, "nice": [33, 148], "write": [33, 36, 37, 39, 40, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 149, 150, 153, 155, 158, 160, 163, 165, 168], "onc": [33, 35, 36, 37, 78, 79, 127, 128, 146, 147, 148, 149, 154, 157, 158, 159, 163, 166, 180], "know": [33, 36, 142, 148], "among": [33, 95, 96, 148, 154], "frantic": 33, "port": 33, "lucid": 33, "honk": 33, "improv": [33, 36, 144, 153, 154, 163, 1527], "understand": [33, 35, 36, 37, 38, 39, 40, 141, 144, 145, 146, 147, 150, 154, 162], "pattern": [33, 62, 63, 111, 112, 145, 158], "hasn": 33, "chang": [33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 145, 146, 147, 148, 149, 152, 154, 155, 157, 158, 163, 167, 180, 1528, 1534], "now": [33, 35, 40, 142, 143, 144, 148, 149, 154, 155, 157, 158, 161, 165, 166, 168, 179, 180], "spend": 33, "torchvis": 33, "probabl": [33, 78, 79, 127, 128, 148], "sonnet": 33, "about": [33, 35, 36, 37, 39, 142, 144, 147, 148, 152, 154, 158, 162, 163, 165, 166, 167, 168, 180], "next": [33, 35, 36, 37, 38, 40, 142, 145, 146, 149, 155, 161, 164, 165, 166, 1528], "everyth": [33, 36, 37, 142, 146, 148, 149, 150, 164, 180], "zero": [33, 52, 53, 54, 55, 58, 59, 60, 61, 64, 65, 70, 71, 80, 81, 86, 87, 88, 89, 101, 102, 103, 104, 107, 108, 109, 110, 113, 114, 119, 120, 127, 128, 129, 130, 135, 136, 137, 138, 144, 146, 156, 157, 158, 159, 161, 163, 166, 167, 1528], "need": [33, 35, 36, 37, 38, 40, 62, 63, 74, 75, 111, 112, 123, 124, 142, 145, 146, 147, 149, 150, 151, 153, 154, 156, 157, 158, 160, 163, 165, 166, 179, 180], "said": 33, "high": [33, 37, 78, 79, 127, 128, 149, 154, 166, 1527], "level": [33, 34, 36, 37, 149, 153, 154, 162, 163, 166, 167, 168, 180, 1527], "optim": [33, 64, 65, 113, 114, 160, 164, 166, 168, 179, 1528], "trainer": [33, 178, 180, 1528], "statu": [33, 37, 152], "quo": 33, "kera": 33, "dopamin": 33, "ignit": 33, "catalyst": 33, "lightn": 33, "fastai": 33, "haiku": [33, 168], "flax": [33, 168, 180], "trax": [33, 168], "objax": [33, 168], "idea": [33, 38, 142, 149, 164, 179], "fulli": [33, 144, 154, 156, 158, 160, 163, 164, 165, 166, 167, 168, 180], "offer": [33, 149, 167], "strongli": [34, 35, 1528, 1534], "welcom": [34, 35, 36, 1528, 1534], "absolut": [34, 58, 59, 70, 71, 95, 96, 107, 108, 119, 120, 154], "skill": 34, "whether": [34, 35, 37, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 74, 75, 78, 79, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 146, 148, 149, 154, 157, 158, 160], "veteran": 34, "beginn": 34, "aspect": [34, 149, 166, 1528], "guid": [34, 35, 36, 37, 143, 1528], "through": [34, 36, 37, 39, 141, 146, 148, 149, 150, 153, 154, 155, 157, 160, 161, 162, 163, 166, 167, 168, 179], "journei": [34, 1528, 1534], "inclusvi": 34, "big": [34, 180], "team": [34, 35, 36, 37, 149], "board": 34, "contributor": [34, 35, 36, 149, 162, 1528], "split": [34, 36, 74, 75, 95, 96, 123, 124, 162, 163, 180, 1528], "section": [34, 36, 37, 38, 39, 141, 142, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167], "below": [34, 35, 37, 40, 52, 53, 135, 136, 141, 142, 143, 146, 148, 149, 152, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 179, 1528], "best": [34, 35, 36, 37, 39, 141, 142, 143, 148, 158], "go": [34, 35, 36, 37, 38, 141, 142, 146, 149, 150, 155, 158, 162, 166, 180], "start": [34, 35, 36, 37, 38, 40, 95, 96, 101, 102, 141, 144, 145, 146, 148, 149, 152, 154, 158, 162, 163, 165, 166, 167, 179, 180], "finish": [34, 35, 37, 141, 1528], "dive": [34, 36, 37, 39, 150, 157, 158, 162, 165, 166, 180, 1528], "right": [34, 35, 36, 70, 71, 92, 95, 96, 97, 98, 119, 120, 141, 146, 154, 166], "environ": [34, 36, 38, 40, 179], "basic": [34, 37, 40, 146], "fork": [34, 35, 147], "doc": [34, 37, 39, 144, 145, 146, 148, 150, 163, 166, 167, 1528], "document": [34, 36, 39, 146, 148, 149, 150, 166, 168], "local": [34, 35, 38, 40, 147, 153], "task": [34, 36, 149, 150, 179, 1528], "help": [34, 35, 37, 38, 142, 146, 148, 154, 155, 156, 157, 161, 165, 166, 167, 178, 1527, 1528], "appli": [34, 35, 36, 37, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 157, 158, 159, 160, 161, 165, 166, 167, 168, 178, 180, 1527, 1528], "resourc": [34, 37], "video": [34, 35, 36, 142, 143, 144, 145, 146, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161], "realli": [35, 157, 180], "contribut": [35, 36, 37, 38, 39, 163, 1534], "toward": [35, 38, 74, 75, 123, 124, 142, 163, 1528, 1534], "page": [35, 36, 152, 164, 165, 168, 178, 1528, 1534], "explain": [35, 36, 37, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 1528, 1534], "main": [35, 40, 52, 53, 70, 71, 119, 120, 143, 148, 157, 161], "prefer": [35, 149, 154, 157, 161], "mode": [35, 36, 38, 60, 61, 70, 71, 95, 96, 109, 110, 119, 120, 146, 154, 157, 180], "git": [35, 36, 38, 39, 147, 148], "recurs": [35, 40, 47, 48, 49, 50, 51, 95, 96, 99, 100, 147, 153, 157, 167, 180], "submodul": [35, 36, 37, 40, 42, 92, 147, 148, 152, 153, 159, 161, 162, 163, 167, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1527, 1528, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "com": [35, 38, 158], "unifyai": [35, 36, 38, 40], "http": [35, 38, 58, 59, 107, 108, 113, 114, 145, 158], "gh": 35, "your_fold": 35, "id": [35, 38, 39, 143, 156, 157], "cours": [35, 36, 142, 146, 147, 154, 166, 180], "whatev": [35, 157, 180], "integr": [35, 39, 54, 55, 103, 104, 141], "familiar": [35, 37], "decid": [35, 37, 95, 96, 154, 158], "sure": [35, 36, 37, 147, 149, 150, 152, 154], "check": [35, 36, 37, 39, 47, 48, 49, 50, 51, 54, 55, 62, 63, 64, 65, 95, 96, 103, 104, 111, 112, 113, 114, 142, 146, 147, 149, 151, 157, 161, 162, 163, 165, 166, 167, 1528], "elig": 35, "free": [35, 36, 37, 38, 39, 40, 42, 92, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 179, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "student": 35, "licenc": 35, "peopl": [35, 36, 39, 141], "seem": [35, 37, 154, 167, 168, 180], "miss": [35, 37, 143, 146, 148, 156, 157], "add": [35, 36, 37, 42, 45, 46, 58, 59, 76, 77, 90, 91, 92, 95, 96, 97, 98, 107, 108, 125, 126, 139, 140, 141, 142, 144, 145, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 163, 165, 180, 1528, 1534], "explicit": [35, 40, 149, 157, 158, 160, 163, 180], "remind": 35, "channel": [35, 36, 37, 38, 40, 42, 62, 63, 92, 111, 112, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "pace": 35, "suggest": [35, 36, 37, 142, 148, 149], "latest": [35, 36, 37, 40, 58, 59, 107, 108, 142, 145, 152, 155, 158, 180], "packag": [35, 38, 40, 143, 149, 180], "ensur": [35, 36, 37, 62, 63, 142, 143, 144, 146, 148, 149, 150, 151, 156, 158, 160, 161], "align": [35, 36, 95, 96, 163, 165, 1527, 1528, 1534], "stabl": [35, 62, 63, 84, 85, 111, 112, 133, 134, 155, 158, 163, 180], "pypi": [35, 37, 180], "mayb": [35, 47, 50, 51, 163, 165], "person": [35, 36], "experi": [35, 148, 164, 166, 180], "avoid": [35, 36, 142, 143, 148, 155, 157, 158, 161], "pip": [35, 38, 179, 1528], "instal": [35, 36, 38, 40, 143, 155, 179, 1528], "abil": [35, 154, 164, 180], "certain": [35, 36, 95, 96, 147, 148, 154, 158, 180], "perhap": [35, 165, 166, 167, 180], "keep": [35, 36, 37, 39, 74, 75, 95, 96, 123, 124, 142, 147, 148, 152, 154, 157, 166, 168], "track": [35, 36], "termin": [35, 36, 40, 92, 95, 96, 97, 98, 147, 157, 163, 166], "run": [35, 37, 38, 40, 64, 65, 113, 114, 141, 143, 144, 146, 149, 150, 152, 155, 163, 164, 165, 166, 167, 168, 179, 180], "command": [35, 40, 147, 161, 1528], "ivy_dev": [35, 36, 38, 40], "3": [35, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 78, 79, 82, 83, 86, 87, 92, 93, 94, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 146, 147, 148, 155, 157, 158, 163, 165, 166, 167, 168, 1528], "8": [35, 40, 42, 45, 46, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 92, 97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 134, 135, 136, 146, 148, 157, 162, 166, 1528], "activ": [35, 36, 38, 40, 44, 62, 63, 90, 91, 94, 139, 140, 142, 167, 1528], "setup": [35, 36, 38], "click": [35, 36, 145, 152, 164, 1528], "icon": [35, 36], "side": [35, 36, 84, 85, 133, 134], "choos": [35, 36, 37, 80, 81, 105, 106, 164, 168], "left": [35, 36, 60, 61, 70, 71, 80, 81, 84, 85, 109, 110, 119, 120, 129, 130, 133, 134, 146, 158], "panel": 35, "select": [35, 36, 37, 86, 87, 135, 136, 148, 160, 163, 165, 168, 180], "drop": [35, 180], "down": [35, 148, 1527], "path": [35, 40, 150, 160], "manual": [35, 36, 37, 148, 149, 152, 167], "builtin": [35, 40, 165, 167], "requir": [35, 37, 38, 40, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 158, 159, 161, 163, 165, 180], "cmd": [35, 40], "directori": [35, 36, 37, 38, 40, 148, 149, 152], "folder": [35, 36, 38, 40, 142, 147, 148, 149, 153], "file": [35, 36, 37, 40, 95, 96, 142, 143, 145, 148, 150, 152, 153, 155, 156, 157, 163, 166], "abov": [35, 36, 40, 52, 53, 58, 59, 78, 79, 93, 94, 107, 108, 127, 128, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 165, 166, 167, 168], "m": [35, 36, 38, 40, 42, 45, 46, 52, 53, 70, 71, 78, 79, 107, 108, 119, 120, 127, 128, 141, 163], "python3": [35, 36, 38, 40], "script": [35, 36, 40, 146, 163, 180], "bat": [35, 36, 38, 40], "OR": [35, 36, 40, 88, 89, 137, 138], "bin": [35, 36, 38, 40, 147], "mac": [35, 36, 38, 40], "linux": [35, 36, 38, 40], "virtualenv": 35, "found": [35, 36, 37, 38, 92, 95, 96, 97, 98, 143, 145, 149, 154, 155, 156, 157, 158, 160, 161], "o": [35, 141, 163], "note": [35, 36, 37, 38, 142, 145, 146, 148, 149, 150, 158], "tick": [35, 36, 152], "abl": [35, 36, 95, 96, 149, 153, 154, 158, 160, 168], "To": [35, 38, 142, 143, 146, 147, 148, 149, 150, 151, 153, 157, 158, 166, 167, 168, 1528], "ivy_test": [35, 36, 37, 147, 150, 152], "test_array_api": [35, 36, 147, 148], "cd": [35, 36, 38, 40], "r": [35, 36, 95, 96, 141], "txt": [35, 142, 147], "visual": [35, 149, 180], "jetbrain": 35, "remot": [35, 38, 147], "mitig": 35, "potenti": [35, 36, 37, 158, 162], "conflict": [35, 36, 166], "addit": [35, 36, 37, 62, 63, 76, 77, 105, 106, 111, 112, 125, 126, 142, 145, 146, 148, 149, 154, 157, 158, 165, 166, 168], "yet": [35, 37, 180], "particular": [35, 36, 142, 146, 147, 148, 149, 150, 154, 155, 158, 160, 161], "system": [35, 36, 155, 158, 180], "instruct": [35, 37, 147], "desktop": [35, 38], "wsl": 35, "powershel": 35, "admin": 35, "visit": [35, 36, 150], "link": [35, 37, 38, 149, 152, 158], "imag": [35, 38, 40, 60, 61, 67, 68, 69, 109, 110, 116, 117, 118, 142, 163, 164, 166, 168, 179, 1528], "profession": 35, "execut": [35, 36, 40, 146, 148, 154, 157, 160, 163, 165, 168, 180, 1527], "deploy": 35, "top": [35, 36, 74, 75, 148, 149, 158, 166, 167], "press": [35, 36, 166, 1528], "ok": 35, "correctli": [35, 36, 37, 80, 81, 119, 120, 129, 130, 143, 144, 146, 148, 150, 151, 154, 157, 158, 160, 167, 180], "caus": [35, 36, 146, 147, 148, 152, 155, 157, 160, 180], "earlier": [35, 36], "might": [35, 36, 37, 62, 63, 142, 143, 146, 148, 149, 154, 158, 160, 161, 163, 165, 166, 1527], "necessari": [35, 36, 74, 75, 123, 124, 146, 148, 149, 154, 155, 157, 160, 161], "virtualis": 35, "sudo": 35, "apt": 35, "ca": 35, "certif": 35, "curl": 35, "gnupg": 35, "lsb": 35, "mkdir": 35, "p": [35, 36, 62, 63, 111, 112, 119, 120, 141], "keyr": 35, "fssl": 35, "download": [35, 148], "gpg": 35, "dearmor": 35, "echo": 35, "deb": 35, "arch": 35, "dpkg": 35, "architectur": [35, 168, 180], "lsb_releas": 35, "tee": 35, "dev": [35, 56, 57, 95, 96, 105, 106, 153, 159, 165, 167], "null": 35, "ce": 35, "cli": 35, "containerd": 35, "io": 35, "compos": [35, 148, 157, 180], "plugin": 35, "systemctl": 35, "permiss": 35, "relat": [35, 36, 38, 39, 142, 143, 148, 149, 154, 179], "post": [35, 76, 77, 125, 126, 168, 1528, 1534], "coupl": [35, 156, 165, 167], "unit": [35, 93, 94, 147, 148, 149, 150, 158, 180], "test_ab": [35, 148], "context": [35, 36, 68, 69, 117, 118, 146], "menu": 35, "editor": 35, "green": [35, 36, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 1576, 1577], "symbol": [35, 37], "appear": [35, 36, 154], "def": [35, 37, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 157, 158, 159, 160, 163, 165, 166, 167, 168, 761, 1528], "pytest": [35, 36, 147, 148], "debug": [35, 36, 148, 152, 154, 157, 166], "keyboard": 35, "shortcut": 35, "rest": [35, 40, 152, 168], "displai": [35, 148, 157, 166], "screenshot": 35, "ctrl": [35, 36], "shift": [35, 36, 74, 75, 92, 97, 98, 101, 102, 123, 124, 144, 146], "bottom": 35, "screen": [35, 95, 96, 166], "elsewher": 35, "test_elementwis": 35, "tab": [35, 152, 166, 1528], "progress": [35, 36, 168], "bar": 35, "It": [35, 36, 37, 40, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 88, 89, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 141, 142, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167], "shell": [35, 36], "run_tests_cli": [35, 147], "run_ivy_core_test": 35, "run_ivy_nn_test": 35, "run_ivy_stateful_test": 35, "run_test": 35, "sh": [35, 36, 147], "test_depend": 35, "test_ivy_cor": 35, "test_ivy_nn": 35, "test_ivy_st": 35, "test_": [35, 150, 152], "test_ivi": [35, 36, 37, 148, 150, 152], "test_funct": [35, 36, 148, 150, 152], "test_cor": [35, 36, 150, 152], "wish": [35, 149], "ivy_cor": 35, "ivy_nn": 35, "ivy_st": 35, "gener": [35, 36, 37, 40, 58, 59, 63, 64, 65, 78, 79, 90, 91, 107, 108, 112, 113, 114, 127, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 179, 180, 1527, 1528], "dure": [35, 64, 65, 86, 87, 95, 96, 105, 106, 113, 114, 135, 136, 148, 149, 151, 153, 154, 157, 158, 159, 160, 161, 180], "detect": [35, 37, 95, 96, 143, 148, 155, 157, 166, 167], "its": [35, 36, 37, 40, 47, 50, 51, 54, 55, 74, 75, 95, 96, 103, 104, 111, 112, 123, 124, 142, 145, 148, 149, 150, 154, 158, 161, 168, 180, 1527], "simplest": [35, 146, 148, 154], "valu": [35, 36, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 158, 159, 160, 161, 163, 165, 180], "inform": [35, 36, 37, 39, 64, 65, 113, 114, 147, 148, 150, 151, 157], "becaus": [35, 36, 144, 145, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 163, 167, 168, 180], "header": [35, 36], "summari": [35, 36, 95, 96, 148], "recommend": [35, 36, 155], "advanc": 35, "checkbox": [35, 37], "q": [35, 36, 117, 118, 141, 180], "fail": [35, 36, 37, 143, 146, 147, 152, 158], "_": [35, 38, 40, 58, 59, 107, 108, 113, 114, 143, 145, 148, 149, 160, 166], "headach": 35, "arm": [35, 36], "m1": 35, "instead": [35, 36, 37, 58, 59, 107, 108, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 157, 158, 160, 161, 163, 165, 166, 180], "featur": [35, 36, 142, 144, 149, 154, 166, 180, 1528], "vm": 35, "azur": 35, "cloud": [35, 179], "mean": [35, 36, 62, 63, 68, 69, 78, 79, 86, 87, 95, 96, 111, 112, 117, 118, 127, 128, 135, 136, 139, 140, 141, 142, 146, 147, 148, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 179, 180, 1527, 1528], "configur": [35, 36, 38, 40, 95, 96, 152, 158, 161], "defin": [35, 37, 52, 53, 62, 63, 70, 71, 101, 102, 111, 112, 119, 120, 142, 144, 145, 148, 149, 150, 152, 158, 165, 167, 180, 1527], "dockerfil": [35, 40], "longer": [35, 148, 158, 160, 161], "worri": 35, "platform": [35, 39], "agnost": [35, 144, 156, 163, 165, 168, 180, 1528], "usual": [35, 147, 148, 149, 154], "studio": 35, "favourit": 35, "extens": [35, 38, 39, 58, 59, 61, 107, 108, 110, 145, 148, 149], "theme": 35, "too": [35, 36, 37, 143, 147, 152, 180], "done": [35, 36, 37, 39, 143, 146, 148, 149, 166], "unsupport": [35, 143, 149], "old": [35, 95, 96, 155, 160], "slow": 35, "ipad": 35, "long": [35, 36, 146, 152, 158, 163], "browser": 35, "cool": [35, 142], "requisit": 35, "head": [35, 39, 1528], "pane": [35, 36], "readi": 35, "begin": [35, 147, 150], "outlin": [35, 36, 37, 141, 145, 148, 149, 153, 157, 158, 160], "dropdown": 35, "master": [35, 36, 142, 147], "v": [35, 36, 38, 68, 69, 84, 85, 117, 118, 133, 134, 150, 163, 166, 167, 168, 1528], "view": [35, 36, 60, 61, 152], "built": [35, 36, 148, 164, 1527], "box": 35, "patient": [35, 37], "upto": [35, 36], "15": [35, 58, 59, 60, 61, 78, 79, 86, 87, 92, 97, 98, 101, 102, 107, 108, 109, 110, 111, 112, 117, 118, 123, 124, 127, 128, 135, 136, 146, 148], "minut": 35, "launch": 35, "12": [35, 58, 59, 60, 61, 62, 63, 78, 79, 86, 87, 107, 108, 109, 110, 111, 112, 117, 118, 123, 124, 125, 126, 127, 128, 135, 136, 142, 146, 148, 155, 157, 158], "output": [35, 36, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 180, 1527, 1528], "That": [35, 36, 148, 165, 166, 167], "alreadi": [35, 36, 37, 95, 96, 144, 149, 154, 155, 157, 158, 180, 1528], "refer": [35, 36, 37, 39, 86, 87, 88, 89, 113, 114, 135, 136, 137, 138, 144, 147, 148, 149, 150, 153, 158, 180, 1527], "approach": [35, 36, 148, 153, 154, 157, 158, 161, 165, 166, 180], "colour": 35, "applic": [35, 158, 159, 161, 167], "good": [35, 36, 37, 38, 39, 40, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 167], "chanc": 35, "vscode": [35, 38], "show": [35, 36, 37, 95, 96, 146, 148, 149, 152, 160, 179, 180, 1528], "explor": [35, 36, 37, 154, 164, 168, 179], "troubleshoot": 35, "sometim": [35, 36, 37, 142, 148, 149, 154, 158], "ever": 35, "64": [35, 58, 59, 68, 69, 92, 97, 98, 107, 108, 111, 112, 117, 118, 119, 120, 127, 128, 166, 167, 1528], "bit": [35, 37, 39, 146, 153, 157, 158, 163, 165], "usr": 35, "under": [35, 36, 37, 141, 145, 146, 147, 148, 149, 153, 154, 157, 162, 163, 166, 168, 180], "flask": 35, "toolbar": [35, 36], "root": [35, 36, 40, 58, 59, 107, 108, 166], "_array_modul": [35, 147], "array_api_test": [35, 36, 147], "01": [35, 64, 65, 113, 114, 127, 128, 155, 168], "08": [35, 86, 87, 127, 128], "2022": 35, "conftest": 35, "comment": [35, 36, 37, 143, 147, 149, 158], "thei": [35, 36, 37, 39, 70, 71, 78, 79, 95, 96, 119, 120, 127, 128, 141, 142, 146, 147, 148, 149, 152, 153, 154, 155, 157, 158, 159, 160, 161, 165, 166, 167, 168, 180, 1528], "via": [35, 36, 142, 149, 154, 157, 158, 159, 160, 163, 165, 166, 179], "refresh": 35, "nutshel": [35, 144], "hook": 35, "lint": 35, "accept": [35, 36, 47, 58, 59, 99, 107, 108, 142, 144, 145, 146, 148, 150, 153, 156, 157, 159, 160, 161, 165, 1527, 1528], "fix": [35, 36, 142, 148, 152, 158], "attempt": [35, 143, 180], "succe": 35, "problemat": [35, 37], "proce": [35, 37], "modifi": [35, 36, 37, 95, 96, 142, 143, 145, 147, 153, 155, 158, 159, 163], "properli": [35, 141, 148, 151], "enter": [35, 36, 144, 156, 158, 159, 161], "feel": [35, 36, 37, 38, 40, 42, 92, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "server": 36, "appropri": [36, 37, 80, 81, 90, 91, 129, 130, 139, 140, 148, 161], "suitabl": [36, 109, 110, 142, 157], "quick": [36, 141, 167], "alwai": [36, 37, 54, 55, 64, 65, 74, 75, 103, 104, 113, 114, 123, 124, 142, 143, 144, 145, 148, 149, 150, 153, 154, 155, 156, 157, 158, 160, 163, 180], "correct": [36, 37, 86, 87, 135, 136, 141, 143, 144, 148, 150, 153, 157, 158, 159, 1528], "tendenc": 36, "land": 36, "end": [36, 142, 154, 155, 160, 162, 179, 180, 1528, 1534], "world": 36, "come": [36, 142, 149, 154, 167, 178, 1527, 1528, 1534], "fly": 36, "hard": [36, 148, 165], "receiv": [36, 148, 158, 159], "respons": [36, 40, 158], "internship": 36, "place": [36, 38, 39, 47, 49, 51, 52, 53, 58, 59, 62, 63, 74, 75, 95, 96, 101, 102, 105, 106, 107, 108, 111, 112, 123, 124, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 159, 160, 161, 168, 1527], "bug": [36, 142, 148], "serv": [36, 144, 148, 153, 154, 156, 157, 162, 1527, 1528], "suspect": 36, "behaviour": [36, 37, 39, 141, 142, 144, 145, 147, 148, 149, 151, 156, 157, 158, 160, 165], "observ": [36, 151], "act": [36, 146, 180], "placehold": [36, 143, 144, 156, 1527], "sub": [36, 37, 74, 75, 92, 95, 96, 97, 98, 99, 100, 107, 108, 111, 112, 123, 124, 141, 148, 149, 150, 151, 157, 165, 166, 167, 1528], "mark": [36, 37, 148], "ii": 36, "iii": 36, "titl": [36, 37, 149, 1528], "issue_numb": 36, "delet": [36, 40], "No": 36, "wait": [36, 37, 92, 95, 96, 97, 98, 149], "pr": [36, 37, 147, 149], "soon": [36, 158, 178, 180, 1528, 1534], "partial": [36, 95, 96], "solut": [36, 148, 154, 157, 158], "close": [36, 37, 145, 147, 148, 149, 154], "merg": [36, 37, 147, 149], "review": [36, 37, 142, 146, 149], "everi": [36, 37, 38, 40, 52, 53, 62, 63, 111, 112, 142, 144, 146, 147, 148, 149, 150, 152, 153, 155, 157, 158, 160, 161, 163, 165, 167], "respond": 36, "shape": [36, 42, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 148, 149, 150, 158, 159, 160, 163, 165, 166, 167, 168, 1528], "move": [36, 60, 61, 105, 106, 109, 110, 142], "within": [36, 37, 47, 50, 51, 148, 149, 150, 167, 180], "7": [36, 40, 42, 43, 44, 45, 46, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 92, 97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 146, 148, 153, 157, 160], "dai": [36, 152], "without": [36, 95, 96, 142, 143, 144, 146, 148, 150, 151, 153, 154, 156, 157, 158, 159, 165, 166, 167, 179, 180], "likewis": [36, 144, 145, 149, 153, 154, 157, 158, 166], "freed": 36, "flag": [36, 64, 65, 95, 96, 113, 114, 148, 149, 158, 160, 161], "purpos": [36, 40, 144, 146, 148, 149, 151, 152, 153, 154, 156, 157, 161, 162, 165, 1527, 1528], "remain": [36, 74, 75, 80, 81, 123, 124, 129, 130, 142, 146, 152, 154, 180], "access": [36, 37, 40, 95, 96, 149, 158], "more": [36, 37, 38, 39, 82, 83, 131, 132, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 179, 180, 1528], "short": [36, 142, 149, 158, 163, 167], "basi": [36, 147, 166], "situat": [36, 168], "alloc": [36, 37, 52, 53, 54, 55, 103, 104, 180], "upon": [36, 146, 148, 154, 160, 180], "period": [36, 109, 110, 142], "prevent": [36, 37, 64, 65, 113, 114, 142, 143, 149, 154, 158, 160], "unabl": [36, 154], "obvious": 36, "never": [36, 74, 75, 123, 124, 148, 149, 154], "reflect": [36, 38, 148, 156], "qualiti": 36, "hypothet": 36, "frustrat": 36, "delai": 36, "busi": 36, "fine": [36, 146, 158, 165, 168], "inact": 36, "me": 36, "unfairli": 36, "definit": [36, 70, 71, 119, 120, 153, 158, 165], "investig": 36, "final": [36, 37, 62, 63, 111, 112, 143, 145, 146, 149, 153, 154, 156, 158, 160, 162, 166], "maximum": [36, 58, 59, 62, 63, 64, 65, 74, 75, 80, 81, 92, 95, 96, 97, 98, 107, 108, 111, 112, 113, 114, 123, 124, 129, 130, 146, 166, 1528], "incomplet": 36, "three": [36, 146, 148, 149, 154, 157, 162, 1528], "per": [36, 60, 61, 68, 69, 109, 110, 117, 118, 148, 149, 166], "self": [36, 42, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 149, 150, 151, 156, 157, 163, 165, 166, 167, 168, 1528], "though": [36, 37, 39, 145, 149, 153, 154, 158, 166, 180], "assign": [36, 143, 155, 158, 160, 165], "sequenc": [36, 60, 61, 74, 75, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 146, 148, 151, 158, 159, 163, 168, 179], "regist": 36, "wherea": [36, 142, 144, 146, 148, 153, 156, 158, 159, 168], "primarili": 36, "invit": 36, "roadmap": [36, 152], "mainli": [36, 141, 164, 166, 1527], "fall": [36, 37, 158, 162, 1528], "extend": [36, 142, 144, 145, 149, 155, 180], "ideal": [36, 160, 166], "Such": [36, 148], "label": [36, 37, 72, 73, 121, 122, 149, 152, 162, 163, 164, 168], "describ": [36, 37, 148, 152, 163, 168], "easier": [36, 142, 149, 156, 158, 1527], "after": [36, 37, 38, 64, 65, 76, 77, 95, 96, 113, 114, 125, 126, 144, 146, 147, 148, 149, 151, 158, 162], "regular": [36, 149, 150], "interv": [36, 78, 79, 88, 89, 127, 128, 137, 138], "forth": 36, "rare": [36, 159, 180], "scenario": 36, "someon": [36, 180], "someth": [36, 142, 166, 167, 180], "unfortun": 36, "redund": [36, 149, 151, 154, 158], "behind": [36, 64, 65, 141, 144, 148, 162, 164], "well": [36, 111, 112, 148, 149, 152, 158, 160, 167, 168, 179], "Then": [36, 37, 40, 142, 161, 180], "practic": [36, 152], "separ": [36, 148, 156, 157, 163, 165, 166], "branch": [36, 147, 180], "simpli": [36, 37, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 168, 180, 1527], "role": [36, 149, 164], "kept": [36, 92, 95, 96, 97, 98, 142, 160], "date": [36, 142], "upstream": [36, 147], "complic": [36, 150, 163], "merge_with_upstream": 36, "name_of_your_branch": 36, "resolv": [36, 147, 158, 163], "clone": [36, 38, 40], "push": [36, 37, 143, 147], "both": [36, 58, 59, 60, 61, 70, 71, 101, 102, 107, 108, 119, 120, 144, 145, 146, 148, 149, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 179, 180], "abort": 36, "tediou": [36, 146], "resolut": 36, "stash": 36, "reinstat": 36, "correspond": [36, 37, 54, 55, 58, 59, 62, 63, 74, 75, 86, 87, 92, 95, 96, 97, 98, 103, 104, 107, 108, 123, 124, 135, 136, 144, 145, 146, 148, 149, 152, 153, 154, 155, 156, 157, 158, 161, 163], "fetch": [36, 147], "uncommit": 36, "unstag": 36, "untrack": 36, "comprehens": [36, 147], "explan": [36, 37, 144, 145, 149, 157, 165], "atlassian": 36, "tutori": [36, 149], "wrote": 36, "piec": [36, 153, 156, 161, 163], "tag": 36, "navig": [36, 141], "blame": 36, "revis": 36, "author": [36, 37, 1528], "log": [36, 58, 59, 70, 71, 107, 108, 119, 120, 146, 148, 149, 152, 153, 154, 157, 160, 163, 166, 1528], "eg": 36, "16": [36, 42, 45, 46, 58, 59, 60, 61, 68, 69, 70, 71, 78, 79, 86, 87, 92, 97, 98, 103, 104, 107, 108, 109, 110, 111, 112, 117, 118, 123, 124, 127, 128, 146, 148, 166], "5": [36, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 92, 93, 94, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 144, 146, 147, 148, 150, 155, 165, 166, 167], "past": [36, 150], "l": [36, 70, 71, 107, 108, 119, 120, 141], "filepath": [36, 95, 96, 147], "grep": 36, "commit_id": 36, "handi": 36, "histori": 36, "toggl": 36, "vertic": 36, "highlight": [36, 146], "previou": [36, 64, 65, 113, 114, 144, 148, 149, 154, 168, 180], "shown": [36, 37, 90, 91, 95, 96, 139, 140, 142, 143, 144, 146, 148, 149, 150, 152, 163, 165, 180], "whenev": [36, 148, 151, 152, 161, 166], "think": [36, 146], "gain": [36, 147, 162, 167], "quit": [36, 145, 146, 148, 153, 154, 156, 161], "newli": [36, 54, 55, 103, 104, 148, 160], "repeat": [36, 38, 62, 63, 74, 75, 111, 112, 123, 124, 143, 145, 146, 148, 155, 156], "yourself": [36, 37, 148, 149, 154, 179], "simpler": [36, 37, 149], "cannot": [36, 147, 149, 155, 158, 168], "least": [36, 60, 61, 109, 110, 146, 148, 153, 156], "approv": 36, "respect": [36, 37, 39, 58, 59, 64, 65, 107, 108, 113, 114, 142, 144, 146, 148, 149, 156, 157, 158], "hash": [36, 166], "detail": [36, 37, 142, 144, 147, 148, 149, 150, 152, 153, 155, 157, 161, 165, 166, 167], "rel": [36, 40, 42, 45, 46, 64, 65, 70, 71, 74, 75, 84, 85, 101, 102, 113, 114, 119, 120, 123, 124, 133, 134, 150, 154, 1528], "cancel": 36, "speedup": 36, "button": 36, "unavail": 36, "tickbox": 36, "lower": [36, 52, 53, 58, 59, 70, 71, 78, 79, 107, 108, 119, 120, 127, 128, 146, 148, 149, 154, 163, 180, 1527], "corner": [36, 148], "span": [36, 154], "intent": [36, 160], "larg": [36, 166], "discourag": 36, "philosophi": 36, "increment": [36, 62, 63, 111, 112, 142], "frequent": [36, 37], "valuabl": 36, "infrequ": 36, "earli": [36, 1528], "wast": 36, "spot": [36, 146, 153], "mistak": [36, 143], "propos": [36, 149, 154], "mountain": 36, "around": [36, 92, 95, 96, 97, 98, 142, 144, 149, 153, 156, 165, 180, 1527], "advoc": [36, 180], "individu": [36, 37, 149, 152, 153, 160], "style": 36, "ve": [36, 37, 78, 79, 127, 128, 154, 162, 165, 1527, 1528], "were": [36, 95, 96, 103, 104, 142, 143, 148, 154, 158, 163], "actual": [36, 141, 148, 153, 154, 160, 162, 167, 180], "aim": [36, 147, 148, 162], "part": [36, 38, 52, 53, 64, 65, 142, 147, 148, 149, 153, 154, 163, 164, 168, 179, 180], "subsect": [36, 37, 152], "session": 36, "block": [36, 38, 143, 148, 151, 153, 162, 164, 168, 180, 1527, 1528], "smaller": [36, 74, 75, 123, 124, 163], "edit": [36, 37, 38], "exact": [36, 93, 94, 95, 96, 146, 147, 163], "beauti": 36, "particularli": [36, 166, 180], "concern": [36, 141, 146, 154, 157, 160, 162], "effici": [36, 143, 148, 153, 157, 160, 161, 163, 166, 180], "difficult": [36, 147, 148, 158, 180], "undo": 36, "stress": 36, "frequenc": [36, 62, 63, 111, 112, 152], "advantag": [36, 149, 160], "nifti": 36, "reassur": 36, "isol": 36, "bash": [36, 40], "rm": [36, 38], "structur": [36, 40, 92, 95, 96, 97, 98, 142, 150, 153, 156, 157, 166, 167], "fact": [36, 148, 166], "mount": [36, 38], "local_path_to_ivi": 36, "overwrit": [36, 95, 96, 160, 163], "subfold": [36, 142, 148, 150], "insid": [36, 40, 142, 148, 157, 158, 161], "wide": [36, 148], "dep": 36, "fresh": 36, "copi": [36, 40, 52, 53, 54, 55, 62, 63, 74, 75, 95, 96, 101, 102, 103, 104, 105, 106, 111, 112, 123, 124, 145, 149, 150, 155, 158, 163, 166, 179, 180], "arsen": 36, "declar": 36, "exec": 36, "rf": 36, "cp": 36, "ivy_contain": 36, "test_imag": 36, "test_random_crop": 36, "test_creation_funct": 36, "test_arang": 36, "window": [36, 38, 40, 60, 61, 68, 69, 109, 110, 117, 118], "variou": [36, 144, 145, 147, 148, 150, 151, 161, 179, 1527], "cpu": [36, 52, 53, 78, 79, 111, 112, 127, 128, 149, 159, 180], "gpu": [36, 159, 165], "combin": [36, 92, 95, 96, 97, 98, 146, 148, 153, 154, 156, 157, 158, 168], "num": [36, 101, 102, 144, 163], "hypothesi": [36, 37, 147, 161], "posit": [36, 37, 47, 48, 49, 58, 59, 60, 61, 62, 63, 70, 71, 74, 75, 107, 108, 109, 110, 111, 112, 119, 120, 123, 124, 142, 147, 148, 149, 150, 161, 166, 179], "integ": [36, 42, 45, 46, 58, 59, 74, 75, 78, 79, 86, 87, 88, 89, 92, 95, 96, 97, 98, 107, 108, 119, 120, 123, 124, 127, 128, 135, 136, 137, 138, 148, 150, 157, 158, 161, 163, 165], "greater": [36, 42, 45, 46, 58, 59, 78, 79, 92, 97, 98, 107, 108, 127, 128], "text": [36, 37, 145, 146], "prompt": [36, 1528], "instanc": [36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 153, 156, 158, 160, 161, 166, 167, 168, 181, 191, 1527], "whole": 36, "multipli": [36, 58, 59, 86, 87, 107, 108, 146, 155, 156, 157], "cursor": 36, "alt": 36, "j": [36, 52, 53, 70, 71, 101, 102, 107, 108, 119, 120, 141], "locat": [36, 37, 142, 148, 149, 150, 155, 159], "blog": 36, "breakpoint": 36, "gutter": 36, "caret": 36, "f8": 36, "f9": 36, "method": [36, 37, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 153, 156, 158, 161, 163, 164, 167, 168, 180, 1528], "Into": 36, "f7": 36, "smart": 36, "sever": [36, 142, 180], "interest": 36, "consol": [36, 148, 165], "store": [36, 54, 55, 62, 63, 64, 65, 70, 71, 74, 75, 95, 96, 103, 104, 111, 112, 113, 114, 119, 120, 123, 124, 145, 149, 155, 156, 157, 163, 165, 166, 167, 1527], "variabl": [36, 42, 45, 46, 62, 63, 64, 65, 76, 77, 95, 96, 111, 112, 113, 114, 125, 126, 142, 143, 144, 145, 148, 155, 158, 160, 163, 166, 167, 168, 180, 1528], "fragment": 36, "except": [36, 62, 63, 74, 75, 78, 79, 88, 89, 95, 96, 111, 112, 119, 120, 127, 128, 137, 138, 141, 143, 144, 145, 147, 149, 154, 156, 158, 160, 163, 165, 180], "pychram": 36, "depth": [36, 52, 53, 101, 102, 166, 167, 168, 179], "dummi": 36, "wherein": [36, 148, 161], "evalu": [36, 58, 59, 95, 96, 107, 108, 154, 157, 158], "failur": [36, 147, 148, 152], "wherebi": 37, "remov": [37, 40, 70, 71, 95, 96, 119, 120, 145, 148, 153, 154, 155, 158, 168], "broad": 37, "distribut": [37, 72, 73, 78, 79, 121, 122, 127, 128, 159, 180], "across": [37, 80, 81, 95, 96, 111, 112, 129, 130, 144, 146, 147, 148, 149, 151, 153, 154, 157, 158], "todo": [37, 149, 158], "read": [37, 40, 95, 96, 1528], "focu": 37, "commit": [37, 38, 146, 147, 148, 152], "NOT": 37, "static": [37, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 149, 153, 161, 180], "revers": [37, 42, 45, 46, 62, 63, 70, 71, 86, 87, 92, 97, 98, 119, 120, 135, 136, 145, 146, 149, 154, 157, 158, 168, 180], "content": [37, 40, 95, 96, 160, 163, 166], "els": [37, 62, 63, 78, 79, 127, 128, 142, 148, 149, 150, 151, 153, 154, 155, 158, 160, 163, 165, 167, 168, 180], "cover": [37, 145, 146, 147, 148, 153, 154, 161, 162], "lambda": [37, 148, 163, 166], "direct": [37, 149, 150, 154, 167, 168, 179], "bind": [37, 157], "special": [37, 42, 45, 46, 86, 87, 92, 97, 98, 119, 120, 142, 144, 145, 146, 147, 151, 156, 160], "aforement": 37, "categori": [37, 142, 149, 156, 157, 158, 162, 1528], "parent": [37, 165], "arraywithelementwis": [37, 42, 45, 46, 58, 156, 165], "containerwithmanipul": [37, 92, 97, 98, 123], "hint": [37, 58, 59, 107, 108, 142, 144, 145, 149, 153, 156, 160], "docstr": [37, 39, 40, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 149, 153], "thorough": [37, 144, 145, 148], "produc": [37, 109, 110, 142, 148], "add_reformatting_checklist_": 37, "category_nam": [37, 144, 145, 153, 158, 159], "belong": [37, 95, 96, 147, 167], "trigger": [37, 152], "autom": [37, 148, 1527, 1528], "bot": 37, "proper": 37, "markdown": 37, "moment": [37, 64, 65, 113, 114, 155, 180], "item": [37, 47, 51, 62, 63, 90, 91, 95, 96, 111, 112, 158, 163, 165, 166, 168, 1528], "emoji": 37, "legend": 37, "stuck": [37, 39], "elabor": 37, "struggl": 37, "assigne": 37, "later": [37, 95, 96, 148], "status": 37, "refrain": 37, "transpil": [37, 149, 162, 164, 1527, 1528, 1534], "verifi": [37, 142, 148, 158, 159, 1528, 1534], "leav": [37, 47, 50, 51, 92, 97, 98, 99, 100, 109, 110, 111, 112, 123, 124, 135, 136, 144, 145, 146, 148, 153, 157, 158, 160, 166, 167], "assess": [37, 154], "composit": [37, 141, 148, 150, 154, 155, 156, 157, 158, 160, 163, 167, 168, 180, 1527], "temporari": [37, 158], "normal": [37, 76, 77, 78, 79, 125, 126, 127, 128, 166], "altern": [37, 149, 160, 166], "composition": [37, 149, 160], "pend": 37, "helpfulli": [37, 154], "unimpl": 37, "issue_link": 37, "chosen": 37, "thu": [37, 38, 149, 151], "alias": 37, "alias_nam": 37, "function_nam": 37, "notic": [37, 154], "alia": 37, "liner": 37, "meanwhil": 37, "complex": [37, 38, 146, 149, 154, 158, 166, 167, 168, 180, 1527], "reselect": 37, "placement": 37, "categoris": [37, 147, 149], "faithfulli": 37, "descript": [37, 58, 59, 107, 108, 119, 120, 145], "inner": [37, 70, 71, 101, 102, 119, 120, 160], "linalg": [37, 160, 1528], "pre": [37, 38, 148, 168, 180], "match": [37, 54, 55, 95, 96, 103, 104, 146, 157], "creation_routin": [37, 150], "fft": 37, "indexing_routin": 37, "logic": [37, 88, 89, 137, 138, 148, 149, 151, 156, 158, 159, 161, 165, 1528], "ma": 37, "manipulation_routin": 37, "mathematical_funct": [37, 149], "matrix": [37, 42, 45, 46, 62, 63, 68, 69, 70, 71, 111, 112, 117, 118, 119, 120, 149], "random": [37, 79, 95, 96, 128, 142, 148, 159, 168, 179, 1528], "sorting_searching_count": 37, "statist": [37, 87, 136, 139, 140, 142, 148, 149, 158], "ufunc": 37, "hierarchi": [37, 95, 96, 166], "decomposit": 37, "matrix_and_vector_product": 37, "matrix_eigenvalu": 37, "norms_and_other_numb": 37, "solving_equations_and_inverting_matric": 37, "product": [37, 58, 59, 70, 71, 86, 87, 119, 120, 135, 136, 163], "func": [37, 95, 96, 146], "namespac": [37, 40, 142, 149, 150, 158, 161, 163, 168], "gleam": 37, "uncom": 37, "test_numpy_inn": 37, "mirror": 37, "test_frontend": [37, 150], "unsur": [37, 148], "put": [37, 148, 180], "outer": [37, 70, 71, 119, 120], "confirm": 37, "empti": [37, 62, 63, 95, 96, 111, 112, 156, 158, 159], "along": [37, 60, 61, 62, 63, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 142, 146, 154, 160, 163], "backend_nam": [37, 144, 145, 153, 155, 158, 159, 161], "behav": [37, 147, 150, 151, 160, 165], "helper": [37, 151, 152, 158, 166, 1527], "recreat": 37, "defer": [37, 148, 149, 153, 156, 157, 158, 159, 160, 161], "clearer": [37, 151, 166], "mind": [37, 148, 156, 157], "keyword": [37, 47, 48, 49, 92, 95, 96, 97, 98, 142, 148, 149, 150, 158, 159, 160, 161, 166], "strategi": [37, 150, 161], "draw": [37, 78, 79, 127, 128, 148, 150], "slightli": [38, 149, 157, 163, 167], "alon": [38, 148], "mech": 38, "vision": [38, 178, 1528], "demo": [38, 179, 1528], "util": [38, 89, 138, 142, 151, 159], "grasp": [38, 149], "tree": [38, 40, 158], "dir": [38, 166], "mutual": [38, 153, 157], "venv": 38, "ivy_devscriptsactiv": 38, "immedi": [38, 154, 1528], "ivy_robot": [38, 179], "docker": [38, 39], "my": [38, 142], "pwd": 38, "volum": 38, "rebuild": [38, 92, 95, 96, 97, 98], "pycharm": 38, "devcontain": 38, "codespac": 38, "config": [38, 95, 96, 147, 166], "json": [38, 95, 96, 166], "resours": 39, "climb": 39, "steep": 39, "curv": 39, "frontend": [39, 141, 142, 148, 158, 162, 164, 1527], "realpython": 39, "pyn": 39, "kind": [39, 148, 149, 154, 163, 180], "stack": [39, 42, 45, 46, 70, 71, 74, 75, 95, 96, 119, 120, 123, 124, 163, 1528], "overflow": [39, 158], "sort": [39, 85, 92, 95, 96, 97, 98, 134, 142], "pilot": 39, "faster": [39, 1527], "spell": 39, "sound": [39, 162], "odd": [39, 147], "action": [39, 146, 148], "builder": [40, 178, 180, 1527, 1528], "maco": 40, "ubuntu": [40, 152], "uid": 40, "make_docs_without_dock": 40, "synchron": [40, 152], "remove_doc": 40, "privat": [40, 148], "fulfil": [40, 162, 1528], "autogenerated_sourc": 40, "format": [40, 93, 94, 95, 96, 99, 100, 141, 145, 146, 151, 158, 159, 163, 165, 166, 1528], "png": [40, 166], "_imag": 40, "lastli": 40, "rst": [40, 761], "skip": [40, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 148, 152, 161], "partial_sourc": 40, "conf": 40, "create_rst_fil": 40, "filter": [40, 68, 69, 109, 110, 117, 118, 148], "repres": [40, 58, 59, 70, 71, 107, 108, 119, 120, 154, 165], "overal": [40, 145, 157, 158, 159, 168], "markup": 40, "6": [40, 42, 45, 46, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 78, 79, 84, 85, 86, 87, 92, 97, 98, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 146, 148, 154, 155, 157, 163, 165, 166, 167], "extract": [40, 142, 149], "get_functions_and_class": 40, "doctr": 40, "readm": [40, 180], "module_nam": 40, "copy_readme_to_rst": 40, "tabl": [40, 149, 158], "toc": 40, "append": [40, 95, 96, 148, 151, 163, 166], "append_toctree_to_rst": 40, "9": [40, 42, 45, 46, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 75, 78, 79, 84, 85, 86, 87, 92, 97, 98, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 123, 124, 127, 128, 131, 132, 133, 134, 135, 136, 146, 148, 157, 166, 167], "index": [40, 52, 53, 62, 63, 80, 81, 82, 83, 84, 85, 95, 96, 101, 102, 111, 112, 129, 130, 131, 132, 133, 134, 148, 150, 153, 157, 165], "create_index_rst": 40, "14": [40, 54, 55, 58, 59, 60, 61, 78, 79, 86, 87, 103, 104, 107, 108, 109, 110, 111, 112, 119, 120, 123, 124, 127, 128, 146, 148, 157], "\u03c0": 40, "arraywithactiv": [42, 43, 45, 46, 165], "arraywithcr": [42, 45, 46, 52, 165], "arraywithdatatyp": [42, 45, 46, 54, 165], "arraywithdevic": [42, 45, 46, 56, 165], "arraywithextens": [42, 45, 46, 60], "arraywithgener": [42, 45, 46, 62, 165], "arraywithgradi": [42, 45, 46, 64, 165], "arraywithimag": [42, 45, 46, 66, 165], "arraywithlay": [42, 45, 46, 68, 165], "arraywithlinearalgebra": [42, 45, 46, 70, 165], "arraywithloss": [42, 45, 46, 72, 165], "arraywithmanipul": [42, 45, 46, 74, 165], "arraywithnorm": [42, 45, 46, 76, 165], "arraywithrandom": [42, 45, 46, 78, 165], "arraywithsearch": [42, 45, 46, 80, 165], "arraywithset": [42, 45, 46, 82, 165], "arraywithsort": [42, 45, 46, 84, 165], "arraywithstatist": [42, 45, 46, 86, 165], "arraywithutil": [42, 45, 46, 88, 165], "properti": [42, 45, 46, 95, 96, 146, 148, 150, 153, 157, 165, 166, 167], "transpos": [42, 45, 46, 95, 96, 119, 120, 160, 165, 168, 1528], "dimension": [42, 45, 46, 70, 71, 74, 75, 80, 81, 86, 87, 88, 89, 95, 96, 119, 120, 123, 124, 135, 136, 137, 138, 163], "whose": [42, 45, 46, 52, 53, 58, 59, 60, 61, 62, 63, 70, 71, 74, 75, 82, 83, 101, 102, 107, 108, 109, 110, 111, 112, 119, 120, 123, 124, 131, 132, 135, 136, 145, 148], "dimens": [42, 45, 46, 52, 53, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 95, 96, 97, 98, 101, 102, 109, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 146, 148, 150, 151, 154, 163, 166], "ax": [42, 45, 46, 60, 61, 70, 71, 74, 75, 80, 81, 86, 87, 88, 89, 93, 94, 109, 110, 119, 120, 123, 124, 129, 130, 135, 136, 137, 138, 142, 146, 148, 158, 163, 165], "permut": [42, 45, 46], "__add__": [42, 45, 46, 92, 97, 98, 144, 145, 146, 149, 156, 157, 165], "variant": [42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 154], "wrap": [42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 163, 165, 168, 180, 181, 191, 1527], "minim": [42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 150, 154, 160, 163], "input": [42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 180, 181, 191], "numer": [42, 45, 46, 54, 55, 58, 59, 62, 63, 70, 71, 78, 79, 80, 81, 92, 97, 98, 103, 104, 107, 108, 111, 112, 119, 120, 127, 128, 129, 130, 133, 134, 142, 148, 149, 150, 154, 158, 161, 163, 167], "broadcast": [42, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 142, 145, 146, 148, 157, 158, 163], "element": [42, 45, 46, 52, 53, 58, 59, 60, 61, 62, 63, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 92, 93, 94, 95, 96, 97, 98, 101, 102, 107, 108, 109, 110, 111, 112, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 145, 148, 150, 154, 163], "wise": [42, 45, 46, 58, 59, 60, 61, 70, 71, 92, 93, 94, 97, 98, 107, 108, 109, 110, 111, 112, 119, 120, 154], "sum": [42, 45, 46, 58, 59, 62, 63, 70, 71, 72, 73, 86, 87, 92, 95, 96, 97, 98, 107, 108, 111, 112, 119, 120, 121, 122, 135, 136, 153, 157, 158, 160, 163], "promot": [42, 45, 46, 54, 55, 58, 59, 60, 61, 70, 71, 92, 97, 98, 103, 104, 107, 108, 109, 110, 119, 120, 133, 134, 145, 147, 151, 153], "y": [42, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 142, 146, 149, 150, 154, 155, 157, 163, 165], "z": [42, 45, 46, 58, 59, 62, 63, 70, 71, 72, 73, 78, 79, 92, 97, 98, 107, 108, 111, 112, 119, 120, 121, 122, 127, 128, 146, 155, 157, 163, 165], "__le__": [42, 45, 46], "equal": [42, 45, 46, 52, 53, 54, 55, 58, 59, 62, 63, 70, 71, 74, 75, 78, 79, 84, 85, 86, 87, 92, 95, 96, 97, 98, 103, 104, 107, 108, 111, 112, 119, 120, 123, 124, 127, 128, 133, 134, 146, 151, 157, 158], "bool": [42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 148, 149, 151, 158, 160, 163, 168], "__radd__": [42, 45, 46, 92, 97, 98, 145, 146, 149], "__rrshift__": [42, 45, 46, 92, 97, 98], "bitwise_right_shift": [42, 45, 46, 58, 59, 107, 108], "32": [42, 45, 46, 58, 59, 78, 79, 92, 97, 98, 107, 108, 109, 110, 127, 128, 166], "__rshift__": [42, 45, 46, 92, 97, 98], "__rsub__": [42, 45, 46, 92, 97, 98], "subtract": [42, 45, 46, 58, 59, 92, 97, 98, 107, 108, 146, 156, 157], "__sub__": [42, 45, 46, 92, 97, 98, 144, 146, 156, 157, 165], "union": [42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 146, 149, 151, 153, 154, 156, 157, 158, 159, 160, 163, 168], "_devicearrai": [42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138], "resid": [42, 45, 46, 149, 163, 167], "is_vari": [42, 45, 46, 64, 65, 113, 114, 160, 165], "trainabl": [42, 45, 46, 64, 65, 113, 114, 145, 164, 166, 167], "mt": [42, 45, 46, 165], "matric": [42, 45, 46, 52, 53, 70, 71, 119, 120, 179], "n": [42, 45, 46, 52, 53, 70, 71, 74, 75, 78, 79, 80, 81, 86, 87, 88, 89, 107, 108, 119, 120, 123, 124, 127, 128, 129, 130, 135, 136, 137, 138, 141, 148], "ndim": [42, 45, 46, 80, 81, 129, 130, 148], "int": [42, 45, 46, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 93, 94, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 157, 158, 159, 160, 163, 168], "size": [42, 45, 46, 60, 61, 62, 63, 74, 75, 78, 79, 80, 81, 92, 95, 96, 97, 98, 109, 110, 111, 112, 119, 120, 123, 124, 127, 128, 129, 130, 148, 150, 166], "overview": [42, 92, 148, 162, 179, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "forum": [42, 92, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 193, 230, 232, 233, 315, 406, 440, 761, 816, 1012, 1063, 1129, 1257, 1273, 1354, 1358, 1376, 1381, 1408, 1455, 1471, 1516, 1536, 1539, 1541, 1551, 1563, 1565, 1567, 1573], "abc": [43, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 95, 96, 165], "gelu": [43, 44, 93, 94], "approxim": [43, 44, 70, 71, 93, 94, 119, 120, 145, 149], "185": [43, 44, 93, 94], "046": [43, 44, 93, 94], "leaky_relu": [43, 44, 93, 94, 150, 1528], "alpha": [43, 44, 58, 59, 93, 94, 107, 108, 149, 150], "39": [43, 44, 58, 59, 78, 79, 93, 94, 107, 108, 113, 114, 127, 128], "85": [43, 44, 78, 79, 93, 94, 107, 108, 113, 114, 117, 118, 127, 128], "17": [43, 44, 60, 61, 92, 93, 94, 97, 98, 107, 108, 111, 112, 113, 114, 117, 118, 127, 128, 146, 148, 157], "log_softmax": [43, 44, 93, 94], "98": [43, 44, 64, 65, 78, 79, 93, 94, 107, 108, 113, 114, 127, 128], "37": [43, 44, 58, 59, 93, 94, 107, 108], "35": [43, 44, 68, 69, 93, 94, 107, 108, 117, 118, 119, 120, 127, 128], "0719": [43, 44, 93, 94], "62": [43, 44, 93, 94, 109, 110, 125, 126, 127, 128], "221": [43, 44], "82": [43, 44, 58, 59, 113, 114, 127, 128], "relu": [43, 44, 90, 91, 93, 94, 150, 166, 167, 1528], "sigmoid": [43, 44, 93, 94, 163, 166, 167, 1528], "269": [43, 44, 93, 94], "731": [43, 44, 93, 94], "881": [43, 44, 58, 59, 93, 94, 107, 108], "softmax": [43, 44, 90, 91, 93, 94, 1528], "422": [43, 44, 93, 94], "155": [43, 44, 93, 94, 117, 118], "softplu": [43, 44, 93, 94, 154, 1528], "beta": [43, 44, 76, 77, 93, 94, 109, 110, 125, 126, 154], "threshold": [43, 44, 58, 59, 93, 94, 107, 108, 154], "3461": [43, 44, 93, 94], "6491": [43, 44, 93, 94], "22": [43, 44, 60, 61, 62, 63, 78, 79, 86, 87, 93, 94, 111, 112, 117, 118, 127, 128, 157], "09": [43, 44, 113, 114, 127, 128], "31": [43, 44, 58, 59, 111, 112, 117, 118, 127, 128, 166], "55": [43, 44, 127, 128], "13": [43, 44, 58, 59, 60, 61, 68, 69, 78, 79, 86, 87, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 123, 124, 127, 128, 135, 136, 146, 148, 157], "collect": [47, 95, 96, 99, 148, 150, 151, 179], "args_to_ivi": 47, "include_deriv": [47, 48, 49, 50, 51, 99, 100], "nest": [47, 48, 49, 50, 51, 92, 95, 96, 97, 98, 99, 100, 142, 153, 156, 157, 166, 167, 180, 1527], "unchang": [47, 48, 49, 50, 51], "deriv": [47, 48, 49, 50, 51, 52, 53, 64, 65, 99, 100, 101, 102, 113, 114, 158, 159, 165, 167], "tupl": [47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 68, 69, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 144, 148, 150, 158, 163, 166, 167, 180], "kei": [47, 48, 49, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 143, 148, 150, 157, 166], "word": [47, 48, 49, 149, 157, 1527], "args_to_n": [47, 160], "cont_inplac": [47, 49, 51], "to_ivi": [47, 99, 100], "leaf": [47, 50, 95, 96, 111, 112, 135, 136, 153, 157, 166], "travers": [47, 50, 51, 99, 100, 157, 158, 163], "lowest": [47, 50, 51, 78, 79, 99, 100, 127, 128, 153, 180, 1527], "to_n": [47, 99, 100, 163], "asarrai": [52, 53, 62, 63, 111, 112, 160, 161], "boolean": [52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 74, 75, 80, 81, 95, 96, 103, 104, 107, 108, 111, 112, 113, 114, 123, 124, 129, 130, 148, 149, 150, 154, 157], "datatyp": [52, 53, 95, 96], "interpret": [52, 53, 152], "copy_arrai": [52, 53], "empty_lik": [52, 53, 101, 102, 154], "deafult": [52, 53, 80, 81, 129, 130], "uniniti": [52, 53], "from_dlpack": [52, 53, 101, 102], "full_lik": [52, 53, 101, 102, 142], "float": [52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 76, 77, 78, 79, 86, 87, 93, 94, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 125, 126, 127, 128, 135, 136, 142, 144, 145, 147, 148, 150, 151, 153, 154, 157, 158, 160, 161, 163, 165, 167], "scalar": [52, 53, 58, 59, 60, 61, 62, 63, 93, 94, 101, 102, 107, 108, 111, 112, 119, 120, 158, 180], "fill": [52, 53, 78, 79, 80, 81, 95, 96, 101, 102, 127, 128, 129, 130, 150], "000123": [52, 53], "ones": [52, 53, 64, 65, 78, 79, 95, 96, 101, 102, 127, 128, 144, 146, 148, 165, 166, 1528], "meshgrid": [52, 53, 101, 102], "spars": [52, 53, 72, 73, 101, 102, 121, 122], "xy": [52, 53, 101, 102], "one_hot": [52, 53, 101, 102, 168, 1528], "on_valu": [52, 53, 101, 102], "off_valu": [52, 53, 101, 102], "scatter": [52, 53, 62, 63, 101, 102, 111, 112, 154], "hot": [52, 53, 101, 102], "float32": [52, 53, 54, 55, 68, 69, 101, 102, 103, 104, 111, 112, 117, 118, 135, 136, 146, 148, 158], "cuda": [52, 53, 78, 79, 111, 112, 127, 128, 163, 180, 1527], "unless": [52, 53, 70, 71, 101, 102, 155, 159, 160, 180], "overrid": [52, 53, 101, 102], "ones_lik": [52, 53, 101, 102, 155, 168, 1528], "tril": [52, 53, 101, 102], "k": [52, 53, 68, 69, 70, 71, 78, 79, 101, 102, 107, 108, 117, 118, 119, 120, 127, 128, 141, 147, 149, 163], "innermost": [52, 53, 70, 71, 119, 120], "mxn": [52, 53, 70, 71, 119, 120], "diagon": [52, 53, 70, 71, 119, 120], "triangular": [52, 53, 70, 71, 119, 120], "triu": [52, 53, 101, 102], "upper": [52, 53, 70, 71, 78, 79, 119, 120, 127, 128, 148, 160], "zeros_lik": [52, 53, 101, 102, 149, 154, 1528], "creation": [53, 92, 95, 96, 97, 98, 102, 142, 144, 148, 150, 151, 158, 159, 161, 163], "data_typ": [54, 55, 103, 104, 142, 148, 158], "astyp": [54, 55, 68, 69, 103, 104, 117, 118, 149, 154, 158, 160], "irrespect": [54, 55, 103, 104, 157, 160, 165], "rule": [54, 55, 70, 71, 103, 104, 119, 120, 143, 144, 146, 147, 148, 153, 154, 156, 157, 158], "cast": [54, 55, 103, 104, 150, 153, 158, 163, 1528], "nan": [54, 55, 58, 59, 62, 63, 86, 87, 103, 104, 107, 108, 111, 112, 142, 145, 147, 148], "infin": [54, 55, 58, 59, 62, 63, 103, 104, 107, 108, 119, 120, 145, 147], "non": [54, 55, 70, 71, 78, 79, 80, 81, 86, 87, 88, 89, 103, 104, 119, 120, 127, 128, 129, 130, 135, 136, 137, 138, 146, 157, 158, 161, 163], "float64": [54, 55, 78, 79, 86, 87, 103, 104, 127, 128, 135, 136, 148, 158], "broadcast_arrai": [54, 55, 103, 104], "arbitrari": [54, 55, 95, 96, 103, 104, 144, 148, 149, 153, 157, 160, 167, 180], "x3": [54, 55], "mix": [54, 55, 58, 59, 92, 97, 98, 103, 104, 107, 108, 111, 112, 121, 122, 127, 128, 141, 146, 148, 154, 160, 163, 1527], "nativearrai": [54, 55, 58, 59, 62, 63, 107, 108, 111, 112, 142, 143, 144, 146, 149, 151, 153, 156, 157, 160, 161, 163, 165, 181, 191, 1527], "broadcast_to": [54, 55, 103, 104, 158], "can_cast": [54, 55, 103, 104, 149, 153, 158], "occur": [54, 55, 82, 83, 103, 104, 131, 132, 147], "as_n": [54, 55, 56, 57, 103, 104, 105, 106, 158], "int32": [54, 55, 78, 79, 80, 81, 86, 87, 103, 104, 111, 112, 127, 128, 129, 130, 148, 158, 163], "finfo": [54, 55, 103, 104, 148], "iinfo": [54, 55, 103, 104, 143], "119": [54, 55], "122": [54, 55], "int8": [54, 55, 78, 79, 127, 128, 148, 158], "min": [54, 55, 62, 63, 86, 87, 103, 104, 111, 112, 135, 136], "128": [54, 55, 68, 69, 92, 97, 98, 117, 118], "max": [54, 55, 60, 61, 62, 63, 70, 71, 86, 87, 103, 104, 109, 110, 111, 112, 119, 120, 135, 136, 148], "127": [54, 55, 60, 61, 109, 110], "is_bool_dtyp": [54, 55, 103, 104], "is_float_dtyp": [54, 55, 103, 104, 142], "is_int_dtyp": [54, 55, 103, 104, 142, 150], "is_uint_dtyp": [54, 55, 103, 104, 142, 150], "result_typ": [54, 55, 103, 104, 158], "arrays_and_dtyp": [54, 55, 103, 104], "to_devic": [56, 57, 105, 106], "stream": [56, 57, 105, 106], "ab": [58, 59, 107, 108, 148, 158, 161, 1528], "aco": [58, 59, 107, 108, 1528], "real": [58, 59, 107, 108], "cosin": [58, 59, 107, 108], "57": [58, 59, 107, 108], "69": [58, 59, 113, 114, 127, 128, 148, 166], "acosh": [58, 59, 107, 108, 1528], "hyperbol": [58, 59, 107, 108], "99": [58, 59, 64, 65, 107, 108, 127, 128], "asin": [58, 59, 107, 108, 1528], "sine": [58, 59, 107, 108], "927": [58, 59, 107, 108], "asinh": [58, 59, 107, 108, 1528], "atan": [58, 59, 107, 108, 1528], "tangent": [58, 59, 107, 108, 145], "785": [58, 59, 107, 108], "464": [58, 59, 127, 128], "atan2": [58, 59, 107, 108, 1528], "coordin": [58, 59, 80, 81, 107, 108, 129, 130], "quotient": [58, 59, 107, 108], "245": [58, 59, 117, 118], "atanh": [58, 59, 107, 108, 1528], "549": [58, 59, 107, 108, 117, 118], "47": [58, 59, 60, 61, 78, 79, 107, 108, 111, 112, 113, 114, 127, 128], "bitwise_and": [58, 59, 107, 108], "bitwise_invert": [58, 59, 107, 108], "bitiwse_invert": [58, 59], "bitwise_left_shift": [58, 59, 107, 108], "bitwise_or": [58, 59, 107, 108], "bitwise_xor": [58, 59, 107, 108], "ceil": [58, 59, 107, 108, 1528], "radian": [58, 59, 60, 61, 107, 108, 109, 110, 145], "54": [58, 59, 68, 69, 107, 108, 109, 110, 117, 118, 127, 128, 146], "416": [58, 59], "cosh": [58, 59, 107, 108, 1528], "angl": [58, 59, 107, 108, 179], "76": [58, 59, 103, 104, 107, 108, 127, 128], "23": [58, 59, 60, 61, 78, 79, 101, 102, 107, 108, 111, 112, 127, 128, 148, 163], "03": [58, 59, 107, 108, 113, 114, 127, 128], "81": [58, 59, 103, 104, 107, 108, 119, 120, 127, 128, 148], "deg2rad": [58, 59, 107, 108], "degre": [58, 59, 86, 87, 107, 108, 135, 136], "180": [58, 59, 107, 108], "270": [58, 59, 107, 108], "360": [58, 59, 107, 108], "71": [58, 59, 107, 108], "28": [58, 59, 76, 77, 107, 108, 111, 112, 127, 128], "divid": [58, 59, 62, 63, 74, 75, 95, 96, 107, 108, 123, 124, 146, 156, 157], "dividend": [58, 59, 107, 108], "divisor": [58, 59, 64, 65, 86, 87, 107, 108, 113, 114, 135, 136], "375": [58, 59], "erf": [58, 59, 107, 108], "exponenti": [58, 59, 107, 108], "gauss": [58, 59, 107, 108], "exp": [58, 59, 107, 108, 1528], "expm1": [58, 59, 107, 108, 158], "244": [58, 59], "918": [58, 59], "48": [58, 59, 60, 61, 107, 108, 109, 110, 111, 112, 113, 114, 127, 128], "147": [58, 59], "floor": [58, 59, 107, 108, 1528], "floor_divid": [58, 59, 107, 108], "greater_equ": [58, 59, 107, 108], "isfinit": [58, 59, 107, 108, 149], "out_i": [58, 59, 107, 108], "self_i": [58, 59, 107, 108], "finit": [58, 59, 107, 108], "inf": [58, 59, 62, 63, 107, 108, 111, 112, 119, 120, 148], "isinf": [58, 59, 107, 108], "neg": [58, 59, 70, 71, 74, 75, 78, 79, 88, 89, 93, 94, 107, 108, 119, 120, 123, 124, 127, 128, 137, 138, 153, 157, 160], "isnan": [58, 59, 107, 108], "isreal": [58, 59, 107, 108], "1j": [58, 59, 107, 108], "5j": [58, 59, 107, 108], "6j": [58, 59], "less_equ": [58, 59, 107, 108, 151], "24": [58, 59, 86, 87, 111, 112, 117, 118, 127, 128, 166], "61": [58, 59, 107, 108, 113, 114, 121, 122, 127, 128], "log10": [58, 59, 107, 108], "logarithm": [58, 59, 107, 108], "602": [58, 59], "699": [58, 59], "log1p": [58, 59, 107, 108], "693": [58, 59, 107, 108], "001": [58, 59, 76, 77, 166, 167], "0953": [58, 59, 107, 108], "log2": [58, 59, 107, 108], "logaddexp": [58, 59, 107, 108], "05": [58, 59, 64, 65, 76, 77, 86, 87, 107, 108, 113, 114, 125, 126, 148, 150], "logical_and": [58, 59, 107, 108, 149, 154, 1528], "logical_not": [58, 59, 107, 108, 158, 1528], "logical_or": [58, 59, 107, 108, 1528], "conform": [58, 59, 107, 108, 145], "org": [58, 59, 107, 108, 113, 114, 145], "api_specif": [58, 59, 107, 108, 145], "elementwise_funct": [58, 59, 107, 108, 145], "assum": [58, 59, 107, 108, 145, 150, 154, 155, 158, 165, 166, 180], "simplic": [58, 59, 107, 108, 145, 154, 167, 179], "nestabl": [58, 59, 107, 108, 141, 145, 146, 148, 160, 1527], "logical_xor": [58, 59, 107, 108], "use_wher": [58, 59, 107, 108], "formula": [58, 59, 107, 108], "clip": [58, 59, 74, 75, 107, 108, 111, 112, 123, 124, 153, 157, 160, 166, 168, 1528], "minimum": [58, 59, 62, 63, 74, 75, 80, 81, 107, 108, 111, 112, 123, 124, 129, 130, 1528], "exce": [58, 59], "not_equ": [58, 59, 107, 108], "pow": [58, 59, 107, 108, 147], "expon": [58, 59, 62, 63, 111, 112], "rad2deg": [58, 59, 107, 108], "286": [58, 59], "458": [58, 59], "573": [58, 59], "reciproc": [58, 59, 107, 108], "remaind": [58, 59, 74, 75, 95, 96, 107, 108, 123, 124], "modulu": [58, 59, 107, 108], "x2_i": [58, 59, 107, 108, 147], "11": [58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 78, 79, 86, 87, 92, 97, 98, 107, 108, 109, 110, 111, 112, 117, 118, 123, 124, 127, 128, 135, 136, 142, 146, 148, 157, 158], "18": [58, 59, 60, 61, 78, 79, 107, 108, 127, 128, 135, 136, 146, 157], "94": [58, 59, 64, 65, 78, 79, 107, 108, 113, 114, 127, 128], "256": [58, 59], "0001": [58, 59], "36": [58, 59, 68, 69, 111, 112, 119, 120], "67": [58, 59, 62, 63, 107, 108, 111, 112, 127, 128], "45": [58, 59, 92, 97, 98, 107, 108, 113, 114, 127, 128], "678": [58, 59], "25": [58, 59, 62, 63, 70, 71, 72, 73, 78, 79, 86, 87, 93, 94, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 125, 126, 127, 128, 135, 136, 157], "33": [58, 59, 78, 79, 86, 87, 107, 108, 111, 112, 113, 114, 117, 118], "sin": [58, 59, 62, 63, 107, 108, 156, 163, 1528], "841": [58, 59, 107, 108], "909": [58, 59, 107, 108, 111, 112], "141": [58, 59, 107, 108], "sinh": [58, 59, 107, 108, 1528], "63": [58, 59, 93, 94, 107, 108, 119, 120], "232": [58, 59, 107, 108], "51": [58, 59, 111, 112, 127, 128], "sqrt": [58, 59, 107, 108], "squar": [58, 59, 70, 71, 107, 108, 119, 120], "tan": [58, 59, 107, 108, 144, 145, 149, 153, 157, 160, 163, 1528], "56": [58, 59, 68, 69, 78, 79, 107, 108, 146], "19": [58, 59, 60, 61, 78, 79, 107, 108, 119, 120, 127, 128, 146], "tanh": [58, 59, 107, 108, 163, 1528], "762": [58, 59, 107, 108], "964": [58, 59, 107, 108], "trunc": [58, 59, 107, 108], "trunc_divid": [58, 59, 107, 108], "elementwis": [59, 76, 77, 108, 125, 126, 142, 153, 163], "flatten": [60, 61, 62, 63, 74, 75, 80, 81, 82, 83, 109, 110, 111, 112, 119, 120, 123, 124, 129, 130, 131, 132], "start_dim": [60, 61, 109, 110], "end_dim": [60, 61, 109, 110], "unstack": [60, 61, 74, 75, 95, 96, 123, 124, 157, 163, 166, 1528], "dim": [60, 61, 95, 96, 101, 102, 109, 110, 150, 154, 158], "heavisid": [60, 61, 109, 110], "0000": [60, 61, 109, 110], "5000": [60, 61], "lcm": [60, 61, 109, 110], "21": [60, 61, 62, 63, 78, 79, 107, 108, 109, 110, 111, 112, 127, 128, 135, 136], "60": [60, 61, 109, 110, 111, 112, 127, 128], "max_pool2d": [60, 61, 109, 110], "kernel": [60, 61, 68, 69, 109, 110, 117, 118, 154, 163, 180], "stride": [60, 61, 68, 69, 109, 110, 117, 118], "pad": [60, 61, 68, 69, 109, 110, 117, 118], "data_format": [60, 61, 68, 69, 109, 110, 117, 118], "nhwc": [60, 61, 68, 69, 109, 110, 117, 118], "batch_siz": [60, 61, 68, 69, 78, 79, 109, 110, 117, 118, 127, 128, 166], "h": [60, 61, 68, 69, 109, 110, 111, 112, 117, 118, 141, 157], "w": [60, 61, 64, 65, 68, 69, 95, 96, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 163, 166, 167], "d_in": [60, 61, 68, 69, 109, 110, 117, 118], "slide": [60, 61, 68, 69, 109, 110, 117, 118], "valid": [60, 61, 68, 69, 88, 89, 109, 110, 117, 118, 137, 138, 146, 148, 150, 155, 158], "algorithm": [60, 61, 68, 69, 93, 94, 109, 110, 117, 118, 149, 154, 180], "nchw": [60, 61, 68, 69, 109, 110, 117, 118], "pool": [60, 61, 109, 110], "arang": [60, 61, 109, 110, 158, 1528], "reshap": [60, 61, 74, 75, 95, 96, 109, 110, 117, 118, 123, 124, 148, 149, 160, 163, 165, 168, 1528], "40": [60, 61, 62, 63, 92, 97, 98, 109, 110, 111, 112, 127, 128], "41": [60, 61, 107, 108, 111, 112, 119, 120], "46": [60, 61, 78, 79, 117, 118, 127, 128], "median": [60, 61, 109, 110, 149], "keepdim": [60, 61, 70, 71, 74, 75, 80, 81, 86, 87, 88, 89, 95, 96, 109, 110, 119, 120, 123, 124, 129, 130, 135, 136, 137, 138, 149, 151, 163], "reduc": [60, 61, 62, 63, 70, 71, 80, 81, 86, 87, 88, 89, 95, 96, 109, 110, 111, 112, 119, 120, 129, 130, 135, 136, 137, 138, 149, 151, 154, 163, 165], "moveaxi": [60, 61, 109, 110], "destin": [60, 61, 109, 110], "reorder": [60, 61, 109, 110], "pad_width": [60, 61, 74, 75, 109, 110, 123, 124], "constant": [60, 61, 76, 77, 109, 110, 125, 126, 142, 153, 167, 168, 180], "stat_length": [60, 61, 109, 110], "constant_valu": [60, 61, 109, 110], "end_valu": [60, 61, 109, 110], "reflect_typ": [60, 61, 109, 110], "637": [60, 61, 109, 110], "212": [60, 61, 68, 69, 109, 110], "0909": [60, 61, 109, 110], "all_equ": [62, 63, 111, 112], "equality_matrix": [62, 63, 111, 112], "compar": [62, 63, 84, 85, 95, 96, 111, 112, 133, 134, 143, 146, 148, 150, 155, 166], "array_equ": [62, 63], "arrays_equ": [62, 63, 95, 96], "assert_supports_inplac": [62, 63, 111, 112], "clip_matrix_norm": [62, 63, 111, 112], "max_norm": [62, 63, 111, 112], "norm": [62, 63, 77, 111, 112, 119, 120, 126, 142, 1528], "downscal": [62, 63, 111, 112], "894": [62, 63, 111, 112], "79": [62, 63, 111, 112, 127, 128], "clip_vector_norm": [62, 63, 111, 112], "vector": [62, 63, 68, 69, 70, 71, 111, 112, 117, 118, 119, 120, 179], "default_v": [62, 63], "catch_except": [62, 63], "rev": [62, 63], "with_cal": [62, 63], "catch": [62, 63, 148], "callabl": [62, 63, 111, 112, 148, 149, 151, 163, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "einops_rearrang": [62, 63, 111, 112], "axes_length": [62, 63, 111, 112], "arrang": [62, 63], "rearrang": [62, 63, 111, 112], "einops_reduc": [62, 63, 111, 112], "reduct": [62, 63, 72, 73, 88, 89, 95, 96, 111, 112, 121, 122, 137, 138, 148, 158, 165, 1528], "One": [62, 63, 74, 75, 78, 79, 111, 112, 123, 124, 127, 128, 146, 148, 150, 158, 163, 165, 166], "prod": [62, 63, 86, 87, 111, 112, 135, 136, 146, 158, 163], "einops_repeat": [62, 63, 111, 112], "fourier_encod": [62, 63, 111, 112], "max_freq": [62, 63, 111, 112], "num_band": [62, 63, 111, 112], "linear": [62, 63, 68, 69, 93, 94, 111, 112, 117, 118, 145, 148, 149, 154, 163, 166, 167, 168, 1528], "concat": [62, 63, 74, 75, 95, 96, 123, 124, 150, 154, 163, 1528], "band": [62, 63, 111, 112], "linearli": [62, 63, 111, 112], "oppos": [62, 63, 111, 112, 158], "geometr": [62, 63, 111, 112], "concaten": [62, 63, 74, 75, 150, 154, 163, 166, 1528], "seper": [62, 63, 146], "batch": [62, 63, 95, 96, 111, 112, 119, 120, 153, 157, 166], "expand": [62, 63, 74, 75, 111, 112, 157], "gather": [62, 63, 111, 112], "gather_nd": [62, 63, 111, 112, 1528], "get_num_dim": [62, 63, 111, 112, 1528], "as_arrai": [62, 63, 111, 112], "has_nan": [62, 63, 111, 112], "include_inf": [62, 63, 111, 112], "inplace_decr": [62, 63, 111, 112], "val": [62, 63, 95, 96, 111, 112, 160, 165], "decrement": [62, 63, 111, 112], "inplace_incr": [62, 63, 111, 112], "inplace_upd": [62, 63, 111, 112, 160], "ensure_in_backend": [62, 63, 160], "inplac": [62, 63, 64, 65, 95, 96, 111, 112, 141, 144, 146, 150, 154, 156, 161, 165, 167], "is_arrai": [62, 63, 111, 112, 149], "exclus": [62, 63, 64, 65, 86, 87, 95, 96, 111, 112, 113, 114, 135, 136, 142, 149, 153, 157, 158, 168], "trace": [62, 63, 70, 71, 95, 96, 111, 112, 119, 120, 163, 180, 1527], "is_ivy_arrai": [62, 63, 111, 112, 160, 165], "is_ivy_contain": [62, 63, 111, 112], "is_native_arrai": [62, 63, 111, 112, 165], "scatter_flat": [62, 63, 111, 112], "occupi": [62, 63], "hold": [62, 63, 86, 87, 135, 136, 166], "scatter_nd": [62, 63, 111, 112, 154, 165, 1528], "arr": [62, 63, 103, 104, 158, 159], "stable_divid": [62, 63, 111, 112, 153], "denomin": [62, 63, 76, 77, 111, 112, 125, 126, 153, 180], "min_denomin": [62, 63, 111, 112], "divis": [62, 63, 64, 65, 111, 112, 113, 114, 153], "_min_denomin": [62, 63, 111, 112], "stable_pow": [62, 63, 111, 112], "min_bas": [62, 63, 111, 112], "_min_bas": [62, 63, 76, 77, 111, 112, 125, 126], "power": [62, 63, 70, 71, 111, 112, 119, 120, 148, 165, 166, 167], "supports_inplace_upd": [62, 63, 111, 112], "supports_inplac": [62, 63, 111, 112], "to_list": [62, 63, 111, 112, 1528], "represent": [62, 63, 92, 95, 96, 97, 98, 111, 112, 179], "to_numpi": [62, 63, 111, 112, 166, 1528], "to_scalar": [62, 63, 111, 112], "value_is_nan": [62, 63, 111, 112], "92": [62, 63, 127, 128], "adam_step": [64, 65, 113, 114], "mw": [64, 65, 113, 114, 167], "vw": [64, 65, 113, 114, 167], "beta1": [64, 65, 113, 114, 167], "beta2": [64, 65, 113, 114, 167], "999": [64, 65, 107, 108, 113, 114, 167], "epsilon": [64, 65, 70, 71, 72, 73, 76, 77, 113, 114, 119, 120, 121, 122, 125, 126, 153, 157, 160, 167], "1e": [64, 65, 72, 73, 76, 77, 113, 114, 121, 122, 125, 126, 150, 153, 157, 160, 167, 168, 1528], "07": [64, 65, 72, 73, 107, 108, 113, 114, 121, 122, 127, 128, 167], "cost": [64, 65, 113, 114, 154], "weight": [64, 65, 68, 69, 76, 77, 113, 114, 117, 118, 125, 126, 153, 157, 163, 167, 168], "dc": [64, 65, 113, 114], "dw": [64, 65, 113, 114], "averag": [64, 65, 113, 114], "forget": [64, 65, 113, 114, 158], "adam": [64, 65, 113, 114, 166, 167, 168, 1528], "delta": [64, 65, 113, 114], "dcdw": [64, 65, 113, 114], "adam_step_delta": [64, 65, 113, 114], "182": [64, 65], "adam_upd": [64, 65, 113, 114, 167], "lr": [64, 65, 113, 114, 166, 167], "mw_tm1": [64, 65, 113, 114], "vw_tm1": [64, 65, 113, 114], "stop_gradi": [64, 65, 113, 114, 167, 1528], "rate": [64, 65, 113, 114], "stop": [64, 65, 101, 102, 113, 114, 144, 154, 163, 180], "ws_new": [64, 65, 113, 114], "gradient_descent_upd": [64, 65, 113, 114, 1528], "handl": [64, 65, 92, 95, 96, 97, 98, 141, 144, 148, 149, 150, 153, 154, 157, 158, 159, 160, 161, 167], "higher": [64, 65, 162, 163, 168, 180], "descent": [64, 65, 113, 114, 167], "new_weight": [64, 65, 113, 114, 166], "95": [64, 65, 78, 79, 113, 114, 127, 128], "97": [64, 65, 107, 108, 113, 114, 127, 128], "96": [64, 65, 107, 108, 109, 110, 111, 112, 127, 128], "is_var": [64, 65, 113, 114], "lamb_upd": [64, 65, 113, 114], "max_trust_ratio": [64, 65, 113, 114], "decay_lambda": [64, 65, 113, 114], "trust": [64, 65, 113, 114], "ratio": [64, 65, 113, 114], "decai": [64, 65, 113, 114], "lamb": [64, 65, 113, 114, 167], "784": [64, 65], "78": [64, 65], "02": [64, 65, 76, 77, 78, 79, 107, 108, 113, 114, 127, 128], "5e": [64, 65], "04": [64, 65, 113, 114, 148, 150], "0e": [64, 65, 113, 114], "lars_upd": [64, 65, 113, 114], "lar": [64, 65, 113, 114, 167], "optimizer_upd": [64, 65, 113, 114], "effective_grad": [64, 65, 113, 114], "3e": [64, 65, 113, 114], "preserve_typ": [64, 65, 113, 114], "preserv": [64, 65, 92, 95, 96, 97, 98, 113, 114, 148, 168, 180], "variable_data": [64, 65, 113, 114], "intern": [64, 65, 95, 96, 113, 114, 145, 156, 157, 159, 160], "gradient": [65, 114, 142, 166, 167, 179, 180, 1528], "conv1d": [68, 69, 117, 118], "nwc": [68, 69, 117, 118], "dilat": [68, 69, 109, 110, 117, 118], "convolut": [68, 69, 117, 118], "fw": [68, 69, 117, 118, 148, 150], "d_out": [68, 69, 117, 118], "ncw": [68, 69, 117, 118], "wio": [68, 69], "20": [68, 69, 78, 79, 86, 87, 107, 108, 111, 112, 127, 128, 135, 136, 154, 165], "conv1d_transpos": [68, 69, 117, 118], "output_shap": [68, 69, 117, 118], "conv2d": [68, 69, 117, 118, 1528], "fh": [68, 69, 117, 118], "hwio": [68, 69], "conv3d": [68, 69, 117, 118], "ndhwc": [68, 69, 117, 118], "conv3d_transpos": [68, 69, 117, 118], "depthwise_conv2d": [68, 69, 117, 118, 1528], "randint": [68, 69, 78, 79, 117, 118, 127, 128, 158, 1528], "255": [68, 69, 117, 118], "random_norm": [68, 69, 78, 79, 117, 118, 127, 128], "std": [68, 69, 78, 79, 86, 87, 117, 118, 127, 128, 135, 136, 146], "dropout": [68, 69, 117, 118, 166], "prob": [68, 69, 117, 118, 127, 128], "scale": [68, 69, 113, 114, 117, 118], "bia": [68, 69, 76, 77, 117, 118, 125, 126, 163, 167], "transform": [68, 69, 117, 118, 168, 179, 1527], "outer_batch_shap": [68, 69, 117, 118], "inner_batch_shap": [68, 69, 117, 118], "in_featur": [68, 69, 117, 118], "out_featur": [68, 69, 117, 118], "84": [68, 69, 107, 108, 125, 126, 127, 128], "133": [68, 69], "134": [68, 69], "lstm_updat": [68, 69, 117, 118, 163], "init_h": [68, 69, 117, 118, 163], "init_c": [68, 69, 117, 118, 163], "recurrent_kernel": [68, 69, 117, 118, 163], "recurrent_bia": [68, 69, 117, 118, 163], "multi_head_attent": [68, 69, 117, 118, 160], "num_head": [68, 69, 117, 118], "mask": [68, 69, 117, 118, 154], "to_q_fn": [68, 69, 117, 118], "to_kv_fn": [68, 69, 117, 118], "to_out_fn": [68, 69, 117, 118, 160], "to_q_v": [68, 69, 117, 118], "to_kv_v": [68, 69, 117, 118], "to_out_v": [68, 69, 117, 118], "scaled_dot_product_attent": [68, 69, 117, 118], "linear_algebra": [70, 71, 119, 120, 142], "choleski": [70, 71, 119, 120, 160], "symmetr": [70, 71, 109, 110, 119, 120, 157], "625": [70, 71], "cross": [70, 71, 72, 73, 119, 120, 121, 122, 152, 1528], "vif": [70, 71, 119, 120], "det": [70, 71, 119, 120], "offset": [70, 71, 119, 120], "axis1": [70, 71, 74, 75, 119, 120, 123, 124], "axis2": [70, 71, 119, 120], "eigh": [70, 71, 119, 120], "eigvalsh": [70, 71], "inv": [70, 71, 119, 120, 1528], "adjoint": [70, 71, 119, 120], "matmul": [70, 71, 119, 120, 142, 148, 155, 163, 1528], "matrix_norm": [70, 71, 119, 120], "ord": [70, 71, 119, 120], "fro": [70, 71, 119, 120], "matrix_rank": [70, 71, 119, 120], "atol": [70, 71, 119, 120], "rtol": [70, 71, 119, 120, 150], "rank": [70, 71, 74, 75, 88, 89, 119, 120, 123, 124, 137, 138], "singular": [70, 71, 119, 120], "toler": [70, 71, 119, 120, 147, 150], "small": [70, 71, 76, 77, 119, 120, 125, 126, 146, 150, 153, 154, 163, 167, 180], "largest_singular_valu": [70, 71, 119, 120], "equival": [70, 71, 119, 120, 149, 154, 160, 166, 168], "ep": [70, 71, 119, 120], "defici": [70, 71], "matrix_transpos": [70, 71, 119, 120, 165], "pinv": [70, 71, 119, 120, 1528], "0426": [70, 71, 119, 120], "0964": [70, 71, 119, 120], "0605": [70, 71, 119, 120], "1368": [70, 71, 119, 120], "qr": [70, 71, 119, 120], "slogdet": [70, 71, 119, 120], "namedtupl": [70, 71, 82, 83, 119, 120, 131, 132], "logabsdet": [70, 71, 119, 120], "6931472": [70, 71], "solv": [70, 71, 119, 120, 147, 164, 179], "svd": [70, 71, 119, 120, 1528], "compute_uv": [70, 71, 119, 120], "full_matric": [70, 71, 119, 120], "svdval": [70, 71, 119, 120], "tensordot": [70, 71, 119, 120, 158], "vander": [70, 71, 119, 120], "vandermond": [70, 71, 119, 120], "column": [70, 71, 119, 120], "len": [70, 71, 119, 120, 148, 149, 160, 165, 168], "27": [70, 71, 78, 79, 119, 120, 127, 128], "125": [70, 71, 119, 120], "vecdot": [70, 71, 119, 120], "vector_norm": [70, 71, 119, 120], "vector_to_skew_symmetric_matrix": [70, 71, 119, 120, 1528], "binary_cross_entropi": [72, 73, 121, 122], "pred": [72, 73, 121, 122, 153, 157, 160], "predict": [72, 73, 121, 122], "amount": [72, 73, 121, 122, 150, 159], "smooth": [72, 73, 121, 122], "binari": [72, 73, 121, 122], "entropi": [72, 73, 121, 122], "357": [72, 73, 121, 122], "223": [72, 73, 121, 122], "cross_entropi": [72, 73, 121, 122, 153, 157, 160], "3862944": [72, 73], "sparse_cross_entropi": [72, 73, 121, 122], "logit": [72, 73, 121, 122], "loss": [73, 122, 142, 149, 153, 158, 166, 167, 168, 1528], "x_min": [74, 75, 123, 124, 168], "x_max": [74, 75, 123, 124, 168], "join": [74, 75, 95, 96, 151, 1528], "count": [74, 75, 82, 83, 88, 89, 131, 132, 137, 138, 146, 166], "constant_pad": [74, 75, 123, 124], "expand_dim": [74, 75, 123, 124, 149, 163, 166, 1528], "flip": [74, 75, 123, 124, 149, 165, 166, 168, 1528], "permute_dim": [74, 75, 123, 124], "tensorshap": [74, 75, 78, 79, 123, 124, 127, 128], "length": [74, 75, 92, 95, 96, 97, 98, 123, 124, 143, 148, 166], "valueerror": [74, 75, 111, 112, 123, 124, 151], "reus": [74, 75, 123, 124, 148, 151], "memori": [74, 75, 123, 124, 149, 154, 159, 160, 163, 178, 180, 1528], "buffer": [74, 75, 123, 124, 180], "roll": [74, 75, 123, 124, 144, 157], "larger": [74, 75, 86, 87, 123, 124, 135, 136, 148], "restor": [74, 75, 123, 124], "num_or_size_split": [74, 75, 95, 96, 123, 124, 163], "with_remaind": [74, 75, 95, 96, 123, 124], "evenli": [74, 75, 95, 96, 123, 124], "entri": [74, 75, 95, 96, 123, 124, 158], "squeez": [74, 75, 123, 124, 1528], "swapax": [74, 75, 123, 124], "axis0": [74, 75, 123, 124], "swap_ax": [74, 75], "tile": [74, 75, 111, 112, 123, 124, 1528], "rep": [74, 75, 123, 124], "unpack": [74, 75, 123, 124, 143, 148, 150], "zero_pad": [74, 75, 123, 124, 1528], "layer_norm": [76, 77, 125, 126], "normalized_idx": [76, 77, 125, 126], "new_std": [76, 77, 125, 126], "learnabl": [76, 77, 125, 126, 168], "gamma": [76, 77, 125, 126], "0976": [76, 77], "3452": [76, 77], "2740": [76, 77], "1047": [76, 77], "5886": [76, 77], "2732": [76, 77], "7696": [76, 77], "7024": [76, 77], "2518": [76, 77], "826": [76, 77], "178": [76, 77], "981": [76, 77], "831": [76, 77], "421": [76, 77], "26": [76, 77, 78, 79, 111, 112, 113, 114, 127, 128], "multinomi": [78, 79, 127, 128], "population_s": [78, 79, 127, 128], "num_sampl": [78, 79, 127, 128], "seed": [78, 79, 95, 96, 127, 128, 1528], "unnorm": [78, 79, 127, 128, 148], "popul": [78, 79, 86, 87, 95, 96, 127, 128, 135, 136, 148, 158, 159, 163], "uniform": [78, 79, 127, 128, 167], "batch_shap": [78, 79, 101, 102, 127, 128, 154, 163, 165], "sampl": [78, 79, 86, 87, 127, 128, 135, 136, 148, 150, 161], "independ": [78, 79, 127, 128, 146, 147, 161, 163, 168], "drawn": [78, 79, 127, 128, 148], "parameter": [78, 79, 127, 128], "highest": [78, 79, 127, 128], "low": [78, 79, 127, 128, 149, 154, 163], "half": [78, 79, 127, 128, 154], "int16": [78, 79, 103, 104, 127, 128, 148, 158, 163], "int64": [78, 79, 80, 81, 84, 85, 103, 104, 127, 128, 129, 130, 133, 134, 135, 136, 148, 158, 163], "44": [78, 79, 127, 128], "72": [78, 79, 113, 114], "235": [78, 79], "float16": [78, 79, 127, 128, 148, 158], "49": [78, 79, 119, 120], "807": [78, 79], "42": [78, 79, 93, 94, 113, 114, 125, 126, 127, 128, 163, 168], "random_uniform": [78, 79, 127, 128, 148, 159, 167, 1528], "boundari": [78, 79, 127, 128], "86": [78, 79, 127, 128], "89": [78, 79, 103, 104, 127, 128], "06": [78, 79, 107, 108, 113, 114, 148, 166], "53": [78, 79, 107, 108], "shuffl": [78, 79, 95, 96, 127, 128, 1528], "argmax": [80, 81, 129, 130, 1528], "output_dtyp": [80, 81, 129, 130], "insert": [80, 81, 129, 130], "occurr": [80, 81], "argmin": [80, 81, 129, 130, 1528], "singleton": [80, 81, 86, 87, 88, 89, 119, 120, 129, 130, 135, 136, 137, 138, 163], "accordingli": [80, 81, 86, 87, 88, 89, 119, 120, 129, 130, 135, 136, 137, 138, 143, 149, 163], "argwher": [80, 81, 129, 130, 143], "nonzero": [80, 81, 129, 130], "as_tupl": [80, 81, 129, 130], "fewer": [80, 81, 129, 130], "yield": [80, 81, 143, 152], "condit": [80, 81, 129, 130, 146, 147, 148, 151, 160, 179], "unique_al": [82, 83, 131, 132], "unique_count": [82, 83, 131, 132], "field": [82, 83, 131, 132, 179], "unique_invers": [82, 83, 131, 132], "inverse_indic": [82, 83, 131, 132], "reconstruct": [82, 83, 131, 132], "unique_valu": [82, 83, 131, 132], "argsort": [84, 85, 133, 134], "descend": [84, 85, 133, 134], "ascend": [84, 85, 133, 134], "stabil": [84, 85, 133, 134, 154], "searchsort": [84, 85, 133, 134], "sorter": [84, 85, 133, 134], "ret_dtyp": [84, 85, 133, 134], "cumprod": [86, 87, 135, 136, 149, 168], "cumul": [86, 87, 135, 136, 179], "120": [86, 87, 92, 97, 98, 135, 136], "cumsum": [86, 87, 135, 136, 158, 1528], "einsum": [86, 87, 135, 136], "equat": [86, 87, 135, 136], "arithmet": [86, 87, 135, 136, 149], "x_i": [86, 87, 107, 108, 145], "propag": [86, 87], "By": [86, 87, 88, 89, 135, 136, 137, 138, 146, 149, 153, 158, 160, 163, 167, 168], "var": [86, 87, 135, 136, 139, 140, 146, 163], "varianc": [86, 87, 135, 136], "freedom": [86, 87, 135, 136, 155], "constitut": [86, 87, 135, 136, 153, 163], "unbias": [86, 87, 135, 136], "commonli": [86, 87, 135, 136, 151, 153], "bessel": [86, 87, 135, 136], "6666665": [86, 87, 166], "667": [86, 87, 111, 112], "AND": [88, 89, 137, 138], "backward": [88, 89, 137, 138, 180], "invalid": [88, 89, 137, 138, 143, 158], "add_ivy_array_instance_method": 90, "cl": [90, 91, 139, 140], "to_ignor": [90, 91, 139, 140], "loop": [90, 91, 139, 140, 143, 155, 180], "_wrap_funct": [90, 91, 139, 140, 153, 161], "toi": [90, 91, 139, 140], "arrayexampl": [90, 91], "hasattr": [90, 91, 139, 140], "dict_in": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "queue": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 166], "queue_load_s": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "container_combine_method": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "list_join": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "queue_timeout": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "print_limit": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "key_length_limit": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "print_ind": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "print_line_spac": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "ivyh": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "default_key_color": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "keyword_color_dict": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "rebuild_child_contain": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "types_to_iteratively_nest": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "alphabetical_kei": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "containerwithactiv": [92, 93, 97, 98], "containerwithconvers": [92, 97, 98, 99], "containerwithcr": [92, 97, 98, 101], "containerwithdatatyp": [92, 97, 98, 103], "containerwithdevic": [92, 97, 98, 105], "containerwithelementwis": [92, 97, 98, 107, 157], "containerwithextens": [92, 97, 98, 109], "containerwithgener": [92, 97, 98, 111], "containerwithgradi": [92, 97, 98, 113], "containerwithimag": [92, 97, 98, 115], "containerwithlay": [92, 97, 98, 117], "containerwithlinearalgebra": [92, 97, 98, 119], "containerwithloss": [92, 97, 98, 121], "containerwithnorm": [92, 97, 98, 125], "containerwithrandom": [92, 97, 98, 127], "containerwithsearch": [92, 97, 98, 129], "containerwithset": [92, 97, 98, 131], "containerwithsort": [92, 97, 98, 133], "containerwithstatist": [92, 97, 98, 135], "containerwithutil": [92, 97, 98, 137], "dictionari": [92, 95, 96, 97, 98, 158, 166, 180], "multiprocess": [92, 95, 96, 97, 98, 166, 180], "asynchron": [92, 95, 96, 97, 98], "arriv": [92, 95, 96, 97, 98, 154], "timeout": [92, 95, 96, 97, 98], "whitespac": [92, 95, 96, 97, 98], "indent": [92, 95, 96, 97, 98, 166], "extra": [92, 95, 96, 97, 98, 146, 149, 150, 154, 156, 158, 161, 163], "newlin": [92, 95, 96, 97, 98, 145], "color": [92, 95, 96, 97, 98, 1576, 1577], "map": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 148, 149, 153, 157, 158, 166, 179, 180, 1527], "termcolor": [92, 95, 96, 97, 98], "constructor": [92, 95, 96, 97, 98, 158, 159, 165], "alphabet": [92, 95, 96, 97, 98], "rshift": [92, 97, 98], "43": [92, 97, 98, 127, 128], "143": [92, 97, 98, 107, 108, 146], "containerbas": [93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 157], "key_chain": [93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "to_appli": [93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "prune_unappli": [93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "map_sequ": [93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "formul": [93, 94], "chain": [93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 149, 156, 157, 167, 168, 180], "prune": [93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "slope": [93, 94], "leaki": [93, 94], "371": [93, 94], "rectifi": [93, 94], "revert": [93, 94], "535": [93, 94], "948": [93, 94], "static_gelu": [93, 94], "static_leaky_relu": [93, 94], "static_log_softmax": [93, 94], "static_relu": [93, 94], "static_sigmoid": [93, 94], "static_softmax": [93, 94], "static_softplu": [93, 94], "__getitem__": [95, 96, 157], "queri": [95, 96, 157, 158, 165], "slice": [95, 96, 111, 112], "__setitem__": [95, 96, 156, 157, 165], "all_fals": [95, 96], "assert_is_bool": [95, 96], "all_key_chain": [95, 96], "include_empti": [95, 96], "all_tru": [95, 96, 157, 166], "as_bool": [95, 96], "assert_contains_sub_contain": [95, 96], "sub_cont": [95, 96], "diff": [95, 96, 146, 157, 166], "assert_contains_sub_structur": [95, 96], "assert_ident": [95, 96], "check_typ": [95, 96], "same_arrai": [95, 96, 166], "assert_identical_structur": [95, 96], "at_key_chain": [95, 96], "ignore_key_error": [95, 96], "ignore_non": [95, 96], "at_kei": [95, 96], "ignor": [95, 96, 146, 148, 152, 180], "substr": [95, 96], "duplic": [95, 96, 143, 145, 150, 155, 161, 167], "container_rightmost": [95, 96], "common_key_chain": [95, 96, 157], "cont_inplace_upd": [95, 96], "contains_sub_contain": [95, 96], "contains_sub_structur": [95, 96], "create_if_abs": [95, 96], "noth": [95, 96, 154], "cutoff_at_depth": [95, 96], "depth_cutoff": [95, 96], "cutoff_at_height": [95, 96], "height_cutoff": [95, 96], "deep_copi": [95, 96, 166], "dev_str": [95, 96], "diff_kei": [95, 96], "detect_key_diff": [95, 96], "detect_value_diff": [95, 96], "detect_shape_diff": [95, 96], "treat": [95, 96, 148, 164, 168], "container0": [95, 96], "duplicate_array_keychain": [95, 96], "find_sub_contain": [95, 96], "sub_cont_to_find": [95, 96], "exsit": [95, 96], "find_sub_structur": [95, 96], "sub_struc_to_find": [95, 96], "flatten_key_chain": [95, 96, 166], "__": [95, 96, 146, 166], "above_height": [95, 96, 166], "below_depth": [95, 96, 166], "format_key_chain": [95, 96], "format_fn": [95, 96], "string": [95, 96, 143, 151, 155, 158, 159, 163, 166], "from_disk_as_hdf5": [95, 96, 166], "h5_obj_or_filepath": [95, 96], "slice_obj": [95, 96], "load": [95, 96, 180], "disk": [95, 96, 166], "h5py": [95, 96], "hdf5": [95, 96, 166], "h5": [95, 96], "from_disk_as_json": [95, 96, 166], "json_filepath": [95, 96], "from_disk_as_pickl": [95, 96, 166], "pickle_filepath": [95, 96], "pickl": [95, 96, 157, 166], "from_flat_list": [95, 96], "flat_list": [95, 96], "flat": [95, 96], "h5_file_s": [95, 96], "handle_inplac": [95, 96], "prime": [95, 96], "overwritten": [95, 96, 155, 156], "has_kei": [95, 96], "query_kei": [95, 96], "somewher": [95, 96], "has_key_chain": [95, 96], "identical_array_shap": [95, 96], "identical_config": [95, 96], "identical_structur": [95, 96], "if_exist": [95, 96], "key_chains_contain": [95, 96], "sub_str": [95, 96], "list_stack": [95, 96, 166], "map_cont": [95, 96], "include_self": [95, 96], "possibi": [95, 96], "max_depth": [95, 96], "multi_map": [95, 96, 157], "map_nest": [95, 96], "leftmost": [95, 96], "multi_map_in_static_method": [95, 96, 157], "fn_name": [95, 96, 148, 150, 155], "num_arrai": [95, 96, 148, 150], "overwrite_at_key_chain": [95, 96], "target_dict": [95, 96], "return_dict": [95, 96], "prune_empti": [95, 96], "keep_non": [95, 96], "prune_key_chain": [95, 96], "key1": [95, 96, 167], "key2": [95, 96], "key3": [95, 96], "prune_key_from_key_chain": [95, 96], "prune_kei": [95, 96], "prune_keys_from_key_chain": [95, 96], "remove_key_length_limit": [95, 96], "remove_print_limit": [95, 96], "reshape_lik": [95, 96], "leading_shap": [95, 96], "return_cont": [95, 96], "restructur": [95, 96], "keep_orig": [95, 96], "restructure_key_chain": [95, 96], "keychain_map": [95, 96], "set_at_key_chain": [95, 96], "set_at_kei": [95, 96], "attribut": [95, 96, 145, 157, 158, 160, 161, 164, 165, 166, 167], "show_sub_contain": [95, 96], "sub_cont_or_keychain": [95, 96], "shuffle_h5_fil": [95, 96], "seed_valu": [95, 96], "dataset": [95, 96, 166, 178, 1528], "size_ordered_arrai": [95, 96], "keychain": [95, 96], "smallest": [95, 96], "largest": [95, 96, 179], "slice_kei": [95, 96], "key_slic": [95, 96], "all_depth": [95, 96], "slice_via_kei": [95, 96], "sort_by_kei": [95, 96], "split_cont": [95, 96], "constitu": [95, 96, 168], "structural_diff": [95, 96], "to_dict": [95, 96], "to_disk_as_hdf5": [95, 96, 166], "starting_index": [95, 96], "max_batch_s": [95, 96], "to_disk_as_json": [95, 96, 166], "to_disk_as_pickl": [95, 96, 166], "to_flat_list": [95, 96], "to_iter": [95, 96, 157], "leaf_keys_onli": [95, 96], "to_iterator_kei": [95, 96], "to_iterator_valu": [95, 96], "to_json": [95, 96], "to_nested_list": [95, 96], "to_raw": [95, 96], "raw": [95, 96, 145], "trim_kei": [95, 96], "max_length": [95, 96], "trim": [95, 96], "try_kc": [95, 96], "tri": [95, 96], "concatten": [95, 96], "unstack_cont": [95, 96], "dim_siz": [95, 96], "update_config": [95, 96], "with_default_key_color": [95, 96], "with_entries_as_list": [95, 96], "with_ivy_backend": [95, 96], "ivy_backend": [95, 96], "with_key_length_limit": [95, 96, 166], "with_print_ind": [95, 96, 166], "with_print_limit": [95, 96, 166], "with_print_line_spac": [95, 96], "static_to_ivi": [99, 100], "static_to_n": [99, 100], "2324": [101, 102], "234": [101, 102], "123": [101, 102, 148], "static_arang": [101, 102], "static_asarrai": [101, 102], "static_empty_lik": [101, 102], "static_ey": [101, 102], "n_row": [101, 102], "n_col": [101, 102], "static_from_dlpack": [101, 102], "static_full_lik": [101, 102], "static_linspac": [101, 102], "endpoint": [101, 102, 144], "static_logspac": [101, 102], "static_meshgrid": [101, 102], "static_native_arrai": [101, 102], "static_one_hot": [101, 102], "static_on": [101, 102], "static_ones_lik": [101, 102], "static_tril": [101, 102], "static_triu": [101, 102], "static_zero": [101, 102], "static_zeros_lik": [101, 102], "718": [103, 104, 107, 108], "618": [103, 104, 107, 108], "broadcats": [103, 104], "1800": [103, 104], "32768": [103, 104], "32767": [103, 104], "2147483648": [103, 104], "2147483647": [103, 104], "static_astyp": [103, 104], "static_broadcast_arrai": [103, 104], "And": [103, 104, 148], "static_broadcast_to": [103, 104], "static_can_cast": [103, 104], "from_": [103, 104], "static_default_float_dtyp": [103, 104], "float_dtyp": [103, 104], "static_dtyp": [103, 104], "static_finfo": [103, 104], "static_function_supported_dtyp": [103, 104], "static_function_unsupported_dtyp": [103, 104], "static_iinfo": [103, 104], "static_is_bool_dtyp": [103, 104], "dtype_in": [103, 104], "static_is_float_dtyp": [103, 104], "roughli": [103, 104], "static_is_int_dtyp": [103, 104], "static_is_uint_dtyp": [103, 104], "static_result_typ": [103, 104], "static_dev": [105, 106], "static_to_devic": [105, 106], "__dlpack__": [105, 106], "caveat": [105, 106], "portabl": [105, 106, 1528], "524": [107, 108], "644": [107, 108, 167], "305": [107, 108, 117, 118], "915": [107, 108], "29": [107, 108, 111, 112, 113, 114, 127, 128], "983": [107, 108], "75": [107, 108, 111, 112, 117, 118, 127, 128], "978": [107, 108], "696": [107, 108, 127, 128], "993": [107, 108], "203": [107, 108, 125, 126], "34": [107, 108, 111, 112, 127, 128], "52": [107, 108, 111, 112, 113, 114, 127, 128], "351": [107, 108], "50": [107, 108, 111, 112, 165], "00613": [107, 108], "0154": [107, 108], "0262": [107, 108], "873": [107, 108], "333": [107, 108], "thefunct": [107, 108], "649": [107, 108], "220": [107, 108], "959": [107, 108], "865": [107, 108], "metho": [107, 108], "999999999999": [107, 108], "7j": [107, 108], "3j": [107, 108], "0j": [107, 108], "898": [107, 108], "0414": [107, 108], "956": [107, 108], "2860": [107, 108], "413": [107, 108], "recirpoc": [107, 108], "300": [107, 108, 111, 112, 148], "527": [107, 108], "301": [107, 108], "757": [107, 108], "279": [107, 108], "835": [107, 108], "347": [107, 108], "721": [107, 108], "static_ab": [107, 108], "static_aco": [107, 108], "static_acosh": [107, 108], "static_add": [107, 108, 145, 146, 157], "static_asin": [107, 108], "412": [107, 108, 117, 118], "201": [107, 108], "static_asinh": [107, 108], "static_atan": [107, 108], "static_atan2": [107, 108], "static_atanh": [107, 108], "static_bitwise_and": [107, 108], "static_bitwise_invert": [107, 108], "static_bitwise_left_shift": [107, 108], "static_bitwise_or": [107, 108], "static_bitwise_right_shift": [107, 108], "static_bitwise_xor": [107, 108], "static_ceil": [107, 108], "static_co": [107, 108], "static_cosh": [107, 108], "static_deg2rad": [107, 108], "static_divid": [107, 108], "static_equ": [107, 108], "static_erf": [107, 108], "static_exp": [107, 108], "static_expm1": [107, 108], "areal": [107, 108], "static_floor": [107, 108], "static_floor_divid": [107, 108], "static_great": [107, 108], "static_greater_equ": [107, 108], "static_isfinit": [107, 108], "static_isinf": [107, 108], "static_isnan": [107, 108], "static_isr": [107, 108], "23j": [107, 108], "9j": [107, 108], "static_less": [107, 108], "static_less_equ": [107, 108], "static_log": [107, 108], "static_log10": [107, 108], "static_log1p": [107, 108], "static_log2": [107, 108], "static_logaddexp": [107, 108], "static_logical_and": [107, 108], "static_logical_not": [107, 108], "static_logical_or": [107, 108], "static_logical_xor": [107, 108], "static_maximum": [107, 108], "static_minimum": [107, 108], "static_multipli": [107, 108], "static_neg": [107, 108], "static_not_equ": [107, 108], "static_posit": [107, 108], "static_pow": [107, 108], "static_rad2deg": [107, 108], "5160": [107, 108], "10300": [107, 108], "15500": [107, 108], "20600": [107, 108], "static_reciproc": [107, 108], "static_remaind": [107, 108], "static_round": [107, 108], "thevfunct": [107, 108], "static_sign": [107, 108], "static_sin": [107, 108], "static_sinh": [107, 108], "static_sqrt": [107, 108], "static_squar": [107, 108], "static_subtract": [107, 108], "static_tan": [107, 108, 146, 157], "38": [107, 108, 127, 128, 146], "static_tanh": [107, 108], "995": [107, 108], "9999": [107, 108], "static_trunc": [107, 108], "static_trunc_divid": [107, 108], "hann_window": [109, 110], "hann": [109, 110], "7500": [109, 110], "3455": [109, 110], "9045": [109, 110], "kaiser_window": [109, 110], "lenght": [109, 110], "spectral": [109, 110], "analysi": [109, 110], "kaiser": [109, 110], "static_kaiser_window": [109, 110], "2049": [109, 110], "8712": [109, 110], "0367": [109, 110], "7753": [109, 110], "1080": [109, 110], "1550": [109, 110], "130": [109, 110], "0707": [109, 110], "0579": [109, 110], "static_flatten": [109, 110], "static_hann_window": [109, 110], "window_length": [109, 110], "static_hann": [109, 110], "static_heavisid": [109, 110], "static_lcm": [109, 110], "static_max_pool2d": [109, 110], "max_pool2dd": [109, 110], "static_median": [109, 110], "static_moveaxi": [109, 110], "static_pad": [109, 110], "static_sinc": [109, 110], "636": [109, 110], "090": [109, 110], "070": [109, 110], "057": [109, 110], "static_all_equ": [111, 112], "833": [111, 112], "30": [111, 112, 127, 128, 135, 136], "200": [111, 112, 166], "400": [111, 112], "500": [111, 112], "600": [111, 112], "700": [111, 112], "leafwis": [111, 112], "static_assert_supports_inplac": [111, 112], "static_clip_matrix_norm": [111, 112], "849": [111, 112], "static_clip_vector_norm": [111, 112], "static_einops_rearrang": [111, 112], "static_einops_reduc": [111, 112], "93": [111, 112, 127, 128], "66": [111, 112, 113, 114], "static_einops_repeat": [111, 112], "static_fourier_encod": [111, 112], "static_gath": [111, 112], "static_gather_nd": [111, 112], "static_get_num_dim": [111, 112], "static_has_nan": [111, 112], "static_inplace_decr": [111, 112], "static_inplace_incr": [111, 112], "static_inplace_upd": [111, 112], "static_is_arrai": [111, 112], "static_is_ivy_arrai": [111, 112], "static_is_ivy_contain": [111, 112], "static_is_native_arrai": [111, 112], "static_scatter_flat": [111, 112], "ref": [111, 112, 119, 120, 145], "static_scatter_nd": [111, 112], "static_stable_divid": [111, 112], "22222222": [111, 112], "11111111": [111, 112], "857": [111, 112], "444": [111, 112], "static_stable_pow": [111, 112], "static_supports_inplace_upd": [111, 112], "static_to_list": [111, 112], "static_to_numpi": [111, 112], "static_to_scalar": [111, 112], "static_value_is_nan": [111, 112], "452": [111, 112], "425": [111, 112], "87": [113, 114], "976": [113, 114], "49e": [113, 114], "74e": [113, 114], "95e": [113, 114], "024": [113, 114], "096": [113, 114], "216": [113, 114, 119, 120], "384": [113, 114], "626": [113, 114], "65": [113, 114, 127, 128], "en": [113, 114], "wikipedia": [113, 114], "wiki": [113, 114], "stochastic_gradient_desc": [113, 114], "w_new": [113, 114], "88": [113, 114, 127, 128], "708": [113, 114], "445": [113, 114], "6e": [113, 114], "00036": [113, 114], "00016": [113, 114], "00049": [113, 114], "layerwis": [113, 114], "static_is_vari": [113, 114], "static_stop_gradi": [113, 114], "static_vari": [113, 114], "static_variable_data": [113, 114], "ey": [117, 118, 154, 168], "conv2d_transpos": [117, 118], "inp": [117, 118], "278": [117, 118], "105": [117, 118], "352": [117, 118], "195": [117, 118], "static_conv1d": [117, 118], "static_conv1d_transpos": [117, 118], "static_conv2d": [117, 118], "static_conv2d_transpos": [117, 118], "static_conv3d": [117, 118], "static_conv3d_transpos": [117, 118], "static_depthwise_conv2d": [117, 118], "static_dropout": [117, 118], "static_linear": [117, 118], "static_lstm_upd": [117, 118], "static_multi_head_attent": [117, 118], "static_scaled_dot_product_attent": [117, 118], "73": [119, 120, 148], "577": [119, 120], "707": [119, 120], "liter": [119, 120, 143], "nuc": [119, 120], "matrix_pow": [119, 120], "pseudo": [119, 120], "static_choleski": [119, 120], "static_rol": [119, 120, 123, 124, 146, 157], "static_cross": [119, 120], "static_det": [119, 120], "static_diagon": [119, 120], "static_inn": [119, 120], "static_inv": [119, 120], "static_matmul": [119, 120], "matul": [119, 120], "static_matrix_norm": [119, 120], "static_matrix_pow": [119, 120], "static_matrix_rank": [119, 120], "static_matrix_transpos": [119, 120], "static_out": [119, 120], "static_pinv": [119, 120], "static_qr": [119, 120], "static_slogdet": [119, 120], "static_solv": [119, 120], "static_svd": [119, 120], "static_svdv": [119, 120], "static_tensordot": [119, 120], "static_trac": [119, 120], "static_vand": [119, 120], "343": [119, 120], "512": [119, 120], "729": [119, 120, 167], "static_vecdot": [119, 120], "static_vector_norm": [119, 120], "mathemat": [119, 120, 149, 154], "l1": [119, 120, 166], "manhattan": [119, 120], "l2": [119, 120], "euclidean": [119, 120], "static_vector_to_skew_symmetric_matrix": [119, 120], "511": [121, 122], "5108256": [121, 122], "609438": [121, 122], "static_binary_cross_entropi": [121, 122], "static_cross_entropi": [121, 122], "20397282": [121, 122], "83258148": [121, 122], "60943794": [121, 122], "static_sparse_cross_entropi": [121, 122], "static_stack": [123, 124], "static_clip": [123, 124], "static_concat": [123, 124], "static_constant_pad": [123, 124], "static_expand_dim": [123, 124], "container_axi": [123, 124], "static_flip": [123, 124], "static_permute_dim": [123, 124], "static_repeat": [123, 124], "static_reshap": [123, 124], "positivclip": [123, 124], "static_split": [123, 124], "static_squeez": [123, 124], "static_swapax": [123, 124], "static_til": [123, 124], "static_unstack": [123, 124], "static_zero_pad": [123, 124], "classivi": [123, 124, 131, 132], "342": [125, 126], "0427": [125, 126], "299": [125, 126], "241": [125, 126], "102": [127, 128], "431": [127, 128], "68": [127, 128], "83": [127, 128], "274": [127, 128], "91": [127, 128], "static_multinomi": [127, 128], "static_randint": [127, 128], "static_random_norm": [127, 128], "651": [127, 128], "static_random_uniform": [127, 128], "481": [127, 128], "74": [127, 128], "0999": [127, 128], "static_shuffl": [127, 128], "static_argmax": [129, 130], "static_argmin": [129, 130], "static_argwher": [129, 130], "static_nonzero": [129, 130], "static_wher": [129, 130], "static_unique_al": [131, 132], "static_unique_count": [131, 132], "static_unique_invers": [131, 132], "static_unique_valu": [131, 132], "static_argsort": [133, 134], "static_searchsort": [133, 134], "static_sort": [133, 134], "static_cumprod": [135, 136], "static_cumsum": [135, 136], "static_sum": [135, 136], "static_var": [135, 136], "12666667": [135, 136], "11555555": [135, 136], "contian": [135, 136], "6666667": [135, 136], "static_al": [137, 138], "static_ani": [137, 138], "add_ivy_container_instance_method": 139, "containerexampl": [139, 140], "who": [141, 162, 180], "target": [141, 142, 162, 166, 167, 168, 1528], "hood": [141, 146, 148, 149, 153, 154, 157, 162, 163, 166, 168], "weed": [141, 162], "tour": 141, "primari": [141, 148, 149, 154, 155, 158, 160, 180, 1527], "superset": [141, 180], "goe": [141, 154], "dynam": [141, 149, 158, 159, 160, 163], "runtim": [141, 148, 154], "borrow": 141, "taken": [142, 143, 168], "compil": [142, 149, 154, 157, 162, 164, 180, 1527, 1528], "meta": [142, 156], "overlap": [142, 154], "judgement": 142, "some_namespac": 142, "some_backend": 142, "another_backend": 142, "break": [142, 143, 144, 155, 158, 180, 1528], "refactor": 142, "ongo": 142, "file_nam": [142, 148], "my_func": [142, 146], "nativedtyp": [142, 144, 149, 158, 159, 163], "nativedevic": [142, 144, 151, 158, 159], "cooler": 142, "extern": [142, 144, 148, 149], "usabl": [142, 144], "sole": [142, 144], "flexibl": [142, 144], "forward": [142, 145, 148, 154, 155, 168, 179, 180], "something_cool": 142, "clean": [142, 154, 163, 164, 166], "readabl": [142, 144, 151, 156, 157, 165, 166], "_assert_fill_value_and_dtype_are_compat": 142, "isinst": [142, 148, 149, 167, 168], "jaxarrai": [142, 144, 158, 159, 160, 163], "jnp": [142, 144, 150, 158, 159, 160, 163, 168, 1528], "_to_devic": 142, "tf": [142, 144, 148, 149, 154, 156, 158, 159, 160, 163, 168, 180, 1527, 1528], "experiment": [142, 158, 163], "predominantli": [142, 160, 179], "focus": [142, 179], "prior": 142, "opt": [142, 148, 154, 155, 158, 160], "older": 142, "grow": [142, 1528], "unbound": 142, "battl": 142, "subtl": [142, 158], "temporarili": [142, 147], "flake8": 143, "ci": [143, 147, 148, 158, 180], "unus": [143, 146, 160], "undefin": 143, "statement": [143, 148, 154, 160, 180], "outsid": [143, 153, 159, 165], "handler": [143, 162, 164, 168, 1527, 1528], "annot": [143, 144], "star": 143, "byte": 143, "notimpl": 143, "notimplementederror": 143, "achiev": [143, 148, 158, 161, 166, 168, 1527], "unsuccess": 143, "reformat": 143, "exceed": 143, "black": 143, "disobei": 143, "successfulli": 143, "inde": [143, 144, 154, 180], "adress": 144, "conveni": [144, 150, 158, 159, 164, 166, 167, 1527], "revisit": 144, "dedic": [144, 165, 167], "four": [144, 146, 148, 153, 154, 158, 166], "to_native_arrays_and_back": [144, 161, 163, 181], "handle_out_argu": [144, 158, 159, 160, 161, 163, 181], "outputs_to_ivy_arrai": [144, 156, 158, 159, 161, 181], "infer_dtyp": [144, 158, 159, 161, 181], "infer_devic": [144, 158, 159, 161, 181], "nearli": [144, 161], "strictli": [144, 160], "linspac": [144, 154, 163, 1528], "rational": [144, 147], "pure": [144, 145, 149, 154, 165, 168, 180], "__mul__": [144, 146, 154, 156, 157, 165], "__div__": [144, 154], "permit": [144, 148, 149, 154, 156], "dicat": 144, "contrast": [144, 145, 149], "futher": 144, "absenc": [144, 157], "pep": 144, "484": 144, "dictat": [144, 146, 156, 160], "brittl": 144, "intend": [144, 147], "subset": [144, 145, 148, 149, 163], "freeli": 144, "consum": [144, 148, 150, 157], "technic": [144, 160, 180], "original_typ": 144, "cumbersom": 144, "omit": [144, 149, 160], "account": [145, 149], "instanti": 145, "firstli": [145, 146, 151, 153, 154, 156, 158, 160, 161, 166], "templat": [145, 148, 1528], "spec": [145, 146], "array_api": 145, "preview": 145, "render": 145, "incorrectli": 145, "onlin": [145, 146], "domain": 145, "codomain": 145, "operand": [145, 149, 157], "But": [145, 157, 160, 161, 168], "needless": [145, 150], "info": [145, 148, 1528], "renam": 145, "judgment": 145, "beyond": [145, 149], "func_nam": [145, 146, 153], "themselv": [145, 149, 153, 157, 158, 159, 167], "operator_nam": 145, "succinct": 145, "contstructor": 145, "_forward": [145, 163, 166, 167, 1528], "former": [145, 149, 158], "explicitli": [145, 147, 148, 151, 153, 155, 156, 157, 158, 160, 161, 163, 180], "latter": [145, 147, 149, 155, 158], "implicit": [145, 148, 149, 157, 163], "docst": 145, "eight": [146, 162], "static_func_nam": 146, "op_nam": 146, "__r": 146, "__truediv__": [146, 156, 157], "recap": [146, 157, 167], "combinatori": 146, "variat": [146, 148], "grid": [146, 148, 179], "vari": [146, 148, 149, 157, 165], "excess": [146, 155], "okai": [146, 154, 163], "showcas": [146, 179], "demonstr": [146, 165], "replic": [146, 149, 154, 158], "meant": 146, "imaginari": 146, "some_flag": 146, "another_flag": 146, "jointli": 146, "x0": 146, "procedur": [146, 152], "sens": [146, 147, 149, 165], "5574077": 146, "1850398": 146, "5463025": 146, "8422884": 146, "91601413": 146, "9647598": 146, "3738229": 146, "1597457": 146, "0963247": 146, "9955841": 146, "3278579": 146, "multi": [146, 162, 180, 1528, 1534], "pars": [146, 180], "satisfi": [146, 148], "far": [146, 159, 164], "asid": [146, 179], "irrelev": [146, 158], "increasingli": 146, "14254655": 146, "1578213": 146, "380515": 146, "trivial": 146, "exlud": 146, "failing_fn_nam": 146, "minutest": 146, "suffici": 146, "segment": 146, "fault": 146, "conjunct": 147, "establish": 147, "2020": 147, "group": [147, 149, 150, 153, 157], "popular": [147, 1528, 1534], "unconnect": 147, "decis": [147, 149, 154, 157, 158, 163, 165], "initialis": [147, 148], "checkout": [147, 148], "everytim": [147, 158], "init": [147, 168], "thoroughli": 147, "insert_chosen_backend": 147, "vv": 147, "test_manipulation_funct": 147, "test_array_method_signatur": 147, "array_modul": 147, "typic": [147, 153], "nb": 147, "varieti": [147, 148, 152, 158, 159], "known": [147, 148, 149, 158], "test_asarray_arrai": 147, "test_floor_divid": 147, "health": 147, "test_iop": 147, "__imod__": 147, "x1_i": 147, "isequ": 147, "test_matrix_norm": 147, "alter": 147, "tweak": 147, "array_api_methods_to_test": 147, "hand": [147, 148, 153, 158, 180], "scheme": [147, 167], "edg": [147, 148, 1528], "test_special_cas": 147, "__ipow__": 147, "is_integ": 147, "unskip": 147, "straightforward": [147, 166], "On": [148, 149, 158, 164, 168], "cycl": 148, "decor": [148, 149, 150, 153, 157, 158, 159, 160, 161], "bound": [148, 151, 163], "exhaust": 148, "fixtur": 148, "hit": [148, 163], "eleg": 148, "intellig": [148, 154], "rang": [148, 151, 158, 163, 166, 167, 168, 1528], "cach": [148, 153], "unexplor": 148, "repeatedli": 148, "upload": 148, "artifact": 148, "parametr": 148, "plai": [148, 149, 168], "impli": 148, "bespok": 148, "_array_or_typ": 148, "standalon": [148, 1527], "test_default_int_dtyp": 148, "clariti": [148, 154], "print_hypothesis_exampl": 148, "st": [148, 150], "searchstrategi": 148, "uint32": [148, 158, 163], "custom_strategi": 148, "sampled_from": 148, "randomis": 148, "simplist": 148, "intricaci": 148, "briefli": [148, 153, 166], "math": [148, 149, 160, 168, 1528], "one_of": 148, "datum": 148, "pipe": 148, "overload": 148, "shorthand": 148, "min_valu": [148, 150], "max_valu": [148, 150], "input_dtyp": [148, 150], "as_vari": [148, 150, 161], "isclos": 148, "flatmap": 148, "suppos": 148, "scaler": 148, "array_or_scal": 148, "len_of_arrai": 148, "interact": [148, 1528], "bodi": 148, "reusabl": [148, 180], "snippet": 148, "handle_cmd_line_arg": [148, 150, 161], "dtype_and_x": [148, 150], "dtype_and_valu": [148, 150], "available_dtyp": [148, 150], "get_dtyp": [148, 150], "num_positional_arg": [148, 150], "with_out": [148, 150, 161], "instance_method": [148, 161], "as_variable_flag": [148, 150], "native_array_flag": [148, 150], "container_flag": 148, "thankfulli": 148, "advis": 148, "seri": [148, 149], "seamlessli": 148, "encount": 148, "criterion": 148, "straight": [148, 149, 165, 1528], "array_valu": 148, "valid_ax": 148, "craft": 148, "polici": [148, 151, 179], "hoc": 148, "intersect": [148, 179], "uint8": [148, 158], "uint16": [148, 158, 163], "uint64": [148, 158, 163], "44758124e": 148, "308": 148, "11228": 148, "456": 148, "268": 148, "allow_inf": [148, 150], "min_num_dim": [148, 150], "wherev": 148, "dtype_values_axi": 148, "9622": 148, "28136": 148, "6375": 148, "12720": 148, "21354": 148, "900e": 148, "00": 148, "955e": 148, "exclude_min": 148, "large_abs_safety_factor": 148, "safety_factor_scal": 148, "57384": 148, "25687": 148, "248": 148, "array_dtyp": 148, "min_siz": 148, "max_siz": 148, "array_bool": 148, "na": 148, "test_concat": 148, "test_devic": 148, "array_shap": 148, "test_manipul": [148, 150], "common_shap": 148, "test_lay": 148, "size_bound": 148, "reshape_shap": 148, "stand": 148, "fashion": 148, "some_sequ": 148, "coverag": [148, 158], "allow_nan": 148, "allow_subnorm": 148, "get_shap": [148, 150], "allow_non": [148, 150], "max_num_dim": [148, 150], "min_dim_s": [148, 150], "get_bound": 148, "arrays_valu": 148, "36418": 148, "213": 148, "21716926": 148, "none_or_list_of_float": 148, "get_prob": 148, "get_mean_std": 148, "103515625e": 148, "099609375": 148, "probabilist": 148, "get_axi": 148, "number_positional_argu": 148, "unreproduc": 148, "possibli": [148, 149, 180], "test_valu": 148, "enough": [148, 165, 166, 167], "strive": [148, 150, 154, 180], "report": 148, "valid_float_dtyp": 148, "test_demo": 148, "falsifi": 148, "failing_test": 148, "traceback": 148, "assertionerror": [148, 151], "shrink": 148, "prescrib": 148, "behavior": [148, 149, 154, 157, 158, 163, 180], "identifi": [148, 152, 154], "closest": [148, 154], "scratch": 148, "databas": 148, "therebi": 148, "event": [148, 152], "test_gelu": 148, "test_fil": 148, "brief": 148, "phase": [148, 180], "notabl": 148, "verbos": [148, 163, 1528, 1577], "newer": 148, "max_exampl": 148, "impact": [148, 167], "deadlin": 148, "weird": 148, "truth": [148, 149], "suffic": [148, 161], "systemat": 148, "safeguard": 148, "inabl": 148, "num_gpu": [148, 159], "test_result_typ": 148, "bfloat16": [148, 149, 158], "9090909090909091": 148, "corrispond": 149, "ivy_tf": 149, "lax": [149, 150, 154, 168, 180], "acceler": [149, 1528], "algebra": 149, "xla": [149, 180, 1527], "decompos": 149, "arguabl": [149, 158, 159], "dynamic": 149, "extent": 149, "categor": [149, 153, 159], "mimic": 149, "arithmetic_oper": 149, "same_kind": 149, "subok": [149, 150, 154], "as_ivy_dtyp": 149, "recov": 149, "obtain": 149, "unhandl": 149, "inclus": [149, 154, 155, 160], "seek": 149, "control": [149, 154, 157, 158, 160, 165, 166, 179, 1527], "layout": [149, 154, 155], "similarli": [149, 154, 155, 158, 165], "subclass": [149, 154], "bear": [149, 156, 157, 158], "trigonometric_funct": 149, "from_zero_dim_arrays_to_float": [149, 181], "pointwise_op": 149, "affect": 149, "precis": [149, 154, 158], "preferred_element_typ": 149, "conv_general_dil": 149, "organiz": [149, 156, 157], "finer": 149, "nor": 149, "margin": 149, "fit": [149, 163], "meet": 149, "criteria": 149, "incorpor": [149, 166], "omiss": 149, "heavili": [149, 161, 180], "light": [149, 153, 180, 1527], "sensibl": 149, "deem": 149, "reserv": 149, "resum": 149, "ahead": 149, "heavi": [149, 150, 154], "logicaland": 149, "addition": [149, 157, 160], "anywai": [149, 156, 161], "restrict": 149, "supported_dtyp": [149, 158], "np_frontend": 149, "tf_frontend": 149, "radd": 149, "_init_data": 149, "_process_str_data": 149, "elif": [149, 151, 160], "_data": [149, 156, 165], "ivyexcept": [149, 151], "2d": 149, "_shape": [149, 165], "_dtype": [149, 165], "govern": 149, "promote_types_of_": 149, "_input": 149, "promote_types_of_tensorflow_input": 149, "although": [149, 156, 157], "saniti": 149, "handle_numpy_cast": 149, "func_wrapp": [149, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "to_ivy_arrays_and_back": 149, "handle_numpy_casting_speci": 149, "functool": [149, 151, 165], "new_fn": [149, 151], "equiv": 149, "safe": 149, "unsaf": 149, "array_type_test": 149, "watch": 149, "youtub": 149, "jump": 150, "knowledg": 150, "test_frontend_funct": 150, "lift": 150, "np_frontend_help": 150, "fn_tree": 150, "nn": [150, 154, 168, 1528], "test_jax": 150, "test_jax_lax_oper": 150, "test_jax_lax_tan": 150, "test_numpi": 150, "test_mathematical_funct": 150, "test_np_trigonometric_funct": 150, "test_numpy_tan": 150, "handle_where_and_array_bool": 150, "test_tensorflow": 150, "test_math": 150, "test_tensorflow_tan": 150, "test_torch": 150, "test_non_linear_activation_funct": 150, "with_inplac": 150, "test_torch_leaky_relu": 150, "deal": [150, 153, 180], "negative_slop": 150, "_fill_valu": 150, "max_dim_s": 150, "test_jax_lax_ful": 150, "uint": [150, 158], "test_from_shape_or_valu": 150, "test_numpy_ful": 150, "test_tf_funct": 150, "test_tensorflow_ful": 150, "discrep": 150, "test_creation_op": 150, "_requires_grad": 150, "requires_grad": [150, 155], "test_torch_ful": 150, "accommod": 150, "unsign": [150, 158, 163], "test_frontend_instance_method": 150, "frontend_class": 150, "test_jax_devicearrai": 150, "shared_dtyp": 150, "test_jax_instance_add": 150, "test_frontend_array_instance_method": 150, "test_ndarrai": 150, "test_numpy_ndarray_add": 150, "test_frontend_method": 150, "input_dtypes_init": 150, "as_variable_flags_init": 150, "num_positional_args_init": 150, "native_array_flags_init": 150, "all_as_kwargs_np_init": 150, "input_dtypes_method": 150, "as_variable_flags_method": 150, "num_positional_args_method": 150, "native_array_flags_method": 150, "all_as_kwargs_np_method": 150, "class_nam": 150, "method_nam": 150, "test_tensor": 150, "test_tensorflow_instance_add": 150, "1e04": 150, "1e06": 150, "allow_infin": 150, "test_torch_instance_add": 150, "somewhat": [150, 180], "value_test": 150, "dtype_x": 150, "test_jax_special_add": 150, "ret_gt": 150, "flatten_and_to_np": 150, "zip": [150, 163], "ret_from_gt": 150, "ground_truth_backend": 150, "_arrays_idx_n_dtyp": 150, "Not": [150, 155, 166, 167, 180], "surprisingli": 150, "cat": [150, 154, 163, 168], "closest_relevant_group": 150, "throw": [151, 156, 158, 165], "thrown": [151, 159, 180], "inconsist": [151, 158], "inherit": [151, 156, 157, 165, 180, 1527], "super": [151, 163, 166, 167, 168], "ivybackendexcept": 151, "_default": 151, "current_backend_str": [151, 163, 165], "_delimit": 151, "indexerror": 151, "ivyerror": 151, "repetit": 151, "caught": 151, "__name__": 151, "comparison": 151, "error_stack": 151, "axiserror": 151, "got": [151, 1528], "moreov": 151, "cleaner": [151, 166], "lesser": 151, "set_split_factor": 151, "split_factor": 151, "default_devic": [151, 159], "met": 151, "ex": 152, "reopen": 152, "review_request": 152, "yml": 152, "dispatch": [152, 180], "pair": 152, "test_nn": 152, "test_stat": 152, "yellow": 152, "dot": 152, "queu": 152, "redirect": 152, "book": 152, "decoupl": [152, 167], "ran": 152, "badg": 152, "clickabl": 152, "venn": 153, "diagram": 153, "log_pr": [153, 157, 160], "array_arg": 153, "whatsoev": [153, 157, 1527], "cache_fn": 153, "concurr": [153, 157], "modif": 153, "handle_nest": [153, 157, 161, 163, 181], "set_default_dtyp": [153, 158], "default_dtyp": [153, 158], "get_all_arrays_on_dev": 153, "nested_map": 153, "index_nest": 153, "face": [154, 163], "answer": [154, 165, 180], "contradict": 154, "entail": 154, "sacrif": 154, "dimems": 154, "conv": 154, "jacfwd": 154, "jacrev": 154, "underli": [154, 157], "banner": 154, "neither": 154, "pointwis": 154, "maxim": [154, 160, 163], "unnecessari": 154, "fuse": 154, "tensorrt": 154, "highli": 154, "expens": 154, "incredibli": [154, 166, 180], "six": 154, "__gt__": 154, "price": 154, "pai": 154, "intrus": 154, "x_beta": 154, "equip": 154, "capabl": [154, 160], "ration": [154, 160], "deliber": 154, "priorit": 154, "simplif": 154, "allevi": 154, "minor": [154, 155, 163, 180], "ineffici": [154, 180], "wrong": 154, "implicit_backend": [155, 163], "ivy_original_dict": [155, 163], "unmodifi": [155, 158], "fallback": 155, "memory_format": 155, "preserve_format": 155, "weren": 155, "vast": [155, 158], "fn_name_v_1p12_and_abov": 155, "fn_name_v_1p01_to_1p1": 155, "wrapper": [156, 157, 158, 160, 161, 165, 1527], "necessarili": [156, 157], "underpin": [156, 157, 163], "programmat": [156, 157], "backup": [156, 157], "accident": [156, 157], "absent": [156, 157], "perk": [156, 157], "auto": [156, 157, 166], "imposs": 156, "inputs_to_native_arrai": [156, 161, 181], "secondli": [156, 158], "five": [157, 166], "arbitrarili": [157, 161, 166], "__repr__": 157, "__getattr__": 157, "__setattr__": 157, "__contains__": 157, "__getstate__": 157, "__setstate__": 157, "unpickl": 157, "lefthand": 157, "righthand": 157, "counterpart": [157, 161], "presenc": [157, 160], "implicitli": [157, 163], "intuit": [157, 166, 167], "chronolog": 157, "had": [157, 160], "sequenti": [157, 167], "flow": [157, 179], "implic": 157, "eager": [157, 180], "children": 157, "shallowest": 157, "deepest": 157, "all_dtyp": 158, "all_numeric_dtyp": 158, "all_int_dtyp": 158, "all_float_dtyp": 158, "thirdli": 158, "native_float32": 158, "importantli": [158, 165, 168, 179], "promote_typ": 158, "type_promote_arrai": 158, "promote_types_of_input": 158, "_handle_0_dim_output": [158, 160], "subtli": [158, 160], "promote_types_frontend_nam": 158, "promote_types_of_frontend_name_input": 158, "frontend_nam": 158, "compound": 158, "default_int_dtyp": 158, "default_float_dtyp": 158, "settabl": [158, 159], "set_default_int_dtyp": 158, "set_default_float_dtyp": 158, "deleg": 158, "shape_to_tupl": 158, "unsupported_dtyp": 158, "unment": 158, "function_supported_dtyp": 158, "function_unsupported_dtyp": 158, "invalid_dtyp": 158, "lack": [158, 160], "patch": 158, "upcast": 158, "offici": [158, 163], "unexpect": 158, "84530": 158, "unwarr": 158, "risk": 158, "needlessli": 158, "bloat": 158, "with_unsupported_dtyp": [158, 181], "undergo": [158, 180], "unsupported_devic": 158, "supported_devic": 158, "slight": [158, 167], "downsid": 158, "inflat": 158, "idx": [159, 165], "tpu": 159, "get_all_ivy_arrays_on_dev": 159, "aliv": 159, "total_mem_on_dev": 159, "dev_util": 159, "num_cpu_cor": 159, "dual": 159, "set_default_devic": 159, "program": 160, "speak": 160, "x_nativ": 160, "val_n": 160, "unspecifi": 160, "support_native_out": 160, "mx": 160, "nd": 160, "_wrap_fn": 160, "dim0": 160, "dim1": 160, "third": [160, 180], "leverag": 160, "input_arrai": 160, "inputs_to_ivy_arrai": [161, 181], "facilit": 161, "integer_array_to_float": 161, "test_gradi": 161, "topic": [161, 165], "fledg": [163, 164], "syntact": [163, 168], "logspac": 163, "construct": [163, 167, 168], "power_seq": 163, "backend_stack": 163, "cprint": [163, 1576], "_determine_backend_from_arg": 163, "importlib": 163, "import_modul": 163, "_backend_dict": 163, "illustr": [163, 179], "un": 163, "unrol": [163, 166], "lstm": 163, "cell": 163, "hidden": [163, 167], "recurr": 163, "timestep": 163, "x_shape": 163, "input_channel": [163, 167], "x_flat": 163, "wi": 163, "wi_x": 163, "wii_x": 163, "wif_x": 163, "wig_x": 163, "wio_x": 163, "wh": 163, "ht": 163, "ct": 163, "hts_list": 163, "wii_xt": 163, "wif_xt": 163, "wig_xt": 163, "wio_xt": 163, "htm1": 163, "ctm1": 163, "wh_htm1": 163, "whi_htm1": 163, "whf_htm1": 163, "whg_htm1": 163, "who_htm1": 163, "ft": 163, "gt": 163, "ot": 163, "reliabl": 163, "sacrific": 163, "hear": 163, "virtu": 163, "pure_ivi": 163, "compile_graph": [163, 168], "pure_torch": 163, "backbon": [163, 166], "_layer": 163, "random_unifrom": 163, "unclean": 163, "wx": 163, "temp": 163, "torchscript": [163, 1527], "example_input": 163, "static_argnum": 163, "static_argnam": 163, "jit": [163, 180], "primit": [164, 180], "upcom": 164, "hierarch": [164, 166, 167], "_init": 165, "_size": 165, "mul": 165, "_devic": 165, "_dev_str": 165, "as_ivy_dev": 165, "_pre_repr": 165, "_post_repr": 165, "framework_str": 165, "_is_vari": 165, "noinspect": 165, "pypep8nam": 165, "typeerror": 165, "immut": 165, "claim": 165, "truli": 165, "_native_wrapp": 165, "attributeerror": 165, "genuin": 165, "some_method": 165, "rewritten": 165, "__pow__": 165, "strang": 165, "enforc": 165, "compartment": 165, "public": 165, "newshap": 165, "new_shap": 165, "tidi": 165, "shorter": 165, "crystal": 165, "ton": 166, "ado": [166, 167], "soup": 166, "walk": [166, 167], "dct": 166, "cnt": 166, "combo": [166, 1528, 1534], "1000": 166, "3333335": 166, "grad": [166, 167, 168, 1528], "delimit": 166, "autocomplet": 166, "midwai": 166, "agent": 166, "total_spe": 166, "total_height": 166, "total_width": 166, "ag": 166, "tot": 166, "total_": 166, "total_h": 166, "cnt0": 166, "cnt1": 166, "diff_0": 166, "diff_1": 166, "config0": 166, "config1": 166, "decod": 166, "l0": 166, "truncat": 166, "decoder__l0": 166, "decoder__l1": 166, "encoder__l0": 166, "encoder__l1": 166, "height": 166, "l0__b": 166, "l0__w": 166, "l1__b": 166, "l1__w": 166, "printabl": 166, "obviou": 166, "foresight": 166, "untidili": 166, "update_ag": 166, "normalize_img": 166, "img": 166, "img_max": 166, "reduce_max": [166, 1528], "img_min": 166, "reduce_min": [166, 1528], "img_rang": 166, "agent_posit": 166, "agent_veloc": 166, "agent_cam_front_rgb": 166, "agent_cam_front_depth": 166, "agent_cam_rear_rgb": 166, "agent_cam_rear_depth": 166, "agent_cam_lidar": 166, "camera": 166, "front_rgb": 166, "front_depth": 166, "rear_rgb": 166, "rear_depth": 166, "lidar": 166, "rgb": 166, "rear": 166, "veloc": 166, "cam": 166, "cam_max": 166, "cam_min": 166, "cam_rang": 166, "Of": 166, "perman": 166, "afterward": 166, "thread": 166, "pretti": 166, "dataload": [166, 178, 1528], "_cnt": 166, "img_": 166, "_dataset_s": 166, "_batch_siz": 166, "_count": [166, 167], "__next__": 166, "filenam": 166, "img_fnam": 166, "fname": 166, "loaded_img": 166, "cv2": 166, "imread": 166, "from_numpi": 166, "loader": [166, 180], "batch_slic": 166, "model": [166, 167, 1527, 1528], "mymodel": [166, 1528], "linear0": [166, 167, 1528], "linear1": [166, 167, 1528], "x_in": [166, 167, 168, 1528], "loss_fn": [166, 167, 168, 1528], "reduce_mean": [166, 167, 168, 1528], "execute_with_gradi": [166, 167, 168, 180, 1528], "0145": 166, "grad_fn": 166, "addbackward0": 166, "_create_vari": 167, "output_channel": 167, "with_bia": 167, "_input_channel": 167, "_output_channel": 167, "_w_shape": 167, "_b_shape": 167, "_with_bia": 167, "396": 167, "764": 167, "872": 167, "211": 167, "439": 167, "nightmar": 167, "overcom": 167, "fc": 167, "v0": 167, "v1": 167, "key0": 167, "linear3": 167, "v2": 167, "counter": 167, "fed": 167, "weight_initi": 167, "glorotuniform": 167, "bias_initi": 167, "_w_init": 167, "_b_init": 167, "create_vari": 167, "var_shap": 167, "fan_out": 167, "fan_in": 167, "fan_mod": 167, "fan_sum": 167, "misnom": 167, "saw": 167, "vanilla": 167, "compile_on_next_step": 167, "_beta1": 167, "_beta2": 167, "_epsilon": 167, "_mw": 167, "_vw": 167, "_first_pass": 167, "_should_compil": 167, "_step": 167, "new_v": 167, "_lr": 167, "_inplac": 167, "_stop_gradi": 167, "set_stat": 167, "clamp": 168, "clip_by_valu": 168, "captur": 168, "sparse_funct": 168, "num_class": 168, "num_dim": 168, "new_axi": 168, "_linear": 168, "to_backend": 168, "jax_graph": 168, "to_ivy_modul": 168, "thinli": 168, "whilst": [168, 1527], "to_haiku_modul": 168, "hk": 168, "loss_fn_t": 168, "without_apply_rng": 168, "rng": 168, "prngkei": 168, "update_rul": 168, "tree_multimap": 168, "mechan": [178, 180, 1528], "robot": [178, 1528], "perfect": 179, "3d": 179, "differenti": 179, "orient": 179, "pose": 179, "euler": 179, "quaternion": 179, "rotat": 179, "ivy_mech": 179, "target_facing_rotation_matrix": 179, "polar_to_cartesian_coord": 179, "ordin": 179, "warp": 179, "optic": 179, "voxel": 179, "ivy_vis": 179, "coords_to_voxel_grid": 179, "render_pixel_coord": 179, "neural": [179, 1528], "radianc": 179, "nerf": 179, "trajectori": 179, "motion": 179, "plan": [179, 1528], "mobil": 179, "sample_spline_path": 179, "rigidmobil": 179, "sample_bodi": 179, "drone": 179, "sample_link": 179, "openai": 179, "swimmer": 179, "reward": 179, "supervis": 179, "reinforc": 179, "door": [179, 180], "cartpol": 179, "mountain_car": 179, "pendulum": 179, "reacher": 179, "learnt": 179, "ture": 179, "ntm": 179, "egospher": 179, "spatial": 179, "esm": 179, "ivy_memori": 179, "egocentr": 179, "room": 179, "inspir": 179, "doubt": 180, "grate": 180, "probe": 180, "remark": 180, "surpris": 180, "lock": 180, "gold": 180, "dex": 180, "ye": 180, "scan": 180, "tricki": [180, 1527], "predictor": 180, "tight": 180, "driver": 180, "schedul": 180, "Will": 180, "ast": 180, "cond": 180, "jacobian": 180, "checkpoint": 180, "autodiff": 180, "shine": 180, "merci": 180, "autograd": 180, "cluster": 180, "compet": 180, "paradigm": 180, "parallelis": 180, "spmd": 180, "mixtur": 180, "expert": 180, "sophist": 180, "depart": 180, "routin": 180, "hundr": 180, "thousand": 180, "deepli": 180, "broadli": 180, "supplementari": 180, "fanci": 180, "fusion": 180, "lose": 180, "vmap": 180, "pmap": 180, "overhead": 180, "eventu": 180, "supplement": 180, "backdoor": 180, "callback": 180, "record": 180, "metric": 180, "outsourc": 180, "integer_arrays_to_float": 181, "with_supported_device_and_dtyp": 181, "version_dict": 181, "with_supported_devic": 181, "with_supported_dtyp": 181, "with_unsupported_device_and_dtyp": 181, "with_unsupported_devic": 181, "is_ivy_sparse_arrai": 761, "nail": 1527, "retain": 1527, "funtion": 1527, "asset": 1527, "functiona": 1527, "scientist": 1527, "deploi": 1527, "correl": 1527, "analyz": 1527, "ai": 1528, "colab": 1528, "sharp": 1528, "favorit": 1528, "jax_concat": 1528, "tf_concat": 1528, "np_concat": 1528, "torch_concat": 1528, "get_devic": 1528, "reduce_prod": 1528, "reduce_sum": 1528, "gradient_imag": 1528, "indices_wher": 1528, "bilinear_resampl": 1528, "stack_imag": 1528, "neural_net": 1528, "floormod": 1528, "ecosystem": [1528, 1534], "articl": 1528, "lenton2021ivi": 1528, "inter": 1528, "lenton": 1528, "daniel": 1528, "pardo": 1528, "fabio": 1528, "falck": 1528, "fabian": 1528, "jame": 1528, "stephen": 1528, "clark": 1528, "ronald": 1528, "journal": 1528, "arxiv": 1528, "preprint": 1528, "2102": 1528, "02886": 1528, "2021": 1528}, "objects": {"ivy.array": [[43, 0, 0, "-", "activations"], [45, 0, 0, "-", "array"], [47, 0, 0, "-", "conversions"], [52, 0, 0, "-", "creation"], [54, 0, 0, "-", "data_type"], [56, 0, 0, "-", "device"], [58, 0, 0, "-", "elementwise"], [60, 0, 0, "-", "extensions"], [62, 0, 0, "-", "general"], [64, 0, 0, "-", "gradients"], [66, 0, 0, "-", "image"], [68, 0, 0, "-", "layers"], [70, 0, 0, "-", "linear_algebra"], [72, 0, 0, "-", "losses"], [74, 0, 0, "-", "manipulation"], [76, 0, 0, "-", "norms"], [78, 0, 0, "-", "random"], [80, 0, 0, "-", "searching"], [82, 0, 0, "-", "set"], [84, 0, 0, "-", "sorting"], [86, 0, 0, "-", "statistical"], [88, 0, 0, "-", "utility"], [90, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[44, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[44, 2, 1, "", "gelu"], [44, 2, 1, "", "leaky_relu"], [44, 2, 1, "", "log_softmax"], [44, 2, 1, "", "relu"], [44, 2, 1, "", "sigmoid"], [44, 2, 1, "", "softmax"], [44, 2, 1, "", "softplus"]], "ivy.array.array": [[46, 1, 1, "", "Array"]], "ivy.array.array.Array": [[46, 3, 1, "", "T"], [46, 2, 1, "", "__add__"], [46, 2, 1, "", "__init__"], [46, 2, 1, "", "__le__"], [46, 2, 1, "", "__radd__"], [46, 2, 1, "", "__rrshift__"], [46, 2, 1, "", "__rshift__"], [46, 2, 1, "", "__rsub__"], [46, 2, 1, "", "__sub__"], [46, 3, 1, "", "data"], [46, 3, 1, "", "device"], [46, 3, 1, "", "dtype"], [46, 3, 1, "", "is_variable"], [46, 3, 1, "", "mT"], [46, 3, 1, "", "ndim"], [46, 3, 1, "", "shape"], [46, 3, 1, "", "size"]], "ivy.array.conversions": [[48, 4, 1, "", "args_to_ivy"], [49, 4, 1, "", "args_to_native"], [50, 4, 1, "", "to_ivy"], [51, 4, 1, "", "to_native"]], "ivy.array.creation": [[53, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[53, 2, 1, "", "asarray"], [53, 2, 1, "", "copy_array"], [53, 2, 1, "", "empty_like"], [53, 2, 1, "", "from_dlpack"], [53, 2, 1, "", "full_like"], [53, 2, 1, "", "meshgrid"], [53, 2, 1, "", "native_array"], [53, 2, 1, "", "one_hot"], [53, 2, 1, "", "ones_like"], [53, 2, 1, "", "tril"], [53, 2, 1, "", "triu"], [53, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[55, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[55, 2, 1, "", "astype"], [55, 2, 1, "", "broadcast_arrays"], [55, 2, 1, "", "broadcast_to"], [55, 2, 1, "", "can_cast"], [55, 2, 1, "", "dtype"], [55, 2, 1, "", "finfo"], [55, 2, 1, "", "iinfo"], [55, 2, 1, "", "is_bool_dtype"], [55, 2, 1, "", "is_float_dtype"], [55, 2, 1, "", "is_int_dtype"], [55, 2, 1, "", "is_uint_dtype"], [55, 2, 1, "", "result_type"]], "ivy.array.device": [[57, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[57, 2, 1, "", "dev"], [57, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[59, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[59, 2, 1, "", "abs"], [59, 2, 1, "", "acos"], [59, 2, 1, "", "acosh"], [59, 2, 1, "", "add"], [59, 2, 1, "", "asin"], [59, 2, 1, "", "asinh"], [59, 2, 1, "", "atan"], [59, 2, 1, "", "atan2"], [59, 2, 1, "", "atanh"], [59, 2, 1, "", "bitwise_and"], [59, 2, 1, "", "bitwise_invert"], [59, 2, 1, "", "bitwise_left_shift"], [59, 2, 1, "", "bitwise_or"], [59, 2, 1, "", "bitwise_right_shift"], [59, 2, 1, "", "bitwise_xor"], [59, 2, 1, "", "ceil"], [59, 2, 1, "", "cos"], [59, 2, 1, "", "cosh"], [59, 2, 1, "", "deg2rad"], [59, 2, 1, "", "divide"], [59, 2, 1, "", "equal"], [59, 2, 1, "", "erf"], [59, 2, 1, "", "exp"], [59, 2, 1, "", "expm1"], [59, 2, 1, "", "floor"], [59, 2, 1, "", "floor_divide"], [59, 2, 1, "", "greater"], [59, 2, 1, "", "greater_equal"], [59, 2, 1, "", "isfinite"], [59, 2, 1, "", "isinf"], [59, 2, 1, "", "isnan"], [59, 2, 1, "", "isreal"], [59, 2, 1, "", "less"], [59, 2, 1, "", "less_equal"], [59, 2, 1, "", "log"], [59, 2, 1, "", "log10"], [59, 2, 1, "", "log1p"], [59, 2, 1, "", "log2"], [59, 2, 1, "", "logaddexp"], [59, 2, 1, "", "logical_and"], [59, 2, 1, "", "logical_not"], [59, 2, 1, "", "logical_or"], [59, 2, 1, "", "logical_xor"], [59, 2, 1, "", "maximum"], [59, 2, 1, "", "minimum"], [59, 2, 1, "", "multiply"], [59, 2, 1, "", "negative"], [59, 2, 1, "", "not_equal"], [59, 2, 1, "", "positive"], [59, 2, 1, "", "pow"], [59, 2, 1, "", "rad2deg"], [59, 2, 1, "", "reciprocal"], [59, 2, 1, "", "remainder"], [59, 2, 1, "", "round"], [59, 2, 1, "", "sign"], [59, 2, 1, "", "sin"], [59, 2, 1, "", "sinh"], [59, 2, 1, "", "sqrt"], [59, 2, 1, "", "square"], [59, 2, 1, "", "subtract"], [59, 2, 1, "", "tan"], [59, 2, 1, "", "tanh"], [59, 2, 1, "", "trunc"], [59, 2, 1, "", "trunc_divide"]], "ivy.array.extensions": [[61, 1, 1, "", "ArrayWithExtensions"]], "ivy.array.extensions.ArrayWithExtensions": [[61, 2, 1, "", "flatten"], [61, 2, 1, "", "heaviside"], [61, 2, 1, "", "lcm"], [61, 2, 1, "", "max_pool2d"], [61, 2, 1, "", "median"], [61, 2, 1, "", "moveaxis"], [61, 2, 1, "", "pad"], [61, 2, 1, "", "sinc"]], "ivy.array.general": [[63, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[63, 2, 1, "", "all_equal"], [63, 2, 1, "", "array_equal"], [63, 2, 1, "", "arrays_equal"], [63, 2, 1, "", "assert_supports_inplace"], [63, 2, 1, "", "clip_matrix_norm"], [63, 2, 1, "", "clip_vector_norm"], [63, 2, 1, "", "default"], [63, 2, 1, "", "einops_rearrange"], [63, 2, 1, "", "einops_reduce"], [63, 2, 1, "", "einops_repeat"], [63, 2, 1, "", "exists"], [63, 2, 1, "", "fourier_encode"], [63, 2, 1, "", "gather"], [63, 2, 1, "", "gather_nd"], [63, 2, 1, "", "get_num_dims"], [63, 2, 1, "", "has_nans"], [63, 2, 1, "", "inplace_decrement"], [63, 2, 1, "", "inplace_increment"], [63, 2, 1, "", "inplace_update"], [63, 2, 1, "", "is_array"], [63, 2, 1, "", "is_ivy_array"], [63, 2, 1, "", "is_ivy_container"], [63, 2, 1, "", "is_native_array"], [63, 2, 1, "", "scatter_flat"], [63, 2, 1, "", "scatter_nd"], [63, 2, 1, "", "stable_divide"], [63, 2, 1, "", "stable_pow"], [63, 2, 1, "", "supports_inplace_updates"], [63, 2, 1, "", "to_list"], [63, 2, 1, "", "to_numpy"], [63, 2, 1, "", "to_scalar"], [63, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[65, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[65, 2, 1, "", "adam_step"], [65, 2, 1, "", "adam_update"], [65, 2, 1, "", "gradient_descent_update"], [65, 2, 1, "", "is_variable"], [65, 2, 1, "", "lamb_update"], [65, 2, 1, "", "lars_update"], [65, 2, 1, "", "optimizer_update"], [65, 2, 1, "", "stop_gradient"], [65, 2, 1, "", "variable"], [65, 2, 1, "", "variable_data"]], "ivy.array.image": [[67, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[69, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[69, 2, 1, "", "conv1d"], [69, 2, 1, "", "conv1d_transpose"], [69, 2, 1, "", "conv2d"], [69, 2, 1, "", "conv3d"], [69, 2, 1, "", "conv3d_transpose"], [69, 2, 1, "", "depthwise_conv2d"], [69, 2, 1, "", "dropout"], [69, 2, 1, "", "linear"], [69, 2, 1, "", "lstm_update"], [69, 2, 1, "", "multi_head_attention"], [69, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[71, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[71, 2, 1, "", "cholesky"], [71, 2, 1, "", "cross"], [71, 2, 1, "", "det"], [71, 2, 1, "", "diagonal"], [71, 2, 1, "", "eigh"], [71, 2, 1, "", "eigvalsh"], [71, 2, 1, "", "inner"], [71, 2, 1, "", "inv"], [71, 2, 1, "", "matmul"], [71, 2, 1, "", "matrix_norm"], [71, 2, 1, "", "matrix_rank"], [71, 2, 1, "", "matrix_transpose"], [71, 2, 1, "", "outer"], [71, 2, 1, "", "pinv"], [71, 2, 1, "", "qr"], [71, 2, 1, "", "slogdet"], [71, 2, 1, "", "solve"], [71, 2, 1, "", "svd"], [71, 2, 1, "", "svdvals"], [71, 2, 1, "", "tensordot"], [71, 2, 1, "", "trace"], [71, 2, 1, "", "vander"], [71, 2, 1, "", "vecdot"], [71, 2, 1, "", "vector_norm"], [71, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[73, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[73, 2, 1, "", "binary_cross_entropy"], [73, 2, 1, "", "cross_entropy"], [73, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[75, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[75, 2, 1, "", "clip"], [75, 2, 1, "", "concat"], [75, 2, 1, "", "constant_pad"], [75, 2, 1, "", "expand_dims"], [75, 2, 1, "", "flip"], [75, 2, 1, "", "permute_dims"], [75, 2, 1, "", "repeat"], [75, 2, 1, "", "reshape"], [75, 2, 1, "", "roll"], [75, 2, 1, "", "split"], [75, 2, 1, "", "squeeze"], [75, 2, 1, "", "stack"], [75, 2, 1, "", "swapaxes"], [75, 2, 1, "", "tile"], [75, 2, 1, "", "unstack"], [75, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[77, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[77, 2, 1, "", "layer_norm"]], "ivy.array.random": [[79, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[79, 2, 1, "", "multinomial"], [79, 2, 1, "", "randint"], [79, 2, 1, "", "random_normal"], [79, 2, 1, "", "random_uniform"], [79, 2, 1, "", "shuffle"]], "ivy.array.searching": [[81, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[81, 2, 1, "", "argmax"], [81, 2, 1, "", "argmin"], [81, 2, 1, "", "argwhere"], [81, 2, 1, "", "nonzero"], [81, 2, 1, "", "where"]], "ivy.array.set": [[83, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[83, 2, 1, "", "unique_all"], [83, 2, 1, "", "unique_counts"], [83, 2, 1, "", "unique_inverse"], [83, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[85, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[85, 2, 1, "", "argsort"], [85, 2, 1, "", "searchsorted"], [85, 2, 1, "", "sort"]], "ivy.array.statistical": [[87, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[87, 2, 1, "", "cumprod"], [87, 2, 1, "", "cumsum"], [87, 2, 1, "", "einsum"], [87, 2, 1, "", "max"], [87, 2, 1, "", "mean"], [87, 2, 1, "", "min"], [87, 2, 1, "", "prod"], [87, 2, 1, "", "std"], [87, 2, 1, "", "sum"], [87, 2, 1, "", "var"]], "ivy.array.utility": [[89, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[89, 2, 1, "", "all"], [89, 2, 1, "", "any"]], "ivy.array.wrapping": [[91, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[1, 0, 0, "-", "assertions"], [17, 0, 0, "-", "backend_handler"], [181, 0, 0, "-", "func_wrapper"], [1576, 0, 0, "-", "verbosity"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_elem_in_list"], [6, 4, 1, "", "check_equal"], [7, 4, 1, "", "check_exists"], [8, 4, 1, "", "check_false"], [9, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [10, 4, 1, "", "check_gather_input_valid"], [11, 4, 1, "", "check_gather_nd_input_valid"], [12, 4, 1, "", "check_greater"], [13, 4, 1, "", "check_isinstance"], [14, 4, 1, "", "check_less"], [15, 4, 1, "", "check_shape"], [16, 4, 1, "", "check_true"]], "ivy.backend_handler": [[17, 1, 1, "", "ContextManager"], [18, 4, 1, "", "choose_random_backend"], [19, 4, 1, "", "clear_backend_stack"], [20, 4, 1, "", "current_backend"], [21, 4, 1, "", "fn_name_from_version_specific_fn_name"], [22, 4, 1, "", "get_backend"], [23, 4, 1, "", "set_backend"], [24, 4, 1, "", "set_backend_to_specific_version"], [25, 4, 1, "", "try_import_ivy_jax"], [26, 4, 1, "", "try_import_ivy_numpy"], [27, 4, 1, "", "try_import_ivy_tf"], [28, 4, 1, "", "try_import_ivy_torch"], [29, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[17, 2, 1, "", "__init__"]], "ivy.container": [[93, 0, 0, "-", "activations"], [95, 0, 0, "-", "base"], [97, 0, 0, "-", "container"], [99, 0, 0, "-", "conversions"], [101, 0, 0, "-", "creation"], [103, 0, 0, "-", "data_type"], [105, 0, 0, "-", "device"], [107, 0, 0, "-", "elementwise"], [109, 0, 0, "-", "extensions"], [111, 0, 0, "-", "general"], [113, 0, 0, "-", "gradients"], [115, 0, 0, "-", "image"], [117, 0, 0, "-", "layers"], [119, 0, 0, "-", "linear_algebra"], [121, 0, 0, "-", "losses"], [123, 0, 0, "-", "manipulation"], [125, 0, 0, "-", "norms"], [127, 0, 0, "-", "random"], [129, 0, 0, "-", "searching"], [131, 0, 0, "-", "set"], [133, 0, 0, "-", "sorting"], [135, 0, 0, "-", "statistical"], [137, 0, 0, "-", "utility"], [139, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[94, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[94, 2, 1, "", "gelu"], [94, 2, 1, "", "leaky_relu"], [94, 2, 1, "", "log_softmax"], [94, 2, 1, "", "relu"], [94, 2, 1, "", "sigmoid"], [94, 2, 1, "", "softmax"], [94, 2, 1, "", "softplus"], [94, 2, 1, "", "static_gelu"], [94, 2, 1, "", "static_leaky_relu"], [94, 2, 1, "", "static_log_softmax"], [94, 2, 1, "", "static_relu"], [94, 2, 1, "", "static_sigmoid"], [94, 2, 1, "", "static_softmax"], [94, 2, 1, "", "static_softplus"]], "ivy.container.base": [[96, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[96, 2, 1, "", "__getitem__"], [96, 2, 1, "", "__init__"], [96, 2, 1, "", "__setitem__"], [96, 2, 1, "", "all_false"], [96, 2, 1, "", "all_key_chains"], [96, 2, 1, "", "all_true"], [96, 2, 1, "", "as_bools"], [96, 2, 1, "", "assert_contains_sub_container"], [96, 2, 1, "", "assert_contains_sub_structure"], [96, 2, 1, "", "assert_identical"], [96, 2, 1, "", "assert_identical_structure"], [96, 2, 1, "", "at_key_chain"], [96, 2, 1, "", "at_key_chains"], [96, 2, 1, "", "at_keys"], [96, 2, 1, "", "combine"], [96, 2, 1, "", "common_key_chains"], [96, 3, 1, "", "config"], [96, 2, 1, "", "cont_inplace_update"], [96, 2, 1, "", "contains_sub_container"], [96, 2, 1, "", "contains_sub_structure"], [96, 2, 1, "", "copy"], [96, 2, 1, "", "create_if_absent"], [96, 2, 1, "", "cutoff_at_depth"], [96, 2, 1, "", "cutoff_at_height"], [96, 2, 1, "", "deep_copy"], [96, 3, 1, "", "dev"], [96, 3, 1, "", "dev_str"], [96, 2, 1, "", "diff"], [96, 2, 1, "", "duplicate_array_keychains"], [96, 2, 1, "", "find_sub_container"], [96, 2, 1, "", "find_sub_structure"], [96, 2, 1, "", "flatten_key_chain"], [96, 2, 1, "", "flatten_key_chains"], [96, 2, 1, "", "format_key_chains"], [96, 2, 1, "", "from_disk_as_hdf5"], [96, 2, 1, "", "from_disk_as_json"], [96, 2, 1, "", "from_disk_as_pickled"], [96, 2, 1, "", "from_flat_list"], [96, 2, 1, "", "h5_file_size"], [96, 2, 1, "", "handle_inplace"], [96, 2, 1, "", "has_key"], [96, 2, 1, "", "has_key_chain"], [96, 2, 1, "", "identical"], [96, 2, 1, "", "identical_array_shapes"], [96, 2, 1, "", "identical_configs"], [96, 2, 1, "", "identical_structure"], [96, 2, 1, "", "if_exists"], [96, 3, 1, "", "ivy"], [96, 2, 1, "", "key_chains_containing"], [96, 2, 1, "", "list_join"], [96, 2, 1, "", "list_stack"], [96, 2, 1, "", "map"], [96, 2, 1, "", "map_conts"], [96, 3, 1, "", "max_depth"], [96, 2, 1, "", "multi_map"], [96, 2, 1, "", "multi_map_in_static_method"], [96, 2, 1, "", "num_arrays"], [96, 2, 1, "", "overwrite_at_key_chain"], [96, 2, 1, "", "overwrite_at_key_chains"], [96, 2, 1, "", "prune_empty"], [96, 2, 1, "", "prune_key_chain"], [96, 2, 1, "", "prune_key_chains"], [96, 2, 1, "", "prune_key_from_key_chains"], [96, 2, 1, "", "prune_keys"], [96, 2, 1, "", "prune_keys_from_key_chains"], [96, 2, 1, "", "reduce"], [96, 2, 1, "", "remove_key_length_limit"], [96, 2, 1, "", "remove_print_limit"], [96, 2, 1, "", "reshape_like"], [96, 2, 1, "", "restructure"], [96, 2, 1, "", "restructure_key_chains"], [96, 2, 1, "", "set_at_key_chain"], [96, 2, 1, "", "set_at_key_chains"], [96, 2, 1, "", "set_at_keys"], [96, 3, 1, "", "shape"], [96, 3, 1, "", "shapes"], [96, 2, 1, "", "show"], [96, 2, 1, "", "show_sub_container"], [96, 2, 1, "", "shuffle_h5_file"], [96, 2, 1, "", "size_ordered_arrays"], [96, 2, 1, "", "slice_keys"], [96, 2, 1, "", "slice_via_key"], [96, 2, 1, "", "sort_by_key"], [96, 2, 1, "", "split_conts"], [96, 2, 1, "", "structural_diff"], [96, 2, 1, "", "to_dict"], [96, 2, 1, "", "to_disk_as_hdf5"], [96, 2, 1, "", "to_disk_as_json"], [96, 2, 1, "", "to_disk_as_pickled"], [96, 2, 1, "", "to_flat_list"], [96, 2, 1, "", "to_iterator"], [96, 2, 1, "", "to_iterator_keys"], [96, 2, 1, "", "to_iterator_values"], [96, 2, 1, "", "to_jsonable"], [96, 2, 1, "", "to_nested_list"], [96, 2, 1, "", "to_raw"], [96, 2, 1, "", "trim_key"], [96, 2, 1, "", "try_kc"], [96, 2, 1, "", "unify"], [96, 2, 1, "", "unstack_conts"], [96, 2, 1, "", "update_config"], [96, 2, 1, "", "with_default_key_color"], [96, 2, 1, "", "with_entries_as_lists"], [96, 2, 1, "", "with_ivy_backend"], [96, 2, 1, "", "with_key_length_limit"], [96, 2, 1, "", "with_print_indent"], [96, 2, 1, "", "with_print_limit"], [96, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[98, 1, 1, "", "Container"]], "ivy.container.container.Container": [[98, 2, 1, "", "__add__"], [98, 2, 1, "", "__init__"], [98, 2, 1, "", "__radd__"], [98, 2, 1, "", "__rrshift__"], [98, 2, 1, "", "__rshift__"], [98, 2, 1, "", "__rsub__"], [98, 2, 1, "", "__sub__"]], "ivy.container.conversions": [[100, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[100, 2, 1, "", "static_to_ivy"], [100, 2, 1, "", "static_to_native"], [100, 2, 1, "", "to_ivy"], [100, 2, 1, "", "to_native"]], "ivy.container.creation": [[102, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[102, 2, 1, "", "empty_like"], [102, 2, 1, "", "from_dlpack"], [102, 2, 1, "", "full_like"], [102, 2, 1, "", "meshgrid"], [102, 2, 1, "", "native_array"], [102, 2, 1, "", "one_hot"], [102, 2, 1, "", "ones_like"], [102, 2, 1, "", "static_arange"], [102, 2, 1, "", "static_asarray"], [102, 2, 1, "", "static_empty_like"], [102, 2, 1, "", "static_eye"], [102, 2, 1, "", "static_from_dlpack"], [102, 2, 1, "", "static_full_like"], [102, 2, 1, "", "static_linspace"], [102, 2, 1, "", "static_logspace"], [102, 2, 1, "", "static_meshgrid"], [102, 2, 1, "", "static_native_array"], [102, 2, 1, "", "static_one_hot"], [102, 2, 1, "", "static_ones"], [102, 2, 1, "", "static_ones_like"], [102, 2, 1, "", "static_tril"], [102, 2, 1, "", "static_triu"], [102, 2, 1, "", "static_zeros"], [102, 2, 1, "", "static_zeros_like"], [102, 2, 1, "", "tril"], [102, 2, 1, "", "triu"], [102, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[104, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[104, 2, 1, "", "astype"], [104, 2, 1, "", "broadcast_arrays"], [104, 2, 1, "", "broadcast_to"], [104, 2, 1, "", "can_cast"], [104, 2, 1, "", "dtype"], [104, 2, 1, "", "finfo"], [104, 2, 1, "", "iinfo"], [104, 2, 1, "", "is_bool_dtype"], [104, 2, 1, "", "is_float_dtype"], [104, 2, 1, "", "is_int_dtype"], [104, 2, 1, "", "is_uint_dtype"], [104, 2, 1, "", "result_type"], [104, 2, 1, "", "static_astype"], [104, 2, 1, "", "static_broadcast_arrays"], [104, 2, 1, "", "static_broadcast_to"], [104, 2, 1, "", "static_can_cast"], [104, 2, 1, "", "static_default_float_dtype"], [104, 2, 1, "", "static_dtype"], [104, 2, 1, "", "static_finfo"], [104, 2, 1, "", "static_function_supported_dtypes"], [104, 2, 1, "", "static_function_unsupported_dtypes"], [104, 2, 1, "", "static_iinfo"], [104, 2, 1, "", "static_is_bool_dtype"], [104, 2, 1, "", "static_is_float_dtype"], [104, 2, 1, "", "static_is_int_dtype"], [104, 2, 1, "", "static_is_uint_dtype"], [104, 2, 1, "", "static_result_type"]], "ivy.container.device": [[106, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[106, 2, 1, "", "dev"], [106, 2, 1, "", "static_dev"], [106, 2, 1, "", "static_to_device"], [106, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[108, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[108, 2, 1, "", "abs"], [108, 2, 1, "", "acos"], [108, 2, 1, "", "acosh"], [108, 2, 1, "", "add"], [108, 2, 1, "", "asin"], [108, 2, 1, "", "asinh"], [108, 2, 1, "", "atan"], [108, 2, 1, "", "atan2"], [108, 2, 1, "", "atanh"], [108, 2, 1, "", "bitwise_and"], [108, 2, 1, "", "bitwise_invert"], [108, 2, 1, "", "bitwise_left_shift"], [108, 2, 1, "", "bitwise_or"], [108, 2, 1, "", "bitwise_right_shift"], [108, 2, 1, "", "bitwise_xor"], [108, 2, 1, "", "ceil"], [108, 2, 1, "", "cos"], [108, 2, 1, "", "cosh"], [108, 2, 1, "", "deg2rad"], [108, 2, 1, "", "divide"], [108, 2, 1, "", "equal"], [108, 2, 1, "", "erf"], [108, 2, 1, "", "exp"], [108, 2, 1, "", "expm1"], [108, 2, 1, "", "floor"], [108, 2, 1, "", "floor_divide"], [108, 2, 1, "", "greater"], [108, 2, 1, "", "greater_equal"], [108, 2, 1, "", "isfinite"], [108, 2, 1, "", "isinf"], [108, 2, 1, "", "isnan"], [108, 2, 1, "", "isreal"], [108, 2, 1, "", "less"], [108, 2, 1, "", "less_equal"], [108, 2, 1, "", "log"], [108, 2, 1, "", "log10"], [108, 2, 1, "", "log1p"], [108, 2, 1, "", "log2"], [108, 2, 1, "", "logaddexp"], [108, 2, 1, "", "logical_and"], [108, 2, 1, "", "logical_not"], [108, 2, 1, "", "logical_or"], [108, 2, 1, "", "logical_xor"], [108, 2, 1, "", "maximum"], [108, 2, 1, "", "minimum"], [108, 2, 1, "", "multiply"], [108, 2, 1, "", "negative"], [108, 2, 1, "", "not_equal"], [108, 2, 1, "", "positive"], [108, 2, 1, "", "pow"], [108, 2, 1, "", "rad2deg"], [108, 2, 1, "", "reciprocal"], [108, 2, 1, "", "remainder"], [108, 2, 1, "", "round"], [108, 2, 1, "", "sign"], [108, 2, 1, "", "sin"], [108, 2, 1, "", "sinh"], [108, 2, 1, "", "sqrt"], [108, 2, 1, "", "square"], [108, 2, 1, "", "static_abs"], [108, 2, 1, "", "static_acos"], [108, 2, 1, "", "static_acosh"], [108, 2, 1, "", "static_add"], [108, 2, 1, "", "static_asin"], [108, 2, 1, "", "static_asinh"], [108, 2, 1, "", "static_atan"], [108, 2, 1, "", "static_atan2"], [108, 2, 1, "", "static_atanh"], [108, 2, 1, "", "static_bitwise_and"], [108, 2, 1, "", "static_bitwise_invert"], [108, 2, 1, "", "static_bitwise_left_shift"], [108, 2, 1, "", "static_bitwise_or"], [108, 2, 1, "", "static_bitwise_right_shift"], [108, 2, 1, "", "static_bitwise_xor"], [108, 2, 1, "", "static_ceil"], [108, 2, 1, "", "static_cos"], [108, 2, 1, "", "static_cosh"], [108, 2, 1, "", "static_deg2rad"], [108, 2, 1, "", "static_divide"], [108, 2, 1, "", "static_equal"], [108, 2, 1, "", "static_erf"], [108, 2, 1, "", "static_exp"], [108, 2, 1, "", "static_expm1"], [108, 2, 1, "", "static_floor"], [108, 2, 1, "", "static_floor_divide"], [108, 2, 1, "", "static_greater"], [108, 2, 1, "", "static_greater_equal"], [108, 2, 1, "", "static_isfinite"], [108, 2, 1, "", "static_isinf"], [108, 2, 1, "", "static_isnan"], [108, 2, 1, "", "static_isreal"], [108, 2, 1, "", "static_less"], [108, 2, 1, "", "static_less_equal"], [108, 2, 1, "", "static_log"], [108, 2, 1, "", "static_log10"], [108, 2, 1, "", "static_log1p"], [108, 2, 1, "", "static_log2"], [108, 2, 1, "", "static_logaddexp"], [108, 2, 1, "", "static_logical_and"], [108, 2, 1, "", "static_logical_not"], [108, 2, 1, "", "static_logical_or"], [108, 2, 1, "", "static_logical_xor"], [108, 2, 1, "", "static_maximum"], [108, 2, 1, "", "static_minimum"], [108, 2, 1, "", "static_multiply"], [108, 2, 1, "", "static_negative"], [108, 2, 1, "", "static_not_equal"], [108, 2, 1, "", "static_positive"], [108, 2, 1, "", "static_pow"], [108, 2, 1, "", "static_rad2deg"], [108, 2, 1, "", "static_reciprocal"], [108, 2, 1, "", "static_remainder"], [108, 2, 1, "", "static_round"], [108, 2, 1, "", "static_sign"], [108, 2, 1, "", "static_sin"], [108, 2, 1, "", "static_sinh"], [108, 2, 1, "", "static_sqrt"], [108, 2, 1, "", "static_square"], [108, 2, 1, "", "static_subtract"], [108, 2, 1, "", "static_tan"], [108, 2, 1, "", "static_tanh"], [108, 2, 1, "", "static_trunc"], [108, 2, 1, "", "static_trunc_divide"], [108, 2, 1, "", "subtract"], [108, 2, 1, "", "tan"], [108, 2, 1, "", "tanh"], [108, 2, 1, "", "trunc"], [108, 2, 1, "", "trunc_divide"]], "ivy.container.extensions": [[110, 1, 1, "", "ContainerWithExtensions"]], "ivy.container.extensions.ContainerWithExtensions": [[110, 2, 1, "", "flatten"], [110, 2, 1, "", "hann_window"], [110, 2, 1, "", "heaviside"], [110, 2, 1, "", "kaiser_window"], [110, 2, 1, "", "lcm"], [110, 2, 1, "", "max_pool2d"], [110, 2, 1, "", "median"], [110, 2, 1, "", "moveaxis"], [110, 2, 1, "", "pad"], [110, 2, 1, "", "sinc"], [110, 2, 1, "", "static_flatten"], [110, 2, 1, "", "static_hann_window"], [110, 2, 1, "", "static_heaviside"], [110, 2, 1, "", "static_kaiser_window"], [110, 2, 1, "", "static_lcm"], [110, 2, 1, "", "static_max_pool2d"], [110, 2, 1, "", "static_median"], [110, 2, 1, "", "static_moveaxis"], [110, 2, 1, "", "static_pad"], [110, 2, 1, "", "static_sinc"]], "ivy.container.general": [[112, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[112, 2, 1, "", "all_equal"], [112, 2, 1, "", "assert_supports_inplace"], [112, 2, 1, "", "clip_matrix_norm"], [112, 2, 1, "", "clip_vector_norm"], [112, 2, 1, "", "einops_rearrange"], [112, 2, 1, "", "einops_reduce"], [112, 2, 1, "", "einops_repeat"], [112, 2, 1, "", "fourier_encode"], [112, 2, 1, "", "gather"], [112, 2, 1, "", "gather_nd"], [112, 2, 1, "", "get_num_dims"], [112, 2, 1, "", "has_nans"], [112, 2, 1, "", "inplace_decrement"], [112, 2, 1, "", "inplace_increment"], [112, 2, 1, "", "inplace_update"], [112, 2, 1, "", "is_array"], [112, 2, 1, "", "is_ivy_array"], [112, 2, 1, "", "is_ivy_container"], [112, 2, 1, "", "is_native_array"], [112, 2, 1, "", "scatter_flat"], [112, 2, 1, "", "scatter_nd"], [112, 2, 1, "", "stable_divide"], [112, 2, 1, "", "stable_pow"], [112, 2, 1, "", "static_all_equal"], [112, 2, 1, "", "static_assert_supports_inplace"], [112, 2, 1, "", "static_clip_matrix_norm"], [112, 2, 1, "", "static_clip_vector_norm"], [112, 2, 1, "", "static_einops_rearrange"], [112, 2, 1, "", "static_einops_reduce"], [112, 2, 1, "", "static_einops_repeat"], [112, 2, 1, "", "static_fourier_encode"], [112, 2, 1, "", "static_gather"], [112, 2, 1, "", "static_gather_nd"], [112, 2, 1, "", "static_get_num_dims"], [112, 2, 1, "", "static_has_nans"], [112, 2, 1, "", "static_inplace_decrement"], [112, 2, 1, "", "static_inplace_increment"], [112, 2, 1, "", "static_inplace_update"], [112, 2, 1, "", "static_is_array"], [112, 2, 1, "", "static_is_ivy_array"], [112, 2, 1, "", "static_is_ivy_container"], [112, 2, 1, "", "static_is_native_array"], [112, 2, 1, "", "static_scatter_flat"], [112, 2, 1, "", "static_scatter_nd"], [112, 2, 1, "", "static_stable_divide"], [112, 2, 1, "", "static_stable_pow"], [112, 2, 1, "", "static_supports_inplace_updates"], [112, 2, 1, "", "static_to_list"], [112, 2, 1, "", "static_to_numpy"], [112, 2, 1, "", "static_to_scalar"], [112, 2, 1, "", "static_value_is_nan"], [112, 2, 1, "", "supports_inplace_updates"], [112, 2, 1, "", "to_list"], [112, 2, 1, "", "to_numpy"], [112, 2, 1, "", "to_scalar"], [112, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[114, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[114, 2, 1, "", "adam_step"], [114, 2, 1, "", "adam_update"], [114, 2, 1, "", "gradient_descent_update"], [114, 2, 1, "", "is_variable"], [114, 2, 1, "", "lamb_update"], [114, 2, 1, "", "lars_update"], [114, 2, 1, "", "optimizer_update"], [114, 2, 1, "", "static_is_variable"], [114, 2, 1, "", "static_stop_gradient"], [114, 2, 1, "", "static_variable"], [114, 2, 1, "", "static_variable_data"], [114, 2, 1, "", "stop_gradient"], [114, 2, 1, "", "variable"], [114, 2, 1, "", "variable_data"]], "ivy.container.image": [[116, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[118, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[118, 2, 1, "", "conv1d"], [118, 2, 1, "", "conv1d_transpose"], [118, 2, 1, "", "conv2d"], [118, 2, 1, "", "conv2d_transpose"], [118, 2, 1, "", "conv3d"], [118, 2, 1, "", "conv3d_transpose"], [118, 2, 1, "", "depthwise_conv2d"], [118, 2, 1, "", "dropout"], [118, 2, 1, "", "linear"], [118, 2, 1, "", "lstm_update"], [118, 2, 1, "", "multi_head_attention"], [118, 2, 1, "", "scaled_dot_product_attention"], [118, 2, 1, "", "static_conv1d"], [118, 2, 1, "", "static_conv1d_transpose"], [118, 2, 1, "", "static_conv2d"], [118, 2, 1, "", "static_conv2d_transpose"], [118, 2, 1, "", "static_conv3d"], [118, 2, 1, "", "static_conv3d_transpose"], [118, 2, 1, "", "static_depthwise_conv2d"], [118, 2, 1, "", "static_dropout"], [118, 2, 1, "", "static_linear"], [118, 2, 1, "", "static_lstm_update"], [118, 2, 1, "", "static_multi_head_attention"], [118, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[120, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[120, 2, 1, "", "cholesky"], [120, 2, 1, "", "cross"], [120, 2, 1, "", "det"], [120, 2, 1, "", "diagonal"], [120, 2, 1, "", "eigh"], [120, 2, 1, "", "inner"], [120, 2, 1, "", "inv"], [120, 2, 1, "", "matmul"], [120, 2, 1, "", "matrix_norm"], [120, 2, 1, "", "matrix_power"], [120, 2, 1, "", "matrix_rank"], [120, 2, 1, "", "matrix_transpose"], [120, 2, 1, "", "outer"], [120, 2, 1, "", "pinv"], [120, 2, 1, "", "qr"], [120, 2, 1, "", "slogdet"], [120, 2, 1, "", "solve"], [120, 2, 1, "", "static_cholesky"], [120, 2, 1, "", "static_cross"], [120, 2, 1, "", "static_det"], [120, 2, 1, "", "static_diagonal"], [120, 2, 1, "", "static_inner"], [120, 2, 1, "", "static_inv"], [120, 2, 1, "", "static_matmul"], [120, 2, 1, "", "static_matrix_norm"], [120, 2, 1, "", "static_matrix_power"], [120, 2, 1, "", "static_matrix_rank"], [120, 2, 1, "", "static_matrix_transpose"], [120, 2, 1, "", "static_outer"], [120, 2, 1, "", "static_pinv"], [120, 2, 1, "", "static_qr"], [120, 2, 1, "", "static_slogdet"], [120, 2, 1, "", "static_solve"], [120, 2, 1, "", "static_svd"], [120, 2, 1, "", "static_svdvals"], [120, 2, 1, "", "static_tensordot"], [120, 2, 1, "", "static_trace"], [120, 2, 1, "", "static_vander"], [120, 2, 1, "", "static_vecdot"], [120, 2, 1, "", "static_vector_norm"], [120, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [120, 2, 1, "", "svd"], [120, 2, 1, "", "svdvals"], [120, 2, 1, "", "tensordot"], [120, 2, 1, "", "trace"], [120, 2, 1, "", "vander"], [120, 2, 1, "", "vecdot"], [120, 2, 1, "", "vector_norm"], [120, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[122, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[122, 2, 1, "", "binary_cross_entropy"], [122, 2, 1, "", "cross_entropy"], [122, 2, 1, "", "sparse_cross_entropy"], [122, 2, 1, "", "static_binary_cross_entropy"], [122, 2, 1, "", "static_cross_entropy"], [122, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[124, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[124, 2, 1, "", "clip"], [124, 2, 1, "", "concat"], [124, 2, 1, "", "constant_pad"], [124, 2, 1, "", "expand_dims"], [124, 2, 1, "", "flip"], [124, 2, 1, "", "permute_dims"], [124, 2, 1, "", "repeat"], [124, 2, 1, "", "reshape"], [124, 2, 1, "", "roll"], [124, 2, 1, "", "split"], [124, 2, 1, "", "squeeze"], [124, 2, 1, "", "stack"], [124, 2, 1, "", "static_clip"], [124, 2, 1, "", "static_concat"], [124, 2, 1, "", "static_constant_pad"], [124, 2, 1, "", "static_expand_dims"], [124, 2, 1, "", "static_flip"], [124, 2, 1, "", "static_permute_dims"], [124, 2, 1, "", "static_repeat"], [124, 2, 1, "", "static_reshape"], [124, 2, 1, "", "static_roll"], [124, 2, 1, "", "static_split"], [124, 2, 1, "", "static_squeeze"], [124, 2, 1, "", "static_stack"], [124, 2, 1, "", "static_swapaxes"], [124, 2, 1, "", "static_tile"], [124, 2, 1, "", "static_unstack"], [124, 2, 1, "", "static_zero_pad"], [124, 2, 1, "", "swapaxes"], [124, 2, 1, "", "tile"], [124, 2, 1, "", "unstack"], [124, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[126, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[126, 2, 1, "", "layer_norm"]], "ivy.container.random": [[128, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[128, 2, 1, "", "multinomial"], [128, 2, 1, "", "randint"], [128, 2, 1, "", "random_normal"], [128, 2, 1, "", "random_uniform"], [128, 2, 1, "", "shuffle"], [128, 2, 1, "", "static_multinomial"], [128, 2, 1, "", "static_randint"], [128, 2, 1, "", "static_random_normal"], [128, 2, 1, "", "static_random_uniform"], [128, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[130, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[130, 2, 1, "", "argmax"], [130, 2, 1, "", "argmin"], [130, 2, 1, "", "argwhere"], [130, 2, 1, "", "nonzero"], [130, 2, 1, "", "static_argmax"], [130, 2, 1, "", "static_argmin"], [130, 2, 1, "", "static_argwhere"], [130, 2, 1, "", "static_nonzero"], [130, 2, 1, "", "static_where"], [130, 2, 1, "", "where"]], "ivy.container.set": [[132, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[132, 2, 1, "", "static_unique_all"], [132, 2, 1, "", "static_unique_counts"], [132, 2, 1, "", "static_unique_inverse"], [132, 2, 1, "", "static_unique_values"], [132, 2, 1, "", "unique_all"], [132, 2, 1, "", "unique_counts"], [132, 2, 1, "", "unique_inverse"], [132, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[134, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[134, 2, 1, "", "argsort"], [134, 2, 1, "", "searchsorted"], [134, 2, 1, "", "sort"], [134, 2, 1, "", "static_argsort"], [134, 2, 1, "", "static_searchsorted"], [134, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[136, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[136, 2, 1, "", "cumprod"], [136, 2, 1, "", "cumsum"], [136, 2, 1, "", "einsum"], [136, 2, 1, "", "max"], [136, 2, 1, "", "mean"], [136, 2, 1, "", "min"], [136, 2, 1, "", "prod"], [136, 2, 1, "", "static_cumprod"], [136, 2, 1, "", "static_cumsum"], [136, 2, 1, "", "static_sum"], [136, 2, 1, "", "static_var"], [136, 2, 1, "", "std"], [136, 2, 1, "", "sum"], [136, 2, 1, "", "var"]], "ivy.container.utility": [[138, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[138, 2, 1, "", "all"], [138, 2, 1, "", "any"], [138, 2, 1, "", "static_all"], [138, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[140, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[182, 4, 1, "", "from_zero_dim_arrays_to_float"], [183, 4, 1, "", "handle_nestable"], [184, 4, 1, "", "handle_out_argument"], [185, 4, 1, "", "infer_device"], [186, 4, 1, "", "infer_dtype"], [187, 4, 1, "", "inputs_to_ivy_arrays"], [188, 4, 1, "", "inputs_to_native_arrays"], [189, 4, 1, "", "integer_arrays_to_float"], [190, 4, 1, "", "outputs_to_ivy_arrays"], [191, 4, 1, "", "to_native_arrays_and_back"], [181, 4, 1, "", "with_supported_device_and_dtypes"], [181, 4, 1, "", "with_supported_devices"], [181, 4, 1, "", "with_supported_dtypes"], [181, 4, 1, "", "with_unsupported_device_and_dtypes"], [181, 4, 1, "", "with_unsupported_devices"], [181, 4, 1, "", "with_unsupported_dtypes"]], "ivy.verbosity": [[1577, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"assert": [1, 151], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_isinst": 13, "check_less": 14, "check_shap": 15, "check_tru": 16, "backend": [17, 142, 155, 158, 163, 180], "handler": [17, 163], "choose_random_backend": 18, "clear_backend_stack": 19, "current_backend": 20, "fn_name_from_version_specific_fn_nam": 21, "get_backend": 22, "set_backend": 23, "set_backend_to_specific_vers": 24, "try_import_ivy_jax": 25, "try_import_ivy_numpi": 26, "try_import_ivy_tf": 27, "try_import_ivy_torch": 28, "unset_backend": 29, "background": [30, 1528], "ml": 31, "explos": 31, "standard": [32, 154], "skeptic": 32, "complimentari": 32, "v": [32, 180], "competit": 32, "do": [32, 148], "work": [32, 40], "The": [32, 36, 149, 165, 180], "arrai": [32, 42, 45, 144, 147, 152, 156, 165, 196, 201, 206, 211, 216, 221, 226, 239, 246, 250, 258, 264, 275, 280, 285, 293, 299, 304, 312, 319, 324, 329, 334, 352, 363, 370, 375, 380, 385, 392, 413, 433, 442, 447, 452, 457, 462, 467, 472, 477, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 682, 687, 692, 697, 702, 707, 712, 717, 722, 727, 732, 738, 743, 748, 753, 758, 763, 772, 783, 788, 793, 798, 806, 811, 818, 825, 828, 831, 837, 842, 849, 852, 857, 862, 867, 870, 877, 882, 894, 902, 908, 913, 918, 924, 929, 934, 939, 949, 954, 969, 974, 980, 986, 992, 997, 1008, 1014, 1018, 1024, 1033, 1037, 1041, 1047, 1054, 1059, 1066, 1071, 1076, 1085, 1090, 1098, 1103, 1110, 1115, 1120, 1125, 1131, 1136, 1141, 1147, 1152, 1156, 1159, 1164, 1169, 1174, 1183, 1188, 1193, 1198, 1203, 1208, 1213, 1219, 1224, 1229, 1234, 1239, 1244, 1249, 1254, 1259, 1264, 1269, 1275, 1280, 1285, 1290, 1295, 1300, 1305, 1310, 1315, 1320, 1325, 1330, 1336, 1341, 1346, 1351, 1378, 1383, 1388, 1393, 1398, 1404, 1410, 1415, 1420, 1425, 1431, 1437, 1442, 1447, 1452, 1457, 1462, 1467, 1473, 1478, 1483, 1487, 1491, 1495, 1499, 1503, 1508, 1513, 1518, 1523], "api": [32, 37, 142, 147, 152, 157, 163, 165, 167, 168], "why": [33, 148], "unifi": [33, 165], "No": [33, 35], "more": [33, 35, 154], "re": [33, 148], "implement": 33, "infinit": 33, "shelf": 33, "life": 33, "contribut": [34, 1528], "set": [35, 82, 131, 155, 1434], "up": 35, "clone": 35, "ivi": [35, 36, 37, 38, 142, 146, 148, 149, 150, 151, 152, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 236, 237, 239, 240, 241, 246, 247, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 264, 265, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 311, 312, 313, 314, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 337, 342, 343, 347, 348, 349, 352, 353, 354, 355, 357, 358, 360, 361, 363, 364, 365, 366, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 387, 388, 392, 393, 394, 395, 413, 414, 415, 416, 432, 433, 434, 435, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 697, 698, 699, 700, 702, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 737, 738, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 763, 764, 765, 766, 768, 769, 770, 772, 773, 774, 775, 779, 780, 781, 783, 784, 785, 786, 788, 789, 790, 791, 793, 794, 795, 796, 798, 799, 800, 801, 806, 807, 808, 809, 811, 812, 813, 814, 818, 819, 820, 821, 825, 826, 828, 829, 831, 832, 833, 834, 837, 838, 839, 840, 842, 843, 844, 845, 849, 850, 852, 853, 854, 855, 857, 858, 859, 860, 862, 863, 864, 865, 867, 868, 870, 871, 872, 873, 877, 878, 879, 880, 882, 883, 884, 885, 894, 895, 896, 897, 902, 903, 904, 905, 908, 909, 910, 911, 913, 914, 915, 916, 918, 919, 920, 921, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 936, 937, 939, 940, 941, 942, 949, 950, 951, 952, 954, 955, 956, 957, 969, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 985, 986, 987, 988, 991, 992, 993, 994, 996, 997, 998, 999, 1007, 1008, 1009, 1010, 1014, 1015, 1016, 1018, 1019, 1020, 1024, 1025, 1026, 1028, 1029, 1030, 1033, 1034, 1035, 1037, 1038, 1039, 1041, 1042, 1043, 1046, 1047, 1048, 1049, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1066, 1067, 1068, 1069, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1147, 1148, 1149, 1150, 1152, 1153, 1154, 1156, 1157, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1378, 1379, 1380, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1487, 1488, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1499, 1500, 1501, 1503, 1504, 1505, 1507, 1508, 1509, 1510, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526], "pycharm": [35, 36], "virtual": 35, "environ": 35, "docker": [35, 36, 40, 147], "us": [35, 40, 147, 166], "miniconda": [35, 40], "venv": [35, 40], "interpret": 35, "window": 35, "maco": 35, "ubuntu": 35, "test": [35, 36, 147, 148, 150, 152], "detail": 35, "hypothesi": [35, 148, 150], "log": [35, 611, 612, 613, 614], "github": [35, 152], "codespac": 35, "pre": [35, 143], "commit": [35, 36, 143], "basic": [36, 149], "get": 36, "help": [36, 39], "todo": 36, "list": 36, "issu": 36, "extens": [36, 37, 60, 109, 178, 761, 1528], "manag": 36, "your": 36, "fork": 36, "who": 36, "To": 36, "ask": 36, "With": 36, "command": 36, "line": 36, "browser": 36, "pull": [36, 152], "request": [36, 152], "small": 36, "often": 36, "interact": 36, "contain": [36, 92, 97, 157, 166, 197, 199, 202, 204, 207, 209, 212, 214, 217, 219, 222, 224, 227, 229, 237, 241, 251, 253, 256, 259, 261, 265, 267, 270, 273, 276, 278, 281, 283, 286, 288, 291, 294, 296, 298, 300, 303, 305, 308, 311, 313, 320, 322, 325, 327, 330, 332, 335, 337, 343, 347, 349, 353, 355, 358, 361, 364, 366, 371, 373, 376, 378, 381, 383, 386, 388, 393, 395, 414, 416, 432, 434, 443, 445, 448, 450, 453, 455, 458, 460, 463, 465, 468, 470, 473, 475, 478, 480, 483, 485, 488, 490, 493, 495, 498, 500, 503, 505, 508, 510, 513, 515, 518, 520, 523, 525, 528, 530, 533, 535, 538, 540, 543, 545, 548, 550, 553, 555, 558, 560, 563, 565, 568, 570, 573, 575, 578, 580, 583, 585, 588, 590, 593, 595, 598, 600, 603, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 670, 673, 675, 678, 680, 683, 685, 688, 690, 693, 695, 698, 700, 703, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 737, 739, 742, 744, 747, 749, 752, 754, 757, 759, 764, 766, 768, 770, 773, 775, 779, 781, 784, 786, 789, 791, 794, 796, 799, 801, 807, 809, 812, 814, 819, 821, 832, 834, 838, 840, 843, 845, 853, 855, 858, 860, 863, 865, 871, 873, 878, 880, 883, 885, 895, 897, 903, 905, 909, 911, 914, 916, 919, 921, 925, 927, 930, 932, 935, 937, 940, 942, 950, 952, 955, 957, 970, 972, 975, 977, 979, 981, 985, 987, 991, 993, 996, 998, 1007, 1009, 1015, 1019, 1025, 1028, 1030, 1034, 1038, 1042, 1046, 1048, 1053, 1055, 1058, 1060, 1067, 1069, 1072, 1074, 1077, 1079, 1081, 1083, 1086, 1088, 1091, 1093, 1099, 1101, 1104, 1106, 1111, 1113, 1116, 1118, 1121, 1123, 1126, 1128, 1132, 1134, 1137, 1139, 1142, 1144, 1148, 1150, 1153, 1160, 1162, 1165, 1167, 1170, 1172, 1175, 1177, 1179, 1181, 1184, 1186, 1189, 1191, 1194, 1196, 1199, 1201, 1204, 1206, 1209, 1211, 1214, 1216, 1218, 1220, 1223, 1225, 1228, 1230, 1233, 1235, 1238, 1240, 1243, 1245, 1248, 1250, 1253, 1255, 1260, 1262, 1265, 1267, 1270, 1272, 1276, 1278, 1281, 1283, 1286, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1306, 1308, 1311, 1313, 1316, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1335, 1337, 1340, 1342, 1345, 1347, 1350, 1352, 1379, 1384, 1386, 1389, 1391, 1394, 1396, 1399, 1401, 1405, 1407, 1411, 1413, 1416, 1418, 1421, 1423, 1426, 1428, 1430, 1432, 1436, 1438, 1441, 1443, 1446, 1448, 1451, 1453, 1458, 1460, 1463, 1465, 1468, 1470, 1474, 1476, 1479, 1481, 1484, 1488, 1492, 1496, 1500, 1504, 1507, 1509, 1512, 1514, 1519, 1521, 1524, 1526], "run": [36, 147, 148], "local": 36, "most": 36, "out": [36, 144, 160], "id": [36, 147], "open": 37, "task": 37, "function": [37, 142, 144, 148, 149, 151, 153, 157, 158, 159, 161, 163, 168, 180], "format": [37, 143], "checklist": 37, "frontend": [37, 149, 150, 152, 155, 168], "where": [37, 1429, 1431, 1432, 1433], "place": 37, "appli": [38, 179], "librari": [38, 179], "introduct": [38, 149, 150], "exampl": [38, 144, 146, 150, 154], "robot": [38, 176, 179], "resourc": 39, "build": [40, 163], "doc": 40, "dockerless": 40, "document": 40, "pipelin": [40, 148, 152, 180], "make_doc": 40, "sh": 40, "entrypoint": 40, "_make_doc": 40, "generate_src_rst_fil": 40, "py": 40, "sphinx": 40, "correct_built_html_fil": 40, "remove_fil": 40, "data": [41, 54, 103, 148, 149, 158, 166, 180, 315], "class": [41, 149, 151, 165, 1535], "activ": [43, 93, 193, 1536], "arraywithactiv": 44, "convers": [47, 99], "args_to_ivi": 48, "args_to_n": 49, "to_ivi": 50, "to_n": 51, "creation": [52, 101, 233], "arraywithcr": 53, "type": [54, 103, 149, 153, 158, 180, 315], "arraywithdatatyp": 55, "devic": [56, 105, 144, 149, 159, 406], "arraywithdevic": 57, "elementwis": [58, 107, 440], "arraywithelementwis": 59, "arraywithextens": 61, "gener": [62, 111, 148, 154, 816], "arraywithgener": 63, "gradient": [64, 113, 1012], "arraywithgradi": 65, "imag": [66, 115], "arraywithimag": 67, "layer": [68, 117, 1063, 1551], "arraywithlay": 69, "linear": [70, 119, 1109, 1110, 1111, 1112, 1129, 1561], "algebra": [70, 119, 1129], "arraywithlinearalgebra": 71, "loss": [72, 121, 1257], "arraywithloss": 73, "manipul": [74, 123, 1273], "arraywithmanipul": 75, "norm": [76, 125, 1376, 1565], "arraywithnorm": 77, "random": [78, 127, 1381], "arraywithrandom": 79, "search": [80, 129, 1408], "arraywithsearch": 81, "arraywithset": 83, "sort": [84, 133, 1455, 1466, 1467, 1468, 1469], "arraywithsort": 85, "statist": [86, 135, 1471], "arraywithstatist": 87, "util": [88, 137, 1516], "arraywithutil": 89, "wrap": [90, 139, 161], "add_ivy_array_instance_method": 91, "containerwithactiv": 94, "base": 95, "containerbas": 96, "containerwithconvers": 100, "containerwithcr": 102, "containerwithdatatyp": 104, "containerwithdevic": 106, "containerwithelementwis": 108, "containerwithextens": 110, "containerwithgener": 112, "containerwithgradi": 114, "containerwithimag": 116, "containerwithlay": 118, "containerwithlinearalgebra": 120, "containerwithloss": 122, "containerwithmanipul": 124, "containerwithnorm": 126, "containerwithrandom": 128, "containerwithsearch": 130, "containerwithset": 132, "containerwithsort": 134, "containerwithstatist": 136, "containerwithutil": 138, "add_ivy_container_instance_method": 140, "deep": 141, "dive": 141, "navig": 142, "code": 142, "categor": 142, "submodul": 142, "design": [142, 162, 1528], "helper": [142, 148, 150], "version": [142, 155, 180], "pin": 142, "lint": 143, "check": [143, 180], "hook": 143, "argument": [144, 149, 158, 159, 160], "posit": [144, 681, 682, 683, 684], "keyword": 144, "dtype": [144, 346, 347, 348], "number": 144, "oper": [144, 165, 180], "integ": 144, "sequenc": 144, "nestabl": [144, 153, 157], "docstr": [145, 146], "tan": [146, 150, 741, 743, 744, 745], "roll": [146, 1314, 1315, 1316, 1317], "add": [146, 150, 456, 457, 458, 459], "bash": 147, "file": 147, "skip": 147, "import": 148, "strategi": 148, "integr": [148, 152], "we": 148, "need": 148, "how": 148, "write": 148, "effect": 148, "bonu": 148, "extend": [148, 154], "featur": 148, "self": 148, "consist": 148, "explicit": 148, "test_array_funct": 148, "fail": 148, "unus": 149, "composit": [149, 153], "miss": 149, "temporari": 149, "support": [149, 155, 158, 180], "instanc": [149, 150, 157, 165], "method": [149, 150, 157, 165, 166], "promot": [149, 158], "rule": 149, "numpi": 149, "special": [149, 150, 157], "cast": 149, "full": [150, 262], "except": 151, "handl": [151, 156, 180], "handle_except": 151, "decor": 151, "continu": 152, "action": 152, "core": 152, "nn": 152, "state": [152, 167, 180], "ci": 152, "push": 152, "schedul": 152, "cron": 152, "job": 152, "dashboard": 152, "primari": 153, "mix": 153, "standalon": 153, "conveni": 153, "superset": [154, 158], "behaviour": 154, "what": 154, "i": 154, "A": 154, "non": 154, "duplic": 154, "when": 154, "too": 154, "much": 154, "balanc": 154, "effici": 154, "nativ": 156, "static": 157, "modul": [158, 159, 167, 1563, 1564], "other": [158, 159], "unsupport": 158, "bug": 158, "inplac": 160, "updat": 160, "copi": 160, "block": 163, "graph": [163, 168], "compil": [163, 168, 230, 231], "framework": [164, 1535], "monkei": 165, "patch": 165, "construct": 166, "represent": 166, "recurs": 166, "built": 166, "ins": 166, "access": 166, "save": 166, "load": 166, "comparison": 166, "custom": [166, 180], "case": 166, "compartment": 166, "configur": 166, "network": [166, 168], "weight": 166, "initi": [167, 1541, 1545], "optim": [167, 1567, 1571], "transpil": 168, "role": 168, "convert": [168, 1539], "model": [168, 175, 180], "builder": 170, "ecosystem": 171, "gym": [172, 179], "mech": 173, "memori": [174, 179], "vision": [177, 179], "mechan": 179, "faq": 180, "maintain": 180, "dynam": 180, "size": 180, "shape": [180, 966], "gpu": 180, "deploy": 180, "control": 180, "flow": 180, "auto": 180, "differenti": 180, "replica": 180, "parallel": 180, "altern": 180, "structur": 180, "func": 181, "wrapper": 181, "from_zero_dim_arrays_to_float": 182, "handle_nest": 183, "handle_out_argu": 184, "infer_devic": 185, "infer_dtyp": 186, "inputs_to_ivy_arrai": 187, "inputs_to_native_arrai": 188, "integer_arrays_to_float": 189, "outputs_to_ivy_arrai": 190, "to_native_arrays_and_back": 191, "deseri": 194, "gelu": [195, 196, 197, 198, 1538], "static_gelu": 199, "leaky_relu": [200, 201, 202, 203], "static_leaky_relu": 204, "log_softmax": [205, 206, 207, 208], "static_log_softmax": 209, "relu": [210, 211, 212, 213], "static_relu": 214, "sigmoid": [215, 216, 217, 218], "static_sigmoid": 219, "softmax": [220, 221, 222, 223], "static_softmax": 224, "softplu": [225, 226, 227, 228], "static_softplu": 229, "constant": [232, 1542], "nestedsequ": 234, "arang": [235, 236], "static_arang": 237, "asarrai": [238, 239, 240], "static_asarrai": 241, "asarray_handle_nest": 242, "asarray_infer_devic": 243, "asarray_to_native_arrays_and_back": 244, "copy_arrai": [245, 246, 247], "empti": 248, "empty_lik": [249, 250, 251, 252], "static_empty_lik": 253, "ey": [254, 255], "static_ey": 256, "from_dlpack": [257, 258, 259, 260], "static_from_dlpack": 261, "full_lik": [263, 264, 265, 266], "static_full_lik": 267, "linspac": [268, 269], "static_linspac": 270, "logspac": [271, 272], "static_logspac": 273, "meshgrid": [274, 275, 276, 277], "static_meshgrid": 278, "native_arrai": [279, 280, 281, 282], "static_native_arrai": 283, "one_hot": [284, 285, 286, 287], "static_one_hot": 288, "ones": [289, 290], "static_on": 291, "ones_lik": [292, 293, 294, 295], "static_ones_lik": 296, "tril": [297, 299, 300, 301], "static_tril": 298, "triu": [302, 304, 305, 306], "static_triu": 303, "zero": [307, 309, 1550], "static_zero": 308, "zeros_lik": [310, 312, 313, 314], "static_zeros_lik": 311, "as_ivy_dtyp": 316, "as_native_dtyp": 317, "astyp": [318, 319, 320, 321], "static_astyp": 322, "broadcast_arrai": [323, 324, 325, 326], "static_broadcast_arrai": 327, "broadcast_to": [328, 329, 330, 331], "static_broadcast_to": 332, "can_cast": [333, 334, 335, 336], "static_can_cast": 337, "check_float": 338, "closest_valid_dtyp": 339, "default_dtyp": 340, "default_float_dtyp": [341, 342], "static_default_float_dtyp": 343, "default_int_dtyp": 344, "default_uint_dtyp": 345, "static_dtyp": 349, "dtype_bit": 350, "finfo": [351, 352, 353, 354], "static_finfo": 355, "function_supported_dtyp": [356, 357], "static_function_supported_dtyp": 358, "function_unsupported_dtyp": [359, 360], "static_function_unsupported_dtyp": 361, "iinfo": [362, 363, 364, 365], "static_iinfo": 366, "infer_default_dtyp": 367, "invalid_dtyp": 368, "is_bool_dtyp": [369, 370, 371, 372], "static_is_bool_dtyp": 373, "is_float_dtyp": [374, 375, 376, 377], "static_is_float_dtyp": 378, "is_int_dtyp": [379, 380, 381, 382], "static_is_int_dtyp": 383, "is_uint_dtyp": [384, 385, 386, 387], "static_is_uint_dtyp": 388, "promote_typ": 389, "promote_types_of_input": 390, "result_typ": [391, 392, 393, 394], "static_result_typ": 395, "set_default_dtyp": 396, "set_default_float_dtyp": 397, "set_default_int_dtyp": 398, "set_default_uint_dtyp": 399, "type_promote_arrai": 400, "unset_default_dtyp": 401, "unset_default_float_dtyp": 402, "unset_default_int_dtyp": 403, "unset_default_uint_dtyp": 404, "valid_dtyp": 405, "profil": 407, "as_ivy_dev": 408, "as_native_dev": 409, "clear_mem_on_dev": 410, "default_devic": 411, "dev": [412, 413, 414, 415], "static_dev": 416, "dev_util": 417, "function_supported_devic": 418, "function_unsupported_devic": 419, "get_all_ivy_arrays_on_dev": 420, "gpu_is_avail": 421, "num_cpu_cor": 422, "num_gpu": 423, "num_ivy_arrays_on_dev": 424, "percent_used_mem_on_dev": 425, "print_all_ivy_arrays_on_dev": 426, "set_default_devic": 427, "set_split_factor": 428, "split_factor": 429, "split_func_cal": 430, "to_devic": [431, 433, 434, 435], "static_to_devic": 432, "total_mem_on_dev": 436, "tpu_is_avail": 437, "unset_default_devic": 438, "used_mem_on_dev": 439, "ab": [441, 442, 443, 444], "static_ab": 445, "aco": [446, 447, 448, 449], "static_aco": 450, "acosh": [451, 452, 453, 454], "static_acosh": 455, "static_add": 460, "asin": [461, 462, 463, 464], "static_asin": 465, "asinh": [466, 467, 468, 469], "static_asinh": 470, "atan": [471, 472, 473, 474], "static_atan": 475, "atan2": [476, 477, 478, 479], "static_atan2": 480, "atanh": [481, 482, 483, 484], "static_atanh": 485, "bitwise_and": [486, 487, 488, 489], "static_bitwise_and": 490, "bitwise_invert": [491, 492, 493, 494], "static_bitwise_invert": 495, "bitwise_left_shift": [496, 497, 498, 499], "static_bitwise_left_shift": 500, "bitwise_or": [501, 502, 503, 504], "static_bitwise_or": 505, "bitwise_right_shift": [506, 507, 508, 509], "static_bitwise_right_shift": 510, "bitwise_xor": [511, 512, 513, 514], "static_bitwise_xor": 515, "ceil": [516, 517, 518, 519], "static_ceil": 520, "co": [521, 522, 523, 524], "static_co": 525, "cosh": [526, 527, 528, 529], "static_cosh": 530, "deg2rad": [531, 532, 533, 534], "static_deg2rad": 535, "divid": [536, 537, 538, 539], "static_divid": 540, "equal": [541, 542, 543, 544], "static_equ": 545, "erf": [546, 547, 548, 549], "static_erf": 550, "exp": [551, 552, 553, 554], "static_exp": 555, "expm1": [556, 557, 558, 559], "static_expm1": 560, "floor": [561, 562, 563, 564], "static_floor": 565, "floor_divid": [566, 567, 568, 569], "static_floor_divid": 570, "greater": [571, 572, 573, 574], "static_great": 575, "greater_equ": [576, 577, 578, 579], "static_greater_equ": 580, "isfinit": [581, 582, 583, 584], "static_isfinit": 585, "isinf": [586, 587, 588, 589], "static_isinf": 590, "isnan": [591, 592, 593, 594], "static_isnan": 595, "isreal": [596, 597, 598, 599], "static_isr": 600, "less": [601, 602, 603, 604], "static_less": 605, "less_equ": [606, 607, 608, 609], "static_less_equ": 610, "static_log": 615, "log10": [616, 617, 618, 619], "static_log10": 620, "log1p": [621, 622, 623, 624], "static_log1p": 625, "log2": [626, 627, 628, 629], "static_log2": 630, "logaddexp": [631, 632, 633, 634], "static_logaddexp": 635, "logical_and": [636, 637, 638, 639], "static_logical_and": 640, "logical_not": [641, 642, 643, 644], "static_logical_not": 645, "logical_or": [646, 647, 648, 649], "static_logical_or": 650, "logical_xor": [651, 652, 653, 654], "static_logical_xor": 655, "maximum": [656, 657, 658, 659], "static_maximum": 660, "minimum": [661, 662, 663, 664], "static_minimum": 665, "multipli": [666, 667, 668, 669], "static_multipli": 670, "neg": [671, 672, 673, 674], "static_neg": 675, "not_equ": [676, 677, 678, 679], "static_not_equ": 680, "static_posit": 685, "pow": [686, 687, 688, 689], "static_pow": 690, "rad2deg": [691, 692, 693, 694], "static_rad2deg": 695, "reciproc": [696, 697, 698, 699], "static_reciproc": 700, "remaind": [701, 702, 703, 704], "static_remaind": 705, "round": [706, 707, 708, 709], "static_round": 710, "sign": [711, 712, 713, 714], "static_sign": 715, "sin": [716, 717, 718, 719], "static_sin": 720, "sinh": [721, 722, 723, 724], "static_sinh": 725, "sqrt": [726, 727, 728, 729], "static_sqrt": 730, "squar": [731, 732, 733, 734], "static_squar": 735, "subtract": [736, 738, 739, 740], "static_subtract": 737, "static_tan": 742, "tanh": [746, 748, 749, 750], "static_tanh": 747, "trunc": [751, 753, 754, 755], "static_trunc": 752, "trunc_divid": [756, 758, 759, 760], "static_trunc_divid": 757, "flatten": [762, 763, 764, 765], "static_flatten": 766, "hann_window": [767, 768, 769], "static_hann_window": 770, "heavisid": [771, 772, 773, 774], "static_heavisid": 775, "is_ivy_sparse_arrai": 776, "is_native_sparse_arrai": 777, "kaiser_window": [778, 779, 780], "static_kaiser_window": 781, "lcm": [782, 783, 784, 785], "static_lcm": 786, "max_pool2d": [787, 788, 789, 790], "static_max_pool2d": 791, "median": [792, 793, 794, 795], "static_median": 796, "moveaxi": [797, 798, 799, 800], "static_moveaxi": 801, "native_sparse_arrai": 802, "native_sparse_array_to_indices_values_and_shap": 803, "ndenumer": 804, "pad": [805, 806, 807, 808], "static_pad": 809, "sinc": [810, 811, 812, 813], "static_sinc": 814, "vorbis_window": 815, "all_equ": [817, 818, 819, 820], "static_all_equ": 821, "arg_info": 822, "arg_nam": 823, "array_equ": [824, 825, 826], "arrays_equ": [827, 828, 829], "assert_supports_inplac": [830, 831, 832, 833], "static_assert_supports_inplac": 834, "cache_fn": 835, "clip_matrix_norm": [836, 837, 838, 839], "static_clip_matrix_norm": 840, "clip_vector_norm": [841, 842, 843, 844], "static_clip_vector_norm": 845, "container_typ": 846, "current_backend_str": 847, "default": [848, 849, 850], "einops_rearrang": [851, 852, 853, 854], "static_einops_rearrang": 855, "einops_reduc": [856, 857, 858, 859], "static_einops_reduc": 860, "einops_repeat": [861, 862, 863, 864], "static_einops_repeat": 865, "exist": [866, 867, 868], "fourier_encod": [869, 870, 871, 872], "static_fourier_encod": 873, "function_supported_devices_and_dtyp": 874, "function_unsupported_devices_and_dtyp": 875, "gather": [876, 877, 878, 879], "static_gath": 880, "gather_nd": [881, 882, 883, 884], "static_gather_nd": 885, "get_all_arrays_in_memori": 886, "get_array_mod": 887, "get_exception_trace_mod": 888, "get_item": 889, "get_min_bas": 890, "get_min_denomin": 891, "get_nestable_mod": 892, "get_num_dim": [893, 894, 895, 896], "static_get_num_dim": 897, "get_queue_timeout": 898, "get_referrers_recurs": 899, "get_tmp_dir": 900, "has_nan": [901, 902, 903, 904], "static_has_nan": 905, "inplace_arrays_support": 906, "inplace_decr": [907, 908, 909, 910], "static_inplace_decr": 911, "inplace_incr": [912, 913, 914, 915], "static_inplace_incr": 916, "inplace_upd": [917, 918, 919, 920], "static_inplace_upd": 921, "inplace_variables_support": 922, "is_arrai": [923, 924, 925, 926], "static_is_arrai": 927, "is_ivy_arrai": [928, 929, 930, 931], "static_is_ivy_arrai": 932, "is_ivy_contain": [933, 934, 935, 936], "static_is_ivy_contain": 937, "is_native_arrai": [938, 939, 940, 941], "static_is_native_arrai": 942, "isscalar": 943, "match_kwarg": 944, "multiprocess": 945, "num_arrays_in_memori": 946, "print_all_arrays_in_memori": 947, "scatter_flat": [948, 949, 950, 951], "static_scatter_flat": 952, "scatter_nd": [953, 954, 955, 956], "static_scatter_nd": 957, "set_array_mod": 958, "set_exception_trace_mod": 959, "set_min_bas": 960, "set_min_denomin": 961, "set_nestable_mod": 962, "set_queue_timeout": 963, "set_shape_array_mod": 964, "set_tmp_dir": 965, "shape_array_mod": 967, "stable_divid": [968, 969, 970, 971], "static_stable_divid": 972, "stable_pow": [973, 974, 975, 976], "static_stable_pow": 977, "supports_inplace_upd": [978, 980, 981, 982], "static_supports_inplace_upd": 979, "to_ivy_shap": 983, "to_list": [984, 986, 987, 988], "static_to_list": 985, "to_native_shap": 989, "to_numpi": [990, 992, 993, 994], "static_to_numpi": 991, "to_scalar": [995, 997, 998, 999], "static_to_scalar": 996, "try_else_non": 1000, "unset_array_mod": 1001, "unset_exception_trace_mod": 1002, "unset_nestable_mod": 1003, "unset_queue_timeout": 1004, "unset_shape_array_mod": 1005, "value_is_nan": [1006, 1008, 1009, 1010], "static_value_is_nan": 1007, "vmap": 1011, "adam_step": [1013, 1014, 1015, 1016], "adam_upd": [1017, 1018, 1019, 1020], "execute_with_gradi": 1021, "grad": 1022, "gradient_descent_upd": [1023, 1024, 1025, 1026], "is_vari": [1027, 1028, 1029], "static_is_vari": 1030, "jac": 1031, "lamb_upd": [1032, 1033, 1034, 1035], "lars_upd": [1036, 1037, 1038, 1039], "optimizer_upd": [1040, 1041, 1042, 1043], "set_with_grad": 1044, "stop_gradi": [1045, 1047, 1048, 1049], "static_stop_gradi": 1046, "unset_with_grad": 1050, "value_and_grad": 1051, "variabl": [1052, 1054, 1055, 1056], "static_vari": 1053, "variable_data": [1057, 1059, 1060, 1061], "static_variable_data": 1058, "with_grad": 1062, "conv": 1064, "conv1d": [1065, 1066, 1067, 1068, 1552], "static_conv1d": 1069, "conv1d_transpos": [1070, 1071, 1072, 1073], "static_conv1d_transpos": 1074, "conv2d": [1075, 1076, 1077, 1078, 1554], "static_conv2d": 1079, "conv2d_transpos": [1080, 1081, 1082], "static_conv2d_transpos": 1083, "conv3d": [1084, 1085, 1086, 1087, 1556], "static_conv3d": 1088, "conv3d_transpos": [1089, 1090, 1091, 1092], "static_conv3d_transpos": 1093, "conv_general_dil": 1094, "conv_general_transpos": 1095, "deconv_length": 1096, "depthwise_conv2d": [1097, 1098, 1099, 1100], "static_depthwise_conv2d": 1101, "dropout": [1102, 1103, 1104, 1105, 1559], "static_dropout": 1106, "get_x_data_format": 1107, "handle_pad": 1108, "static_linear": 1113, "lstm_updat": [1114, 1115, 1116, 1117], "static_lstm_upd": 1118, "multi_head_attent": [1119, 1120, 1121, 1122], "static_multi_head_attent": 1123, "scaled_dot_product_attent": [1124, 1125, 1126, 1127], "static_scaled_dot_product_attent": 1128, "choleski": [1130, 1131, 1132, 1133], "static_choleski": 1134, "cross": [1135, 1136, 1137, 1138], "static_cross": 1139, "det": [1140, 1141, 1142, 1143], "static_det": 1144, "diag": 1145, "diagon": [1146, 1147, 1148, 1149], "static_diagon": 1150, "eigh": [1151, 1152, 1153, 1154], "eigvalsh": [1155, 1156, 1157], "inner": [1158, 1159, 1160, 1161], "static_inn": 1162, "inv": [1163, 1164, 1165, 1166], "static_inv": 1167, "matmul": [1168, 1169, 1170, 1171], "static_matmul": 1172, "matrix_norm": [1173, 1174, 1175, 1176], "static_matrix_norm": 1177, "matrix_pow": [1178, 1179, 1180], "static_matrix_pow": 1181, "matrix_rank": [1182, 1183, 1184, 1185], "static_matrix_rank": 1186, "matrix_transpos": [1187, 1188, 1189, 1190], "static_matrix_transpos": 1191, "outer": [1192, 1193, 1194, 1195], "static_out": 1196, "pinv": [1197, 1198, 1199, 1200], "static_pinv": 1201, "qr": [1202, 1203, 1204, 1205], "static_qr": 1206, "slogdet": [1207, 1208, 1209, 1210], "static_slogdet": 1211, "solv": [1212, 1213, 1214, 1215], "static_solv": 1216, "svd": [1217, 1219, 1220, 1221], "static_svd": 1218, "svdval": [1222, 1224, 1225, 1226], "static_svdv": 1223, "tensordot": [1227, 1229, 1230, 1231], "static_tensordot": 1228, "trace": [1232, 1234, 1235, 1236], "static_trac": 1233, "vander": [1237, 1239, 1240, 1241], "static_vand": 1238, "vecdot": [1242, 1244, 1245, 1246], "static_vecdot": 1243, "vector_norm": [1247, 1249, 1250, 1251], "static_vector_norm": 1248, "vector_to_skew_symmetric_matrix": [1252, 1254, 1255, 1256], "static_vector_to_skew_symmetric_matrix": 1253, "binary_cross_entropi": [1258, 1259, 1260, 1261], "static_binary_cross_entropi": 1262, "cross_entropi": [1263, 1264, 1265, 1266], "static_cross_entropi": 1267, "sparse_cross_entropi": [1268, 1269, 1270, 1271], "static_sparse_cross_entropi": 1272, "clip": [1274, 1275, 1276, 1277], "static_clip": 1278, "concat": [1279, 1280, 1281, 1282], "static_concat": 1283, "constant_pad": [1284, 1285, 1286, 1287], "static_constant_pad": 1288, "expand_dim": [1289, 1290, 1291, 1292], "static_expand_dim": 1293, "flip": [1294, 1295, 1296, 1297], "static_flip": 1298, "permute_dim": [1299, 1300, 1301, 1302], "static_permute_dim": 1303, "repeat": [1304, 1305, 1306, 1307], "static_repeat": 1308, "reshap": [1309, 1310, 1311, 1312], "static_reshap": 1313, "static_rol": 1318, "split": [1319, 1320, 1321, 1322], "static_split": 1323, "squeez": [1324, 1325, 1326, 1327], "static_squeez": 1328, "stack": [1329, 1330, 1331, 1332], "static_stack": 1333, "swapax": [1334, 1336, 1337, 1338], "static_swapax": 1335, "tile": [1339, 1341, 1342, 1343], "static_til": 1340, "unstack": [1344, 1346, 1347, 1348], "static_unstack": 1345, "zero_pad": [1349, 1351, 1352, 1353], "static_zero_pad": 1350, "meta": 1354, "fomaml_step": 1355, "maml_step": 1356, "reptile_step": 1357, "nest": 1358, "all_nested_indic": 1359, "copy_nest": 1360, "index_nest": 1361, "insert_into_nest_at_index": 1362, "insert_into_nest_at_indic": 1363, "map": 1364, "map_nest_at_index": 1365, "map_nest_at_indic": 1366, "multi_index_nest": 1367, "nested_ani": 1368, "nested_argwher": 1369, "nested_map": 1370, "nested_multi_map": 1371, "prune_nest_at_index": 1372, "prune_nest_at_indic": 1373, "set_nest_at_index": 1374, "set_nest_at_indic": 1375, "layer_norm": [1377, 1378, 1379, 1380], "multinomi": [1382, 1383, 1384, 1385], "static_multinomi": 1386, "randint": [1387, 1388, 1389, 1390], "static_randint": 1391, "random_norm": [1392, 1393, 1394, 1395], "static_random_norm": 1396, "random_uniform": [1397, 1398, 1399, 1400], "static_random_uniform": 1401, "seed": 1402, "shuffl": [1403, 1404, 1405, 1406], "static_shuffl": 1407, "argmax": [1409, 1410, 1411, 1412], "static_argmax": 1413, "argmin": [1414, 1415, 1416, 1417], "static_argmin": 1418, "argwher": [1419, 1420, 1421, 1422], "static_argwher": 1423, "nonzero": [1424, 1425, 1426, 1427], "static_nonzero": 1428, "static_wher": 1430, "unique_al": [1435, 1437, 1438, 1439], "static_unique_al": 1436, "unique_count": [1440, 1442, 1443, 1444], "static_unique_count": 1441, "unique_invers": [1445, 1447, 1448, 1449], "static_unique_invers": 1446, "unique_valu": [1450, 1452, 1453, 1454], "static_unique_valu": 1451, "argsort": [1456, 1457, 1458, 1459], "static_argsort": 1460, "searchsort": [1461, 1462, 1463, 1464], "static_searchsort": 1465, "static_sort": 1470, "cumprod": [1472, 1473, 1474, 1475], "static_cumprod": 1476, "cumsum": [1477, 1478, 1479, 1480], "static_cumsum": 1481, "einsum": [1482, 1483, 1484, 1485], "max": [1486, 1487, 1488, 1489], "mean": [1490, 1491, 1492, 1493], "min": [1494, 1495, 1496, 1497], "prod": [1498, 1499, 1500, 1501], "std": [1502, 1503, 1504, 1505], "sum": [1506, 1508, 1509, 1510], "static_sum": 1507, "var": [1511, 1513, 1514, 1515], "static_var": 1512, "all": [1517, 1518, 1519, 1520], "static_al": 1521, "ani": [1522, 1523, 1524, 1525], "static_ani": 1526, "glossari": 1527, "content": 1528, "overview": 1528, "quick": 1528, "start": 1528, "roadmap": [1528, 1534], "citat": 1528, "inspect": 1531, "add_array_spec": 1532, "fn_array_spec": 1533, "geglu": 1537, "to_ivy_modul": 1540, "firstlayersiren": 1543, "glorotuniform": 1544, "kaimingnorm": 1546, "Ones": 1547, "siren": 1548, "uniform": 1549, "conv1dtranspos": 1553, "conv2dtranspos": 1555, "conv3dtranspos": 1557, "depthwiseconv2d": 1558, "lstm": 1560, "multiheadattent": 1562, "layernorm": 1566, "adam": 1568, "lamb": 1569, "lar": 1570, "sgd": 1572, "sequenti": [1573, 1574], "verbos": 1576, "cprint": 1577}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})